gplink-0.13.7 beta
Copyright (c) 1998-2005 gputils project
Listing File Generated: 3-2-2011  20:35:18
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;==============================================================================
                                           ;    serial.asm
                                           ;==============================================================================
                                           
                                           list p=18f4520
                                           #include <p18f4520.inc>
                                                   LIST
                                           
                                           ;==========================================================================
                                           ;  MPASM PIC18F4520 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2007 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           
                                           ; -- Externals From main.asm --------------------------------------------------
                                               extern      MAIN_TEMP
                                           
                                           ; -- Externals From host_bus.asm ----------------------------------------------
                                               extern      HI_ADDR
                                               extern      LO_ADDR
                                               extern      DREG
                                           
                                               extern      ensure_master
                                               extern      revert_master
                                               extern      io_read
                                               extern      io_write
                                               extern      mem_read
                                               extern      mem_write
                                               extern      get_reset
                                               extern      get_slave
                                               extern      get_dma
                                           
                                           ; -- Externals From boot.asm --------------------------------------------------
                                               extern      boot_update
                                           
                                             UDATA
                                           
                                           RX_MODE RES     1
                                           ; -- RX MODE CONSTANTS --------------------------------------------------------
                                           RX_COM  EQU     0
                                           RX_LEN  EQU     1
                                           RX_DAT  EQU     2
                                           RX_CKS  EQU     3
                                           RX_BSY  EQU     4
                                           
                                           RX_COMMAND      RES     1
                                           RX_COUNT        RES     1
                                           RX_CHECKSUM     RES     1
                                           RX_FLAGS        RES     1
                                           ; -- FLAG VALUES --------------------------------------------------------------
                                           CHECKSUM_FAIL   EQU     0x01
                                           
                                           TX_CHECKSUM     RES     1
                                           TX_COUNT        RES     1
                                           JUMP_REG        RES     1
                                             
                                             CODE
                                           ;== Serial Console Functions ==================================================
                                           
                                           ;******************************************************************************
                                           ;*                                                                            *
                                           ;* serial_init - set up the serial port for PC comms                          *
                                           ;*                                                                            *
                                           ;* Inputs:  NONE                                                              *
                                           ;* Outputs: NONE                                                              *
                                           ;* Called:                                                                    *
                                           ;* Changes: SPBRG, RCSTA, TXSTA, BAUDCON, TRISC, RCON, PIR1, PIE1, INTCON     *
                                           ;*                                                                            *
                                           ;******************************************************************************
                                           
                                           serial_init
000042   6b84     clrf	0x84, 0x1               clrf        RX_FLAGS
000044   0e01     movlw	0x1                    movlw       0x01
000046   6eea     movwf	0xea, 0                movwf       FSR0H           ; set FSR0 to BANK1, RX Buffer
000048   6ae9     clrf	0xe9, 0                 clrf        FSR0L
00004a   0e02     movlw	0x2                    movlw       0x02
00004c   6ee2     movwf	0xe2, 0                movwf       FSR1H           ; set FSR1 to BANK2, TX Buffer
00004e   6ae1     clrf	0xe1, 0                 clrf        FSR1L
000050   0e00     movlw	0                      movlw       RX_COM
000052   6f80     movwf	0x80, 0x1              movwf       RX_MODE         ; set RX_MODE to look for a command
                                               ; first make sure that the RX and TX are both set input, hardware changes
                                               ; this once the UART is enabled
000054   0ec0     movlw	0xc0                   movlw       b'11000000'
000056   1294     iorwf	0x94, 0x1, 0           iorwf       TRISC,f
                                           
                                               ; next set the UART up
000058   0e10     movlw	0x10                   movlw       0x10
00005a   6eaf     movwf	0xaf, 0                movwf       SPBRG
00005c   0e04     movlw	0x4                    movlw       0x04
00005e   6eb0     movwf	0xb0, 0                movwf       SPBRGH          ; 9600 baud high speed 16 bit mode
000060   0e24     movlw	0x24                   movlw       b'00100100'     ; enable sending, 8-bit, high speed baud rate
000062   6eac     movwf	0xac, 0                movwf       TXSTA
000064   0e10     movlw	0x10                   movlw       b'00010000'     ; enable receiving 8-bit
000066   6eab     movwf	0xab, 0                movwf       RCSTA
000068   0e08     movlw	0x8                    movlw       b'00001000'     ; no-auto sensing - 16 bit baud rate
00006a   6eb8     movwf	0xb8, 0                movwf       BAUDCON
00006c   8eab     bsf	0xab, 0x7, 0             bsf         RCSTA,SPEN      ; enable the serial port
                                           
                                               ; set up interrupt on receive
00006e   8ed0     bsf	0xd0, 0x7, 0             bsf         RCON, IPEN
000070   9a9e     bcf	0x9e, 0x5, 0             bcf         PIR1, RCIF
000072   8a9d     bsf	0x9d, 0x5, 0             bsf         PIE1, RCIE
000074   8ef2     bsf	0xf2, 0x7, 0             bsf         INTCON, GIEH    ; enable global interrupts
000076   0012     return	0                     return
                                           
                                           ;******************************************************************************
                                           ;*                                                                            *
                                           ;* serial_send - send the contents of W via the UART                          *
                                           ;*                                                                            *
                                           ;* Inputs:  Byte to send in W                                                 *
                                           ;* Outputs: NONE                                                              *
                                           ;* Called:                                                                    *
                                           ;* Changes: TXREG                                                             *
                                           ;*                                                                            *
                                           ;******************************************************************************
                                           
                                           serial_send
000078   a89e     btfss	0x9e, 0x4, 0           btfss PIR1,TXIF     ;test transmit interrupt flag
00007a   d7fe     bra	0x78                     bra serial_send     ;if clear, TXREG is full
00007c   6ead     movwf	0xad, 0                movwf TXREG         ;if set, TXREG is empty, so copy data into it
00007e   0012     return	0                     return
                                           
                                           ; -- serial_tx_send_packet ----------------------------------------------------
                                           
                                           serial_tx_send_packet
                                               ; send a whole message packet from the TX Buffer
                                               ; first set the TX pointer to the start of the buffer
000080   6ae1     clrf	0xe1, 0                 clrf        FSR1L
                                               ; send the first byte (the command code)
000082   50e6     movf	0xe6, 0, 0              movf        POSTINC1,w
000084   ec3c     call	0x78, 0                 call        serial_send
000086   f000
                                               ; now send the length byte, and initialise the counter
000088   50e6     movf	0xe6, 0, 0              movf        POSTINC1,w
00008a   ec3c     call	0x78, 0                 call        serial_send
00008c   f000
00008e   6f86     movwf	0x86, 0x1              movwf       TX_COUNT
                                           
000090   0bff     andlw	0xff                   andlw       0xFF
000092   e005     bz	0x9e                      bz          serial_tx_send_packet_checksum  ; if length is zero skip data loop
                                               ; now we loop over send and decrement the counter
                                           serial_tx_send_packet_data_loop
000094   50e6     movf	0xe6, 0, 0              movf        POSTINC1,w
000096   ec3c     call	0x78, 0                 call        serial_send
000098   f000
00009a   2f86     decfsz	0x86, 0x1, 0x1        decfsz      TX_COUNT,f
00009c   d7fb     bra	0x94                     bra         serial_tx_send_packet_data_loop
                                               
                                           serial_tx_send_packet_checksum
00009e   9a8b     bcf	0x8b, 0x5, 0             bcf         LATC,5
                                               ; lastly send the checksum
0000a0   50e6     movf	0xe6, 0, 0              movf        POSTINC1,w
0000a2   ec3c     call	0x78, 0                 call        serial_send
0000a4   f000
                                           
                                               ; done, return
0000a6   0012     return	0                     return
                                           
                                           ;******************************************************************************
                                           ;*                                                                            *
                                           ;* serial_rx_int - UART receive interrupt routine                             *
                                           ;*                                                                            *
                                           ;* Inputs:  None                                                              *
                                           ;* Outputs: None                                                              *
                                           ;* Called:                                                                    *
                                           ;* Changes: PIR1, w                                                           *
                                           ;*                                                                            *
                                           ;******************************************************************************
                                           
                                           ; called later but must be on before the page to avoid relative branch errors
                                           ; !! deprecated !!
                                           ; serial_nak_exit
                                           ;     movlw       0x15
                                           ;     call        serial_send
                                           ;     return
                                           
                                           serial_rx_int_error
0000a8   98ab     bcf	0xab, 0x4, 0             bcf         RCSTA,CREN              ;clear the CREN bit to clear errors
0000aa   0e15     movlw	0x15                   movlw       0x15                    ;prepare a NAK symbol
0000ac   ec3c     call	0x78, 0                 call        serial_send             ;and send it
0000ae   f000
0000b0   88ab     bsf	0xab, 0x4, 0             bsf         RCSTA,CREN              ;re-enable receiving
0000b2   50ae     movf	0xae, 0, 0              movf        RCREG,w                 ;have to read the RCREG to clear the interrupt
0000b4   0012     return	0                     return
                                           
                                           serial_rx_int
0000b6   0e06     movlw	0x6                    movlw       b'00000110'
0000b8   14ab     andwf	0xab, 0, 0             andwf       RCSTA,w                 ;test if either of the error bits are set
0000ba   e1f6     bnz	0xa8                     bnz         serial_rx_int_error     ;if result is not zero an error occurred
                                           serial_rx_int_no_error                  ;if no error occurred, just echo input
                                           
                                               ; if RX_MODE & FC != 0 -> error message, busy
0000bc   0efc     movlw	0xfc                   movlw       0xFC                    ; three non-busy modes
0000be   1580     andwf	0x80, 0, 0x1           andwf       RX_MODE,w               ; don't change the RX_MODE
0000c0   e1f3     bnz	0xa8                     bnz         serial_rx_int_error     ; busy mode so reply NAK, we don't want data at the moment
                                           
0000c2   0e00     movlw	0                      movlw       UPPER serial_rx_jump_table
0000c4   6efb     movwf	0xfb, 0                movwf       PCLATU
0000c6   0e00     movlw	0                      movlw       HIGH serial_rx_jump_table
0000c8   6efa     movwf	0xfa, 0                movwf       PCLATH
0000ca   5180     movf	0x80, 0, 0x1            movf        RX_MODE,w
0000cc   46e8     rlncf	0xe8, 0x1, 0           rlncf       WREG,f
0000ce   46e8     rlncf	0xe8, 0x1, 0           rlncf       WREG,f
0000d0   ef6a     goto	0xd4                    goto        serial_rx_jump_table
0000d2   f000
                                           
                                               PAGE            ; doing a jump table need to make sure it's all in one page of memory
                                           
                                           serial_rx_jump_table
0000d4   26f9     addwf	0xf9, 0x1, 0           addwf       PCL,f
0000d6   ef73     goto	0xe6                    goto        serial_rx_command       ;0
0000d8   f000
0000da   ef79     goto	0xf2                    goto        serial_rx_length        ;1
0000dc   f000
0000de   ef83     goto	0x106                   goto        serial_rx_data          ;2
0000e0   f000
0000e2   ef8a     goto	0x114                   goto        serial_rx_checksum      ;3
0000e4   f000
                                           
                                           ;command byte
                                           serial_rx_command
                                               ; store the command
0000e6   50ae     movf	0xae, 0, 0              movf        RCREG,w
0000e8   6f81     movwf	0x81, 0x1              movwf       RX_COMMAND    
                                               ; put it in the RX buffer
0000ea   6eee     movwf	0xee, 0                movwf       POSTINC0
                                               ; also store it to start the checksum
0000ec   6f83     movwf	0x83, 0x1              movwf       RX_CHECKSUM
                                               ; change to length mode
0000ee   2b80     incf	0x80, 0x1, 0x1          incf        RX_MODE,f
                                               ; return
0000f0   0012     return	0                     return
                                           
                                           ; length byte
                                           serial_rx_length
                                               ; set the byte count
0000f2   50ae     movf	0xae, 0, 0              movf        RCREG,w
0000f4   6f82     movwf	0x82, 0x1              movwf       RX_COUNT
                                               ; store this in the RX buffer too
0000f6   6eee     movwf	0xee, 0                movwf       POSTINC0
                                               ; xor the length for checksum
0000f8   1b83     xorwf	0x83, 0x1, 0x1         xorwf       RX_CHECKSUM,f
                                               ; change to data mode
0000fa   2b80     incf	0x80, 0x1, 0x1          incf        RX_MODE,f
                                               ; if the byte count is 0 skip data mode
0000fc   0e00     movlw	0                      movlw       0x00
0000fe   6382     cpfseq	0x82, 0x1             cpfseq      RX_COUNT
000100   0012     return	0                     return
000102   2b80     incf	0x80, 0x1, 0x1          incf        RX_MODE,f       ; inc to checksum mode
000104   0012     return	0                     return
                                           
                                           serial_rx_data
                                               ; store the data byte in the indirect register
000106   50ae     movf	0xae, 0, 0              movf        RCREG,w
000108   6eee     movwf	0xee, 0                movwf       POSTINC0
                                               ; update the checksum
00010a   1b83     xorwf	0x83, 0x1, 0x1         xorwf       RX_CHECKSUM,f
                                               ; decrement the byte counter
00010c   2f82     decfsz	0x82, 0x1, 0x1        decfsz      RX_COUNT,f
00010e   0012     return	0                     return
                                               ; if execution got here the full count of bytes is done
000110   2b80     incf	0x80, 0x1, 0x1          incf        RX_MODE,f       ; inc to checksum mode
000112   0012     return	0                     return
                                           
                                           serial_rx_checksum
000114   50ae     movf	0xae, 0, 0              movf        RCREG,w
                                               ; keep a copy in the RX buffer
000116   6eee     movwf	0xee, 0                movwf       POSTINC0
                                               ; do an xor with the calculated checksum so far, should result in zero
000118   1b83     xorwf	0x83, 0x1, 0x1         xorwf       RX_CHECKSUM,f
00011a   e005     bz	0x126                     bz          serial_rx_checksum_passed
                                               ; if execution got here the checksum failed
00011c   1b83     xorwf	0x83, 0x1, 0x1         xorwf       RX_CHECKSUM,f           ; return to the calculated checksum for debug
00011e   8384     bsf	0x84, 0x1, 0x1           bsf         RX_FLAGS,CHECKSUM_FAIL  ; set a flag
000120   2b80     incf	0x80, 0x1, 0x1          incf        RX_MODE,f               ; switch to busy mode
000122   6ae9     clrf	0xe9, 0                 clrf        FSR0L                   ; reset the RX pointer
000124   0012     return	0                     return
                                           
                                           serial_rx_checksum_passed
                                               ; checksum okay, set busy mode and exit
000126   2b80     incf	0x80, 0x1, 0x1          incf        RX_MODE,f
000128   6ae9     clrf	0xe9, 0                 clrf        FSR0L
00012a   0012     return	0                     return
                                           
                                           ; -- End of interrupt routines ------------------------------------------------
                                           
                                           ;******************************************************************************
                                           ;*                                                                            *
                                           ;*      serial_command_dispatch - checks command and branches to appropriate  *
                                           ;*                                routine                                     *
                                           ;*                                                                            *
                                           ;*      Called from the main loop to deal with any complete commands          *
                                           ;*                                                                            *
                                           ;******************************************************************************
                                           
                                           serial_command_dispatch
                                               ; first check if there is a command
00012c   a580     btfss	0x80, 0x2, 0x1         btfss       RX_MODE,2       ; if bit 2 is set (mode 4 == RX_BUSY) there is a command ready
00012e   0012     return	0                     return                      ; otherwise nothing to do here
                                               ; next see if there was an error in the checksum
000130   b384     btfsc	0x84, 0x1, 0x1         btfsc       RX_FLAGS,CHECKSUM_FAIL
000132   ef1d     goto	0x83a                   goto        serial_error_checksum           ; if there was report the error
000134   f004
                                               ; no error, so check the command is within bounds
000136   0ee0     movlw	0xe0                   movlw       0xE0
000138   1581     andwf	0x81, 0, 0x1           andwf       RX_COMMAND,w
00013a   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS,Z
00013c   ef33     goto	0x866                   goto        serial_error_bad_command        ; command was more than 31
00013e   f004
                                               ; We know RX_COMMAND is a valid command now.  Jump
000140   0e00     movlw	0                      movlw       UPPER serial_command_jump_table
000142   6efb     movwf	0xfb, 0                movwf       PCLATU
000144   0e01     movlw	0x1                    movlw       HIGH serial_command_jump_table
000146   6efa     movwf	0xfa, 0                movwf       PCLATH
000148   5181     movf	0x81, 0, 0x1            movf        RX_COMMAND,w
00014a   46e8     rlncf	0xe8, 0x1, 0           rlncf       WREG,f
00014c   46e8     rlncf	0xe8, 0x1, 0           rlncf       WREG,f
00014e   efa9     goto	0x152                   goto        serial_command_jump_table
000150   f000
                                           
                                               PAGE
                                           
                                           serial_command_jump_table
000152   26f9     addwf	0xf9, 0x1, 0           addwf       PCL,f
000154   ef49     goto	0x892                   goto        serial_error_unused_command     ; 00
000156   f004
000158   ef49     goto	0x892                   goto        serial_error_unused_command     ; 01
00015a   f004
00015c   ef2b     goto	0x256                   goto        serial_read_mem                 ; 02
00015e   f001
000160   ef4c     goto	0x298                   goto        serial_write_mem                ; 03
000162   f001
000164   ef6c     goto	0x2d8                   goto        serial_block_mem_read           ; 04
000166   f001
000168   ef97     goto	0x32e                   goto        serial_block_mem_write          ; 05
00016a   f001
00016c   efea     goto	0x1d4                   goto        serial_read_io                  ; 06
00016e   f000
000170   ef0b     goto	0x216                   goto        serial_write_io                 ; 07
000172   f001
000174   efbf     goto	0x37e                   goto        serial_bios_update              ; 08
000176   f001
000178   efda     goto	0x3b4                   goto        serial_do_commands              ; 09
00017a   f001
00017c   ef49     goto	0x892                   goto        serial_error_unused_command     ; 0A
00017e   f004
000180   ef49     goto	0x892                   goto        serial_error_unused_command     ; 0B
000182   f004
000184   ef49     goto	0x892                   goto        serial_error_unused_command     ; 0C
000186   f004
000188   ef49     goto	0x892                   goto        serial_error_unused_command     ; 0D
00018a   f004
00018c   ef49     goto	0x892                   goto        serial_error_unused_command     ; 0E
00018e   f004
000190   ef49     goto	0x892                   goto        serial_error_unused_command     ; 0F
000192   f004
000194   ef49     goto	0x892                   goto        serial_error_unused_command     ; 10
000196   f004
000198   ef49     goto	0x892                   goto        serial_error_unused_command     ; 11
00019a   f004
00019c   ef49     goto	0x892                   goto        serial_error_unused_command     ; 12
00019e   f004
0001a0   ef49     goto	0x892                   goto        serial_error_unused_command     ; 13
0001a2   f004
0001a4   ef49     goto	0x892                   goto        serial_error_unused_command     ; 14
0001a6   f004
0001a8   ef49     goto	0x892                   goto        serial_error_unused_command     ; 15
0001aa   f004
0001ac   ef49     goto	0x892                   goto        serial_error_unused_command     ; 16
0001ae   f004
0001b0   ef49     goto	0x892                   goto        serial_error_unused_command     ; 17
0001b2   f004
0001b4   ef49     goto	0x892                   goto        serial_error_unused_command     ; 18
0001b6   f004
0001b8   ef49     goto	0x892                   goto        serial_error_unused_command     ; 19
0001ba   f004
0001bc   ef49     goto	0x892                   goto        serial_error_unused_command     ; 1A
0001be   f004
0001c0   ef49     goto	0x892                   goto        serial_error_unused_command     ; 1B
0001c2   f004
0001c4   ef49     goto	0x892                   goto        serial_error_unused_command     ; 1C
0001c6   f004
0001c8   ef49     goto	0x892                   goto        serial_error_unused_command     ; 1D
0001ca   f004
0001cc   ef49     goto	0x892                   goto        serial_error_unused_command     ; 1E
0001ce   f004
0001d0   ef49     goto	0x892                   goto        serial_error_unused_command     ; 1F
0001d2   f004
                                           
                                           ; -- serial command functions -------------------------------------------------
                                           
                                           serial_read_io
                                               ; read a single IO port to the serial host
                                               ; Address   2 bytes be
                                               ; check that the command argument length is right
0001d4   50ee     movf	0xee, 0, 0              movf        POSTINC0,w              ; command, just move the pointer
0001d6   0e02     movlw	0x2                    movlw       0x02                    ; correct number of bytes
0001d8   6f91     movwf	0x91, 0x1              movwf       MAIN_TEMP               ; put it in temp for error report
0001da   18ee     xorwf	0xee, 0, 0             xorwf       POSTINC0,w              ; check that the length is right
0001dc   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS,Z
0001de   ef5d     goto	0x8ba                   goto        serial_error_wrong_parameters   ; long bnz
0001e0   f004
                                           ;    bnz         serial_error_wrong_parameters   ; not zero so not equal, report
                                               ; got here so length is good
                                           
                                               ; make sure we can do Z80 bus operations
0001e2   ec14     call	0xc28, 0                call        ensure_master
0001e4   f006
                                           
0001e6   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
0001e8   6f95     movwf	0x95, 0x1              movwf       HI_ADDR
0001ea   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
0001ec   6f94     movwf	0x94, 0x1              movwf       LO_ADDR
                                               ; do the IO read
0001ee   ec64     call	0xcc8, 0                call        io_read
0001f0   f006
                                           
                                               ; now return to previous master/slave mode
0001f2   ec1c     call	0xc38, 0                call        revert_master
0001f4   f006
                                           
                                               ; now build a serial packet and return it to the host
0001f6   6ae1     clrf	0xe1, 0                 clrf        FSR1L
                                               ; reply with the command
0001f8   5181     movf	0x81, 0, 0x1            movf        RX_COMMAND,w
0001fa   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0001fc   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
                                               ; now the length (1 byte)
0001fe   0e01     movlw	0x1                    movlw       0x01
000200   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000202   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; now the actual data
000204   5196     movf	0x96, 0, 0x1            movf        DREG,w
000206   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000208   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; finally add the checksum to the packet
00020a   5185     movf	0x85, 0, 0x1            movf        TX_CHECKSUM,w
00020c   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                           
00020e   ec40     call	0x80, 0                 call        serial_tx_send_packet
000210   f000
                                           
000212   efab     goto	0x956                   goto        serial_handler_exit
000214   f004
                                           
                                           serial_write_io
                                               ; write a single IO port from the serial host
                                               ; Address   2 bytes be
                                               ; Data      1 byte
                                               ; check that the command argument length is right
000216   50ee     movf	0xee, 0, 0              movf        POSTINC0,w              ; command, just move the pointer
000218   0e03     movlw	0x3                    movlw       0x03                    ; correct number of bytes
00021a   6f91     movwf	0x91, 0x1              movwf       MAIN_TEMP               ; put it in temp for error report
00021c   18ee     xorwf	0xee, 0, 0             xorwf       POSTINC0,w              ; check that the length is right
00021e   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS,Z                ; long bnz
000220   ef5d     goto	0x8ba                   goto        serial_error_wrong_parameters
000222   f004
                                           ;    bnz         serial_error_wrong_parameters   ; not zero so not equal, report
                                               ; got here so length is good
                                           
                                               ; make sure we can do Z80 bus operations
000224   ec14     call	0xc28, 0                call        ensure_master
000226   f006
                                           
000228   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
00022a   6f95     movwf	0x95, 0x1              movwf       HI_ADDR
00022c   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
00022e   6f94     movwf	0x94, 0x1              movwf       LO_ADDR
000230   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
000232   6f96     movwf	0x96, 0x1              movwf       DREG
                                               ; do the IO write
000234   ec75     call	0xcea, 0                call        io_write
000236   f006
                                           
                                               ; now return to previous master/slave mode
000238   ec1c     call	0xc38, 0                call        revert_master
00023a   f006
                                           
                                               ; now build a serial packet and return it to the host (just an ack)
00023c   6ae1     clrf	0xe1, 0                 clrf        FSR1L
                                               ; reply with the command
00023e   5181     movf	0x81, 0, 0x1            movf        RX_COMMAND,w
000240   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000242   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
                                               ; now the length (0 bytes)
000244   0e00     movlw	0                      movlw       0x00
000246   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000248   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; finally add the checksum to the packet
00024a   5185     movf	0x85, 0, 0x1            movf        TX_CHECKSUM,w
00024c   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                           
00024e   ec40     call	0x80, 0                 call        serial_tx_send_packet
000250   f000
                                           
000252   efab     goto	0x956                   goto        serial_handler_exit
000254   f004
                                           
                                           serial_read_mem
                                               ; read a single byte from system memory
                                               ; Address   2 byte be
                                           
000256   50ee     movf	0xee, 0, 0              movf        POSTINC0,w      ; dump the command byte
000258   0e02     movlw	0x2                    movlw       0x02            ; correct number of bytes
00025a   6f91     movwf	0x91, 0x1              movwf       MAIN_TEMP       ; put it in temp for error report
00025c   18ee     xorwf	0xee, 0, 0             xorwf       POSTINC0,w      ; check the byte length of the command
00025e   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS,Z        ; long bnz
000260   ef5d     goto	0x8ba                   goto        serial_error_wrong_parameters
000262   f004
                                           
                                               ; make sure we can do Z80 bus operations
000264   ec14     call	0xc28, 0                call        ensure_master
000266   f006
                                           
000268   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
00026a   6f95     movwf	0x95, 0x1              movwf       HI_ADDR
00026c   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
00026e   6f94     movwf	0x94, 0x1              movwf       LO_ADDR
                                           
000270   ec87     call	0xd0e, 0                call        mem_read
000272   f006
                                           
000274   ec1c     call	0xc38, 0                call        revert_master
000276   f006
                                           
                                               ; reset the send buffer pointer
000278   6ae1     clrf	0xe1, 0                 clrf        FSR1L
                                               ; reply with the command
00027a   5181     movf	0x81, 0, 0x1            movf        RX_COMMAND,w
00027c   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00027e   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
                                               ; now the packet length (1 byte of data)
000280   0e01     movlw	0x1                    movlw       0x01
000282   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000284   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; now the data byte
000286   5196     movf	0x96, 0, 0x1            movf        DREG,w
000288   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00028a   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; finally the checksum
00028c   5185     movf	0x85, 0, 0x1            movf        TX_CHECKSUM,w
00028e   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                               
000290   ec40     call	0x80, 0                 call        serial_tx_send_packet
000292   f000
                                           
000294   efab     goto	0x956                   goto        serial_handler_exit
000296   f004
                                           
                                           serial_write_mem
                                               ; write a single byte to system memory
                                               ; Address   2 byte be
                                               ; Data      1 byte
                                           
000298   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
00029a   0e03     movlw	0x3                    movlw       0x03            ; correct number of bytes
00029c   6f91     movwf	0x91, 0x1              movwf       MAIN_TEMP
00029e   18ee     xorwf	0xee, 0, 0             xorwf       POSTINC0,w
0002a0   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS,Z
0002a2   ef5d     goto	0x8ba                   goto        serial_error_wrong_parameters
0002a4   f004
                                           
                                               ; make sure we can do Z80 bus operations
0002a6   ec14     call	0xc28, 0                call        ensure_master
0002a8   f006
                                           
0002aa   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
0002ac   6f95     movwf	0x95, 0x1              movwf       HI_ADDR
0002ae   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
0002b0   6f94     movwf	0x94, 0x1              movwf       LO_ADDR
0002b2   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
0002b4   6f96     movwf	0x96, 0x1              movwf       DREG
                                           
0002b6   ec96     call	0xd2c, 0                call        mem_write
0002b8   f006
                                           
0002ba   ec1c     call	0xc38, 0                call        revert_master
0002bc   f006
                                           
0002be   6ae1     clrf	0xe1, 0                 clrf        FSR1L
                                           
0002c0   5181     movf	0x81, 0, 0x1            movf        RX_COMMAND,w
0002c2   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0002c4   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
                                               ; now the packet length (0 bytes, this is just an ACK)
0002c6   0e00     movlw	0                      movlw       0x00
0002c8   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0002ca   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; finally add the checksum
0002cc   5185     movf	0x85, 0, 0x1            movf        TX_CHECKSUM,w
0002ce   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                           
0002d0   ec40     call	0x80, 0                 call        serial_tx_send_packet
0002d2   f000
                                           
0002d4   efab     goto	0x956                   goto        serial_handler_exit
0002d6   f004
                                           
                                           serial_block_mem_read
                                               ; read a block of memory addresses
                                               ; Start Address     2 byte be
                                               ; Data Count        1 byte
                                           
0002d8   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
0002da   0e03     movlw	0x3                    movlw       0x03
0002dc   6f91     movwf	0x91, 0x1              movwf       MAIN_TEMP
0002de   18ee     xorwf	0xee, 0, 0             xorwf       POSTINC0,w
0002e0   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS,Z
0002e2   ef5d     goto	0x8ba                   goto        serial_error_wrong_parameters
0002e4   f004
                                           
                                               ; check that we can do Z80 bus operations
0002e6   ec14     call	0xc28, 0                call        ensure_master
0002e8   f006
                                           
0002ea   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
0002ec   6f95     movwf	0x95, 0x1              movwf       HI_ADDR
0002ee   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
0002f0   6f94     movwf	0x94, 0x1              movwf       LO_ADDR
0002f2   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
0002f4   6f86     movwf	0x86, 0x1              movwf       TX_COUNT
                                           
                                               ; ought to check TX_COUNT length here
0002f6   0efe     movlw	0xfe                   movlw       0xFE
0002f8   6186     cpfslt	0x86, 0x1             cpfslt      TX_COUNT
0002fa   ef8c     goto	0x918                   goto        serial_error_packet_length
0002fc   f004
                                           
0002fe   6ae1     clrf	0xe1, 0                 clrf        FSR1L
                                           
000300   5181     movf	0x81, 0, 0x1            movf        RX_COMMAND,w
000302   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000304   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
000306   5186     movf	0x86, 0, 0x1            movf        TX_COUNT,w
000308   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00030a   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                           
                                               ; loop call mem_read and store in TX buffer
                                           serial_block_mem_read_loop
00030c   ec87     call	0xd0e, 0                call        mem_read
00030e   f006
000310   5196     movf	0x96, 0, 0x1            movf        DREG,w
000312   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000314   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                           
000316   4b94     infsnz	0x94, 0x1, 0x1        infsnz      LO_ADDR,f
000318   2b95     incf	0x95, 0x1, 0x1          incf        HI_ADDR,f
                                           
00031a   2f86     decfsz	0x86, 0x1, 0x1        decfsz      TX_COUNT,f
00031c   d7f7     bra	0x30c                    bra         serial_block_mem_read_loop
                                           
                                               ; release the bus
00031e   ec1c     call	0xc38, 0                call        revert_master
000320   f006
                                           
                                               ; add the checksum
000322   5185     movf	0x85, 0, 0x1            movf        TX_CHECKSUM,w
000324   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                           
000326   ec40     call	0x80, 0                 call        serial_tx_send_packet
000328   f000
                                           
00032a   efab     goto	0x956                   goto        serial_handler_exit
00032c   f004
                                           
                                           serial_block_mem_write
                                               ; copy a block of data from the PC into the memory
                                               ; Start Address:    2 bytes be
                                               ; Data:             Any length 1 or longer
00032e   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
000330   0e03     movlw	0x3                    movlw       0x03            ; minimum number of parameters
000332   6f91     movwf	0x91, 0x1              movwf       MAIN_TEMP
000334   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
000336   6f86     movwf	0x86, 0x1              movwf       TX_COUNT        ; need to keep a track of this for byte counting
000338   0e02     movlw	0x2                    movlw       0x02            ; we're going to do a greater than, so needs to be 1 less than min
                                               ; second parameter can be any length of bytes, so the correct length is a minimum
00033a   6586     cpfsgt	0x86, 0x1             cpfsgt      TX_COUNT
00033c   ef5d     goto	0x8ba                   goto        serial_error_wrong_parameters
00033e   f004
                                           
000340   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
000342   6f95     movwf	0x95, 0x1              movwf       HI_ADDR
000344   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
000346   6f94     movwf	0x94, 0x1              movwf       LO_ADDR
                                           
                                               ; now set up the byte counter, length of packet data - address field
000348   0e02     movlw	0x2                    movlw       0x02
00034a   5f86     subwf	0x86, 0x1, 0x1         subwf       TX_COUNT,f      ; take off the address length
                                           
00034c   ec14     call	0xc28, 0                call        ensure_master
00034e   f006
                                           
                                           serial_block_mem_write_loop    
000350   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
000352   6f96     movwf	0x96, 0x1              movwf       DREG
                                           
000354   ec96     call	0xd2c, 0                call        mem_write
000356   f006
                                           
000358   4b94     infsnz	0x94, 0x1, 0x1        infsnz      LO_ADDR,f
00035a   2b95     incf	0x95, 0x1, 0x1          incf        HI_ADDR,f
                                           
00035c   2f86     decfsz	0x86, 0x1, 0x1        decfsz      TX_COUNT,f
00035e   d7f8     bra	0x350                    bra         serial_block_mem_write_loop
                                           
000360   ec1c     call	0xc38, 0                call        revert_master
000362   f006
                                           
000364   6ae1     clrf	0xe1, 0                 clrf        FSR1L
000366   5181     movf	0x81, 0, 0x1            movf        RX_COMMAND,w
000368   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00036a   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
                                           
00036c   0e00     movlw	0                      movlw       0x00
00036e   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000370   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                           
000372   5185     movf	0x85, 0, 0x1            movf        TX_CHECKSUM,w
000374   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                           
000376   ec40     call	0x80, 0                 call        serial_tx_send_packet
000378   f000
                                           
00037a   efab     goto	0x956                   goto        serial_handler_exit
00037c   f004
                                           
                                           serial_bios_update
                                               ; update a 128 byte block of the BIOS image in Flash
                                               ; Start Address:    2 bytes be
                                               ; Data:             128 bytes
00037e   50ee     movf	0xee, 0, 0              movf        POSTINC0,w      ; command, dump this
000380   0e82     movlw	0x82                   movlw       0x82            ; 130 exact number of bytes for this packet
000382   6f91     movwf	0x91, 0x1              movwf       MAIN_TEMP       ; store the number for a possible error report
000384   18ee     xorwf	0xee, 0, 0             xorwf       POSTINC0,w      ; xor with the length from the packet
000386   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS,Z        ; if it was zero all ok
000388   ef5d     goto	0x8ba                   goto        serial_error_wrong_parameters   ; if not send an error
00038a   f004
                                           
                                               ; need to check the address is a 128 byte aligned one
                                               ; next byte is the high address byte, can be anything up to 0x1F
00038c   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
00038e   0be0     andlw	0xe0                   andlw       0xE0
000390   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS,Z
000392   ef90     goto	0x920                   goto        serial_error_bios_address_space
000394   f004
                                           
000396   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
000398   0b7f     andlw	0x7f                   andlw       0x7F            ; needs to be 128 bit aligned, so nothing in
                                                                           ; bottom 7 bits to be valid
00039a   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS,Z
00039c   ef94     goto	0x928                   goto        serial_error_bios_address_offset
00039e   f004
                                           
                                               ; looks like there's enough data and the parameters are valid.
                                               ; apply the 24K offset to point the address to the top of ROM
                                           
0003a0   0e02     movlw	0x2                    movlw       0x02
0003a2   6ee9     movwf	0xe9, 0                movwf       FSR0L
0003a4   0e60     movlw	0x60                   movlw       0x60
0003a6   26ef     addwf	0xef, 0x1, 0           addwf       INDF0,f         ; add the offset but leave the pointer there
                                           
                                               ; call boot_update to deal with the memory writing
0003a8   ec90     call	0x1120, 0               call        boot_update
0003aa   f008
                                           
                                               ; boot_update has built the response packet for us, so just send it
0003ac   ec40     call	0x80, 0                 call        serial_tx_send_packet
0003ae   f000
                                           
0003b0   efab     goto	0x956                   goto        serial_handler_exit
0003b2   f004
                                           
                                           serial_do_commands
                                               ; run a no data command
0003b4   50ee     movf	0xee, 0, 0              movf        POSTINC0,w      ; command 
0003b6   0e01     movlw	0x1                    movlw       0x01
0003b8   6f91     movwf	0x91, 0x1              movwf       MAIN_TEMP
0003ba   18ee     xorwf	0xee, 0, 0             xorwf       POSTINC0,w
0003bc   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS,Z
0003be   ef5d     goto	0x8ba                   goto        serial_error_wrong_parameters
0003c0   f004
                                           
                                               ; now perform the lookup
0003c2   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
0003c4   6f87     movwf	0x87, 0x1              movwf       JUMP_REG        ; copy to a holding register
0003c6   6b91     clrf	0x91, 0x1               clrf        MAIN_TEMP       ; clear for high byte of address jump
0003c8   90d8     bcf	0xd8, 0, 0               bcf         STATUS,C        ; clear the carry bit to rotate into bit 0
0003ca   3787     rlcf	0x87, 0x1, 0x1          rlcf        JUMP_REG,f      ; rotate storing MSB in C == x 2
0003cc   b0d8     btfsc	0xd8, 0, 0             btfsc       STATUS,C        ; see if MSB was set
0003ce   8391     bsf	0x91, 0x1, 0x1           bsf         MAIN_TEMP,1     ; if it was add 2 to high reg (gonna x2 later)
0003d0   90d8     bcf	0xd8, 0, 0               bcf         STATUS,C        ; clear the carry bit again
0003d2   3787     rlcf	0x87, 0x1, 0x1          rlcf        JUMP_REG,f      ; rotate again x4 now
0003d4   b0d8     btfsc	0xd8, 0, 0             btfsc       STATUS,C        ; see if high bit was set
0003d6   8191     bsf	0x91, 0, 0x1             bsf         MAIN_TEMP,0     ; add 1 to the high byte register
                                           
0003d8   0eea     movlw	0xea                   movlw       LOW serial_cmd_jumps    ; copy the low address for jump table
0003da   2787     addwf	0x87, 0x1, 0x1         addwf       JUMP_REG,f      ; add it to the jump address
0003dc   b0d8     btfsc	0xd8, 0, 0             btfsc       STATUS,C        ; see if the add overflowed
0003de   2b91     incf	0x91, 0x1, 0x1          incf        MAIN_TEMP,f     ; if so increment the high address
0003e0   0e03     movlw	0x3                    movlw       HIGH serial_cmd_jumps   ; get the high address byte
0003e2   2591     addwf	0x91, 0, 0x1           addwf       MAIN_TEMP,w     ; add it to the high address
                                           
0003e4   6efa     movwf	0xfa, 0                movwf       PCLATH          ; put the high byte into the PCLATH
0003e6   5187     movf	0x87, 0, 0x1            movf        JUMP_REG,w
0003e8   6ef9     movwf	0xf9, 0                movwf       PCL             ; put the low address into the PC
                                           
                                           serial_cmd_jumps
                                               ; now put 256 goto commands
0003ea   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 0                     
0003ec   f004
0003ee   eff5     goto	0x7ea                   goto        serial_do_get_reset             ; 1                     
0003f0   f003
0003f2   effb     goto	0x7f6                   goto        serial_do_get_dma               ; 2                     
0003f4   f003
0003f6   ef01     goto	0x802                   goto        serial_do_get_slave             ; 3                     
0003f8   f004
0003fa   ef07     goto	0x80e                   goto        serial_do_reset                 ; 4                     
0003fc   f004
0003fe   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 5                     
000400   f004
000402   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 6                     
000404   f004
000406   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 7                     
000408   f004
00040a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 8                     
00040c   f004
00040e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 9                     
000410   f004
000412   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 10                    
000414   f004
000416   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 11                    
000418   f004
00041a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 12                    
00041c   f004
00041e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 13                    
000420   f004
000422   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 14                    
000424   f004
000426   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 15                    
000428   f004
00042a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 16                    
00042c   f004
00042e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 17                    
000430   f004
000432   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 18                                                                                                                                
000434   f004
000436   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 19                                                                                                                                
000438   f004
00043a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 20                                                                                                                                
00043c   f004
00043e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 21                                                                                                                                
000440   f004
000442   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 22                                                                                                                                
000444   f004
000446   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 23                                                                                                                                
000448   f004
00044a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 24                                                                                                                                
00044c   f004
00044e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 25                                                                                                                                
000450   f004
000452   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 26                                                                                                                                
000454   f004
000456   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 27                                                                                                                                
000458   f004
00045a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 28                                                                                                                                
00045c   f004
00045e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 29                                                                                                                                
000460   f004
000462   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 30                                                                                                                                
000464   f004
000466   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 31                                                                                                                                
000468   f004
00046a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 32                                                                                                                                
00046c   f004
00046e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 33                                                                                                                                
000470   f004
000472   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 34                                                                                                                                
000474   f004
000476   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 35                                                                                                                                
000478   f004
00047a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 36                                                                                                                                
00047c   f004
00047e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 37                                                                                                                                
000480   f004
000482   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 38                                                                                                                                
000484   f004
000486   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 39                                                                                                                                
000488   f004
00048a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 40                                                                                                                                
00048c   f004
00048e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 41                                                                                                                                
000490   f004
000492   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 42                                                                                                                                
000494   f004
000496   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 43                                                                                                                                
000498   f004
00049a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 44                                                                                                                                
00049c   f004
00049e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 45                                                                                                                                
0004a0   f004
0004a2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 46                                                                                                                                
0004a4   f004
0004a6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 47                                                                                                                                
0004a8   f004
0004aa   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 48                                                                                                                                
0004ac   f004
0004ae   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 49                                                                                                                                
0004b0   f004
0004b2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 50                                                                                                                                
0004b4   f004
0004b6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 51                                                                                                                                
0004b8   f004
0004ba   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 52                                                                                                                                
0004bc   f004
0004be   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 53                                                                                                                                
0004c0   f004
0004c2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 54                                                                                                                                
0004c4   f004
0004c6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 55                                                                                                                                
0004c8   f004
0004ca   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 56                                                                                                                                
0004cc   f004
0004ce   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 57                                                                                                                                
0004d0   f004
0004d2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 58                                                                                                                                
0004d4   f004
0004d6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 59                                                                                                                                
0004d8   f004
0004da   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 60                                                                                                                                
0004dc   f004
0004de   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 61                                                                                                                                
0004e0   f004
0004e2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 62                                                                                                                                
0004e4   f004
0004e6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 63                                                                                                                                
0004e8   f004
0004ea   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 64                                                                                                                                
0004ec   f004
0004ee   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 65                                                                                                                                
0004f0   f004
0004f2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 66                                                                                                                                
0004f4   f004
0004f6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 67                                                                                                                                
0004f8   f004
0004fa   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 68                                                                                                                                
0004fc   f004
0004fe   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 69                                                                                                                                
000500   f004
000502   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 70                                                                                                                                
000504   f004
000506   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 71                                                                                                                                
000508   f004
00050a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 72                                                                                                                                
00050c   f004
00050e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 73                                                                                                                                
000510   f004
000512   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 74                                                                                                                                
000514   f004
000516   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 75                                                                                                                                
000518   f004
00051a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 76                                                                                                                                
00051c   f004
00051e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 77                                                                                                                                
000520   f004
000522   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 78                                                                                                                                
000524   f004
000526   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 79                                                                                                                                
000528   f004
00052a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 80                                                                                                                                
00052c   f004
00052e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 81                                                                                                                                
000530   f004
000532   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 82                                                                                                                                
000534   f004
000536   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 83                                                                                                                                
000538   f004
00053a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 84                                                                                                                                
00053c   f004
00053e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 85                                                                                                                                
000540   f004
000542   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 86                                                                                                                                
000544   f004
000546   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 87                                                                                                                                
000548   f004
00054a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 88                                                                                                                                
00054c   f004
00054e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 89                                                                                                                                
000550   f004
000552   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 90                                                                                                                                
000554   f004
000556   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 91                                                                                                                                
000558   f004
00055a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 92                                                                                                                                
00055c   f004
00055e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 93                                                                                                                                
000560   f004
000562   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 94                                                                                                                                
000564   f004
000566   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 95                                                                                                                                
000568   f004
00056a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 96                                                                                                                                
00056c   f004
00056e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 97                                                                                                                                
000570   f004
000572   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 98                                                                                                                                
000574   f004
000576   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 99                                                                                                                                
000578   f004
00057a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 100                                                                                                                               
00057c   f004
00057e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 101                                                                                                                               
000580   f004
000582   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 102                                                                                                                               
000584   f004
000586   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 103                                                                                                                               
000588   f004
00058a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 104                                                                                                                               
00058c   f004
00058e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 105                                                                                                                               
000590   f004
000592   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 106                                                                                                                               
000594   f004
000596   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 107                                                                                                                               
000598   f004
00059a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 108                                                                                                                               
00059c   f004
00059e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 109                                                                                                                               
0005a0   f004
0005a2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 110                                                                                                                               
0005a4   f004
0005a6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 111                                                                                                                               
0005a8   f004
0005aa   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 112                                                                                                                               
0005ac   f004
0005ae   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 113                                                                                                                               
0005b0   f004
0005b2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 114                                                                                                                               
0005b4   f004
0005b6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 115                                                                                                                               
0005b8   f004
0005ba   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 116                                                                                                                               
0005bc   f004
0005be   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 117                                                                                                                               
0005c0   f004
0005c2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 118                                                                                                                               
0005c4   f004
0005c6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 119                                                                                                                               
0005c8   f004
0005ca   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 120                                                                                                                               
0005cc   f004
0005ce   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 121                                                                                                                               
0005d0   f004
0005d2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 122                                                                                                                               
0005d4   f004
0005d6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 123                                                                                                                               
0005d8   f004
0005da   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 124                                                                                                                               
0005dc   f004
0005de   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 125                                                                                                                               
0005e0   f004
0005e2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 126                                                                                                                               
0005e4   f004
0005e6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 127                                                                                                                               
0005e8   f004
0005ea   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 128                                                                                                                               
0005ec   f004
0005ee   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 129                                                                                                                               
0005f0   f004
0005f2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 130                                                                                                                               
0005f4   f004
0005f6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 131                                                                                                                               
0005f8   f004
0005fa   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 132                                                                                                                               
0005fc   f004
0005fe   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 133                                                                                                                               
000600   f004
000602   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 134                                                                                                                               
000604   f004
000606   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 135                                                                                                                               
000608   f004
00060a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 136                                                                                                                               
00060c   f004
00060e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 137                                                                                                                               
000610   f004
000612   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 138                                                                                                                               
000614   f004
000616   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 139                                                                                                                               
000618   f004
00061a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 140                                                                                                                               
00061c   f004
00061e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 141                                                                                                                               
000620   f004
000622   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 142                                                                                                                               
000624   f004
000626   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 143                                                                                                                               
000628   f004
00062a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 144                                                                                                                               
00062c   f004
00062e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 145                                                                                                                               
000630   f004
000632   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 146                                                                                                                               
000634   f004
000636   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 147                                                                                                                               
000638   f004
00063a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 148                                                                                                                               
00063c   f004
00063e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 149                                                                                                                               
000640   f004
000642   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 150                                                                                                                               
000644   f004
000646   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 151                                                                                                                               
000648   f004
00064a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 152                                                                                                                               
00064c   f004
00064e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 153                                                                                                                               
000650   f004
000652   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 154                                                                                                                               
000654   f004
000656   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 155                                                                                                                               
000658   f004
00065a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 156                                                                                                                               
00065c   f004
00065e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 157                                                                                                                               
000660   f004
000662   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 158                                                                                                                               
000664   f004
000666   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 159                                                                                                                               
000668   f004
00066a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 160                                                                                                                               
00066c   f004
00066e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 161                                                                                                                               
000670   f004
000672   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 162                                                                                                                               
000674   f004
000676   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 163                                                                                                                               
000678   f004
00067a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 164                                                                                                                               
00067c   f004
00067e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 165                                                                                                                               
000680   f004
000682   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 166                                                                                                                               
000684   f004
000686   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 167                                                                                                                               
000688   f004
00068a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 168                                                                                                                               
00068c   f004
00068e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 169                                                                                                                               
000690   f004
000692   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 170                                                                                                                               
000694   f004
000696   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 171                                                                                                                               
000698   f004
00069a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 172                                                                                                                               
00069c   f004
00069e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 173                                                                                                                               
0006a0   f004
0006a2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 174                                                                                                                               
0006a4   f004
0006a6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 175                                                                                                                               
0006a8   f004
0006aa   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 176                                                                                                                               
0006ac   f004
0006ae   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 177                                                                                                                               
0006b0   f004
0006b2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 178                                                                                                                               
0006b4   f004
0006b6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 179                                                                                                                               
0006b8   f004
0006ba   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 180                                                                                                                               
0006bc   f004
0006be   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 181                                                                                                                               
0006c0   f004
0006c2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 182                                                                                                                               
0006c4   f004
0006c6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 183                                                                                                                               
0006c8   f004
0006ca   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 184                                                                                                                               
0006cc   f004
0006ce   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 185                                                                                                                               
0006d0   f004
0006d2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 186                                                                                                                               
0006d4   f004
0006d6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 187                                                                                                                               
0006d8   f004
0006da   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 188                                                                                                                               
0006dc   f004
0006de   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 189                                                                                                                               
0006e0   f004
0006e2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 190                                                                                                                               
0006e4   f004
0006e6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 191                                                                                                                               
0006e8   f004
0006ea   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 192                                                                                                                               
0006ec   f004
0006ee   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 193                                                                                                                               
0006f0   f004
0006f2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 194                                                                                                                               
0006f4   f004
0006f6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 195                                                                                                                               
0006f8   f004
0006fa   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 196
0006fc   f004
0006fe   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 197
000700   f004
000702   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 198
000704   f004
000706   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 199
000708   f004
00070a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 200
00070c   f004
00070e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 201
000710   f004
000712   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 202
000714   f004
000716   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 203
000718   f004
00071a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 204
00071c   f004
00071e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 205
000720   f004
000722   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 206
000724   f004
000726   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 207
000728   f004
00072a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 208
00072c   f004
00072e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 209
000730   f004
000732   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 210
000734   f004
000736   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 211
000738   f004
00073a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 212
00073c   f004
00073e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 213
000740   f004
000742   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 214
000744   f004
000746   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 215
000748   f004
00074a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 216
00074c   f004
00074e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 217
000750   f004
000752   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 218
000754   f004
000756   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 219
000758   f004
00075a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 220
00075c   f004
00075e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 221
000760   f004
000762   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 222
000764   f004
000766   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 223
000768   f004
00076a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 224
00076c   f004
00076e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 225
000770   f004
000772   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 226
000774   f004
000776   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 227
000778   f004
00077a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 228
00077c   f004
00077e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 229
000780   f004
000782   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 230
000784   f004
000786   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 231
000788   f004
00078a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 232
00078c   f004
00078e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 233
000790   f004
000792   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 234
000794   f004
000796   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 235
000798   f004
00079a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 236
00079c   f004
00079e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 237
0007a0   f004
0007a2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 238
0007a4   f004
0007a6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 239
0007a8   f004
0007aa   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 240
0007ac   f004
0007ae   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 241
0007b0   f004
0007b2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 242
0007b4   f004
0007b6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 243
0007b8   f004
0007ba   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 244
0007bc   f004
0007be   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 245
0007c0   f004
0007c2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 246
0007c4   f004
0007c6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 247
0007c8   f004
0007ca   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 248
0007cc   f004
0007ce   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 249
0007d0   f004
0007d2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 250
0007d4   f004
0007d6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 251
0007d8   f004
0007da   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 252
0007dc   f004
0007de   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 253
0007e0   f004
0007e2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 254
0007e4   f004
0007e6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 255
0007e8   f004
                                           
                                           serial_do_get_reset
                                               ; run the get_reset subroutine and return success
0007ea   ec3b     call	0xc76, 0                call        get_reset
0007ec   f006
0007ee   ec0c     call	0x818, 0                call        serial_do_ack
0007f0   f004
0007f2   efab     goto	0x956                   goto        serial_handler_exit
0007f4   f004
                                           
                                           serial_do_get_dma
0007f6   ec2f     call	0xc5e, 0                call        get_dma
0007f8   f006
0007fa   ec0c     call	0x818, 0                call        serial_do_ack
0007fc   f004
0007fe   efab     goto	0x956                   goto        serial_handler_exit
000800   f004
                                           
                                           serial_do_get_slave
000802   ec49     call	0xc92, 0                call        get_slave
000804   f006
000806   ec0c     call	0x818, 0                call        serial_do_ack
000808   f004
00080a   efab     goto	0x956                   goto        serial_handler_exit
00080c   f004
                                           
                                           serial_do_reset
                                               ; special case, send ack then perform a CPU reset
00080e   ec0c     call	0x818, 0                call        serial_do_ack
000810   f004
                                           
                                           serial_do_reset_loop
                                               ; need to wait here until the UART has finished sending the two bytes
                                               ; that are in the shift register and transmit buffer
000812   a2ac     btfss	0xac, 0x1, 0           btfss       TXSTA,TRMT
000814   d7fe     bra	0x812                    bra         serial_do_reset_loop
                                               ; TSR is now empty, can safely do reset.
                                           
000816   00ff     reset                        reset
                                           
                                           serial_do_ack
000818   6ae1     clrf	0xe1, 0                 clrf        FSR1L
00081a   0e09     movlw	0x9                    movlw       0x09
00081c   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00081e   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
                                           
000820   0e01     movlw	0x1                    movlw       0x01
000822   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000824   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                           
000826   0e02     movlw	0x2                    movlw       0x02
000828   6ee9     movwf	0xe9, 0                movwf       FSR0L
00082a   50ef     movf	0xef, 0, 0              movf        INDF0,w
00082c   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00082e   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                           
000830   5185     movf	0x85, 0, 0x1            movf        TX_CHECKSUM,w
000832   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                           
000834   ec40     call	0x80, 0                 call        serial_tx_send_packet
000836   f000
                                           
000838   0012     return	0                     return
                                           
                                           ; -- serial error functions ---------------------------------------------------
                                           
                                           serial_error_checksum
                                               ; report a message received with a bad checksum
                                               ; special first character because we don't know if the command was corrupt
                                               ; or data following it so start with a "0"
                                               ; set the send pointer to the start of the buffer
00083a   6ae1     clrf	0xe1, 0                 clrf        FSR1L
00083c   0e80     movlw	0x80                   movlw       0x80
00083e   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000840   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
                                               ; next is length byte.  checksum fail message is always 3 bytes
000842   0e03     movlw	0x3                    movlw       0x03
000844   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000846   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; now is the error code.  checksum fail = 0x0001
000848   0e00     movlw	0                      movlw       0x00
00084a   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00084c   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
00084e   0e01     movlw	0x1                    movlw       0x01
000850   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000852   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; now send the calculated checksum for debugging
000854   5183     movf	0x83, 0, 0x1            movf        RX_CHECKSUM,w
000856   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000858   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; now add the checksum
00085a   5185     movf	0x85, 0, 0x1            movf        TX_CHECKSUM,w
00085c   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                               
                                               ; packet assembled, send the packet
00085e   ec40     call	0x80, 0                 call        serial_tx_send_packet
000860   f000
                                           
000862   efab     goto	0x956                   goto        serial_handler_exit
000864   f004
                                           
                                           serial_error_bad_command
                                               ; report a bad command i.e. byte outside [A-Z]
                                               ; set the send pointer to the start of the buffer
000866   6ae1     clrf	0xe1, 0                 clrf        FSR1L
000868   0e81     movlw	0x81                   movlw       0x81     ; bad command so can't do the normal upper/lower conversion
00086a   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00086c   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
                                               ; next is length byte.  always 3 bytes for bad command
00086e   0e03     movlw	0x3                    movlw       0x03
000870   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000872   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; now is the error code.  bad command = 0x0002
000874   0e00     movlw	0                      movlw       0x00
000876   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000878   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
00087a   0e02     movlw	0x2                    movlw       0x02
00087c   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00087e   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; now send the bad command for debug
000880   5181     movf	0x81, 0, 0x1            movf        RX_COMMAND,w
000882   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000884   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; finally add the checksum
000886   5185     movf	0x85, 0, 0x1            movf        TX_CHECKSUM,w
000888   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                           
                                               ; packet assembled, send the packet
00088a   ec40     call	0x80, 0                 call        serial_tx_send_packet
00088c   f000
                                           
00088e   efab     goto	0x956                   goto        serial_handler_exit
000890   f004
                                           
                                           serial_error_unused_command
                                               ; valid command letter but not used
                                               ; set the send pointer to the start of the buffer
000892   6ae1     clrf	0xe1, 0                 clrf        FSR1L
                                               ; command code is same with bit 6 set
000894   5181     movf	0x81, 0, 0x1            movf        RX_COMMAND,w
000896   8ce8     bsf	0xe8, 0x6, 0             bsf         WREG,6          ; set bit 6, the error flag
000898   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00089a   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
                                               ; now the length only the error code now
00089c   0e02     movlw	0x2                    movlw       0x02
00089e   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0008a0   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; now the error code 0x0003 for unused command
0008a2   0e00     movlw	0                      movlw       0x00
0008a4   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0008a6   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
0008a8   0e03     movlw	0x3                    movlw       0x03
0008aa   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0008ac   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; now the checksum
0008ae   5185     movf	0x85, 0, 0x1            movf        TX_CHECKSUM,w
0008b0   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                           
0008b2   ec40     call	0x80, 0                 call        serial_tx_send_packet
0008b4   f000
                                           
0008b6   efab     goto	0x956                   goto        serial_handler_exit
0008b8   f004
                                           
                                           serial_error_wrong_parameters
                                               ; valid command but got the wrong number of parameters
0008ba   6ae1     clrf	0xe1, 0                 clrf        FSR1L
                                               ; command code with bit 6 set
0008bc   5181     movf	0x81, 0, 0x1            movf        RX_COMMAND,w
0008be   8ce8     bsf	0xe8, 0x6, 0             bsf         WREG,6
0008c0   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0008c2   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
                                               ; now the length, error code plus the expected number of params
0008c4   0e03     movlw	0x3                    movlw       0x03
0008c6   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0008c8   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; now the error code 0x0004
0008ca   0e00     movlw	0                      movlw       0x00
0008cc   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0008ce   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
0008d0   0e04     movlw	0x4                    movlw       0x04
0008d2   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0008d4   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; now the correct number of argument bytes
0008d6   5191     movf	0x91, 0, 0x1            movf        MAIN_TEMP,w
0008d8   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0008da   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; now the checksum
0008dc   5185     movf	0x85, 0, 0x1            movf        TX_CHECKSUM,w
0008de   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                           
0008e0   ec40     call	0x80, 0                 call        serial_tx_send_packet
0008e2   f000
                                           
0008e4   efab     goto	0x956                   goto        serial_handler_exit
0008e6   f004
                                           
                                           serial_error_do_unknown
0008e8   6ae1     clrf	0xe1, 0                 clrf        FSR1L
0008ea   0e49     movlw	0x49                   movlw       0x49
0008ec   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0008ee   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
                                           
0008f0   0e03     movlw	0x3                    movlw       0x03
0008f2   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0008f4   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                           
0008f6   0e00     movlw	0                      movlw       0x00
0008f8   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0008fa   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                           
0008fc   0e09     movlw	0x9                    movlw       0x09
0008fe   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000900   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                           
000902   0e02     movlw	0x2                    movlw       0x02
000904   6ee9     movwf	0xe9, 0                movwf       FSR0L
000906   50ef     movf	0xef, 0, 0              movf        INDF0,w
000908   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00090a   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                           
00090c   5185     movf	0x85, 0, 0x1            movf        TX_CHECKSUM,w
00090e   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                           
000910   ec40     call	0x80, 0                 call        serial_tx_send_packet
000912   f000
                                           
000914   efab     goto	0x956                   goto        serial_handler_exit
000916   f004
                                           
                                           serial_error_packet_length
000918   0e05     movlw	0x5                    movlw       0x05
00091a   6f91     movwf	0x91, 0x1              movwf       MAIN_TEMP
00091c   ef98     goto	0x930                   goto        serial_error_generic
00091e   f004
                                           
                                           serial_error_bios_address_space
000920   0e06     movlw	0x6                    movlw       0x06
000922   6f91     movwf	0x91, 0x1              movwf       MAIN_TEMP
000924   ef98     goto	0x930                   goto        serial_error_generic
000926   f004
                                           
                                           serial_error_bios_address_offset
000928   0e07     movlw	0x7                    movlw       0x07
00092a   6f91     movwf	0x91, 0x1              movwf       MAIN_TEMP
00092c   ef98     goto	0x930                   goto        serial_error_generic
00092e   f004
                                           
                                           serial_error_generic
000930   6ae1     clrf	0xe1, 0                 clrf        FSR1L
000932   5181     movf	0x81, 0, 0x1            movf        RX_COMMAND,w
000934   8ce8     bsf	0xe8, 0x6, 0             bsf         WREG,6
000936   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000938   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
                                           
00093a   0e02     movlw	0x2                    movlw       0x02
00093c   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00093e   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                           
000940   0e00     movlw	0                      movlw       0x00
000942   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000944   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                           
000946   5191     movf	0x91, 0, 0x1            movf        MAIN_TEMP,w
000948   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00094a   1985     xorwf	0x85, 0, 0x1           xorwf       TX_CHECKSUM,w
                                           
00094c   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                           
00094e   ec40     call	0x80, 0                 call        serial_tx_send_packet
000950   f000
                                           
000952   efab     goto	0x956                   goto        serial_handler_exit
000954   f004
                                           
                                           serial_handler_exit
                                               ; standard exit for all serial response functions
000956   6ae9     clrf	0xe9, 0                 clrf        FSR0L           ; reset RX pointer
000958   6b84     clrf	0x84, 0x1               clrf        RX_FLAGS        ; get rid of any flags from this message
00095a   6b80     clrf	0x80, 0x1               clrf        RX_MODE         ; go back to waiting
00095c   0012     return	0                     return
                                           
                                           ; == Export Direct Access to ==================================================
                                           
                                               GLOBAL      serial_init
                                               GLOBAL      serial_rx_int
                                               GLOBAL      serial_command_dispatch
                                           
                                           end
                                           list p=18f4520
                                           include <p18f4520.inc>
                                                   LIST
                                           
                                           ;==========================================================================
                                           ;  MPASM PIC18F4520 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2007 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           include "portpins.inc"
                                           ;== PORT Definitions ==========================================================
                                           
                                           ;-- PORT A --------------------------------------------------------------------
                                           
                                           P_RESET         EQU     0
                                           P_BUSRQ         EQU     1
                                           P_MREQ          EQU     2
                                           P_IORQ          EQU     3
                                           P_WAIT          EQU     4
                                           P_HI_LAT        EQU     5
                                           
                                           ;-- PORT C --------------------------------------------------------------------
                                           
                                           P_BUSACK        EQU     0
                                           P_SD_CS         EQU     1
                                           P_CLK           EQU     2
                                           P_SD_CK         EQU     3
                                           P_SD_DI         EQU     4
                                           P_SD_DO         EQU     5
                                           P_TX            EQU     6
                                           P_RX            EQU     7
                                           
                                           ;-- PORT B ---------------------------------------------------------------------
                                           
                                           P_SD_FIND       EQU     4
                                           P_TXE           EQU     5
                                           P_RXF           EQU     6
                                           P_SD_PRES       EQU     7
                                           
                                           SLAVE_LATB_DEF EQU     b'11000000'
                                           SLAVE_TRISB_DEF EQU     b'00011111'
                                           
                                           ;-- PORT E --------------------------------------------------------------------
                                           
                                           P_RD            EQU     0
                                           P_WR            EQU     1
                                           P_CS            EQU     2
                                           
                                           ; -- Externals From host_bus.asm -----------------------------------------------
                                           
                                               EXTERN      slave_count
                                           
                                               EXTERN      io_write
                                               EXTERN      DREG
                                               EXTERN      LO_ADDR
                                               EXTERN      HI_ADDR
                                           
                                               EXTERN      ensure_master
                                               EXTERN      revert_master
                                           
                                               UDATA
                                           count           res     2
                                           sdflags         res     1
                                           v2              equ     0
                                           carderr         equ     1
                                           cardinit        equ     2
                                           init_started     equ     3
                                           
                                           sd_command      res     1
                                           sd_data         res     4
                                           ; MAIN_TEMP       res     1
                                           temp2           res     1
                                           ; low_jump        res     1
                                               CODE
                                           
                                           sd_init
00095e   828b     bsf	0x8b, 0x1, 0             bsf         LATC, P_SD_CS           ; cs pin high
000960   9294     bcf	0x94, 0x1, 0             bcf         TRISC, P_SD_CS          ; cs pin as output
000962   9a94     bcf	0x94, 0x5, 0             bcf         TRISC, P_SD_DO
000964   9694     bcf	0x94, 0x3, 0             bcf         TRISC, P_SD_CK
000966   8894     bsf	0x94, 0x4, 0             bsf         TRISC, P_SD_DI
                                           
000968   0e00     movlw	0                      movlw       b'00000000'
00096a   6ec7     movwf	0xc7, 0                movwf       SSPSTAT
00096c   0e30     movlw	0x30                   movlw       b'00110000'
00096e   6ec6     movwf	0xc6, 0                movwf       SSPCON1
                                           
000970   6b8a     clrf	0x8a, 0x1               clrf        sdflags
                                           
000972   0e06     movlw	0x6                    movlw       b'00000110'
000974   6ed5     movwf	0xd5, 0                movwf       T0CON                   ; setup timer 0 for 16 bit mode with
                                                                                   ; 128 prescale, takes ~ 0.8s to timeout
000976   0012     return	0                     return                              ; used as a guard in sd routines
                                           
                                           sd_card_init
000978   0e10     movlw	0x10                   movlw       0x10
00097a   6f88     movwf	0x88, 0x1              movwf       count
                                           sd_card_init_loop
00097c   ecf0     call	0xbe0, 0                call        read_spi
00097e   f005
000980   2f88     decfsz	0x88, 0x1, 0x1        decfsz      count, f
000982   d7fc     bra	0x97c                    bra         sd_card_init_loop
                                           
                                           ;     movlw       low debugmsg1
                                           ;     movwf       TBLPTRL
                                           ;     movlw       high debugmsg1
                                           ;     movwf       TBLPTRH
                                           ;     clrf        TBLPTRU
                                           ;     call        msg
                                           
                                           ; version 2 SD driver, supports HCSD
                                           ; send CMD0 with correct checksum
                                           
000984   928b     bcf	0x8b, 0x1, 0             bcf         LATC, P_SD_CS
                                               
000986   0e40     movlw	0x40                   movlw       0x40                    ; cmd0
000988   6f8b     movwf	0x8b, 0x1              movwf       sd_command
00098a   6b8c     clrf	0x8c, 0x1               clrf        sd_data
00098c   6b8d     clrf	0x8d, 0x1               clrf        sd_data+1
00098e   6b8e     clrf	0x8e, 0x1               clrf        sd_data+2
000990   6b8f     clrf	0x8f, 0x1               clrf        sd_data+3
                                           
000992   ecb2     call	0xb64, 0                call        write_sd
000994   f005
                                           
                                           ;     movlw       0x40
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x95
                                           ;     call        write_spi
                                               
000996   ec69     call	0xad2, 0                call        start_timeout           ; start the timer
000998   f005
                                           nloop
00099a   b4f2     btfsc	0xf2, 0x2, 0           btfsc       INTCON, TMR0IF
00099c   ef0a     goto	0xa14                   goto        sd_timeout
00099e   f005
0009a0   ecf0     call	0xbe0, 0                call        read_spi                 ; get a non 0xff byte
0009a2   f005
                                               
0009a4   9ed5     bcf	0xd5, 0x7, 0             bcf         T0CON, TMR0ON           ; stop the timer
                                           
                                           ;     movwf       temp2
                                           ;     movlw       low debugmsg2
                                           ;     movwf       TBLPTRL
                                           ;     movlw       high debugmsg2
                                           ;     movwf       TBLPTRH
                                           ;     clrf        TBLPTRU
                                           ;     call        msg
                                           ;     movf        temp2, w
                                           ;     call        debug
                                           ;     movf        temp2, w
0009a6   0a01     xorlw	0x1                    xorlw       0x01
0009a8   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS, Z
                                               ;goto        error_exit              ; should be 0x01 - busy
0009aa   d7f7     bra	0x99a                    bra         nloop
                                           ;     movlw       0x55
                                           ;     call        debug
                                           
0009ac   0e48     movlw	0x48                   movlw       0x48
0009ae   6f8b     movwf	0x8b, 0x1              movwf       sd_command
0009b0   6b8f     clrf	0x8f, 0x1               clrf        sd_data+3
0009b2   6b8e     clrf	0x8e, 0x1               clrf        sd_data+2
0009b4   0e01     movlw	0x1                    movlw       0x01
0009b6   6f8d     movwf	0x8d, 0x1              movwf       sd_data+1
0009b8   0eaa     movlw	0xaa                   movlw       0xAA
0009ba   6f8c     movwf	0x8c, 0x1              movwf       sd_data
                                           
0009bc   ecb2     call	0xb64, 0                call        write_sd
0009be   f005
                                           
0009c0   ec69     call	0xad2, 0                call        start_timeout
0009c2   f005
0009c4   eca9     call	0xb52, 0                call        read_sd
0009c6   f005
0009c8   9ed5     bcf	0xd5, 0x7, 0             bcf         T0CON, TMR0ON
                                           
0009ca   918a     bcf	0x8a, 0, 0x1             bcf         sdflags, v2
0009cc   b4e8     btfsc	0xe8, 0x2, 0           btfsc       WREG, 2
0009ce   d00d     bra	0x9ea                    bra         not_hcsd                ; if bit 2 is set then it's a type 1
                                                                                   ; card hence doesn't support CMD8
                                           ;     movlw       0x66
                                           ;     call        debug
                                           
0009d0   ecf0     call	0xbe0, 0                call        read_spi
0009d2   f005
0009d4   ecf0     call	0xbe0, 0                call        read_spi
0009d6   f005
0009d8   ecf0     call	0xbe0, 0                call        read_spi
0009da   f005
0009dc   0a01     xorlw	0x1                    xorlw       0x01
0009de   e12a     bnz	0xa34                    bnz         error_exit
0009e0   ecf0     call	0xbe0, 0                call        read_spi
0009e2   f005
0009e4   0aaa     xorlw	0xaa                   xorlw       0xaa
0009e6   e126     bnz	0xa34                    bnz         error_exit
                                           
0009e8   818a     bsf	0x8a, 0, 0x1             bsf         sdflags, v2
                                           
                                           not_hcsd
0009ea   ec69     call	0xad2, 0                call        start_timeout
0009ec   f005
                                           sd_acmd41
                                               ; now poll until the card is ready
0009ee   0ee9     movlw	0xe9                   movlw       0xE9                    ; cmd41 | 0x80 to signify ACMD
0009f0   6f8b     movwf	0x8b, 0x1              movwf       sd_command
0009f2   0e00     movlw	0                      movlw       0x00
0009f4   b18a     btfsc	0x8a, 0, 0x1           btfsc       sdflags, v2
0009f6   0e40     movlw	0x40                   movlw       0x40
0009f8   6f8f     movwf	0x8f, 0x1              movwf       sd_data+3
0009fa   6b8e     clrf	0x8e, 0x1               clrf        sd_data+2
0009fc   6b8d     clrf	0x8d, 0x1               clrf        sd_data+1
0009fe   6b8c     clrf	0x8c, 0x1               clrf        sd_data
                                           
000a00   ecb2     call	0xb64, 0                call        write_sd
000a02   f005
                                           
000a04   eca9     call	0xb52, 0                call        read_sd
000a06   f005
                                           
                                           ;     movwf       temp2
                                           ;     movlw       low debugmsg3
                                           ;     movwf       TBLPTRL
                                           ;     movlw       high debugmsg3
                                           ;     movwf       TBLPTRH
                                           ;     clrf        TBLPTRU
                                           ;     call        msg
                                           ;     movf        temp2, w
                                           ;     call        debug
                                           ;     movf        temp2, w
                                               
                                           ;     clrf        count
                                           ;     clrf        count+1
                                           ; hold
                                           ;     decfsz      count, f
                                           ;     bra         hold
                                           ;     decfsz      count+1, f
                                           ;     bra         hold
                                           
000a08   0a01     xorlw	0x1                    xorlw       0x01
000a0a   e0f1     bz	0x9ee                     bz          sd_acmd41
                                           
                                           ;     movlw       low debugmsg4
                                           ;     movwf       TBLPTRL
                                           ;     movlw       high debugmsg4
                                           ;     movwf       TBLPTRH
                                           ;     clrf        TBLPTRU
                                           ;     call        msg
                                           
000a0c   858a     bsf	0x8a, 0x2, 0x1           bsf         sdflags, cardinit
000a0e   9ed5     bcf	0xd5, 0x7, 0             bcf         T0CON, TMR0ON
000a10   828b     bsf	0x8b, 0x1, 0             bsf         LATC, P_SD_CS
000a12   0012     return	0                     return                              ; all done
                                           
                                           ;     movlw       0x40
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x95
                                           ;     call        write_spi
                                           ; 
                                           ;     clrf        TMR0H
                                           ;     clrf        TMR0L
                                           ;     bsf         T0CON, TMR0ON           ; start timeout
                                           ;     bcf         INTCON, TMR0IF
                                           ; sd_card_init2
                                           ;     btfsc       INTCON, TMR0IF
                                           ;     goto        sd_timeout
                                           ;     call        read_spi
                                           ;     xorlw       0x01
                                           ;     bnz         sd_card_init2
                                           ;     ; stop timer
                                           ;     bcf         T0CON, TMR0ON
                                           ; 
                                           ; ; send CMD8 to see if it is HCSD
                                           ; 
                                           ; sd_card_cmd8
                                           ;     call        read_spi
                                           ;     movlw       0x48
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x01
                                           ;     call        write_spi
                                           ;     movlw       0xAA
                                           ;     call        write_spi
                                           ;     movlw       0x87
                                           ;     call        write_spi
                                           ; 
                                           ;     clrf        TMR0H
                                           ;     clrf        TMR0L
                                           ;     bsf         T0CON, TMR0ON           ; start timeout
                                           ;     bcf         INTCON, TMR0IF
                                           ; sd_card_check_cmd8
                                           ;     btfsc       INTCON, TMR0IF
                                           ;     goto        sd_timeout
                                           ;     call        read_spi
                                           ;     xorlw       0xff
                                           ;     bz          sd_card_check_cmd8
                                           ;     xorlw       0xff
                                           ; 
                                           ;     bcf         T0CON, TMR0ON           ; stop timer
                                           ; 
                                           ;     xorlw       0x01                    ; see if the first byte is 01
                                           ;     bnz         sdnc                    ; if not probably an old SD
                                           ;     call        read_spi                ; should be 00
                                           ;     call        read_spi                ; should be 00
                                           ;     call        read_spi                ; has to be 01
                                           ;     xorlw       0x01
                                           ;     bnz         error_exit
                                           ;     call        read_spi                ; has to be aa
                                           ;     xorlw       0xaa
                                           ;     bnz         error_exit
                                           ;     bsf         sdflags, v2             ; if it's a valid response this is a
                                           ;     bra         sd_card_enter_acmd41          ; mark2 card
                                           ; 
                                           ; sdnc
                                           ;     xorlw       0x04                    ; see if it responded "unknown command"
                                           ;     bnz         error_exit              ; if not something went wrong
                                           ; 
                                           ; 
                                           ; sd_card_enter_acmd41
                                           ;     clrf        TMR0H
                                           ;     clrf        TMR0L
                                           ;     bsf         T0CON, TMR0ON           ; start timeout
                                           ;     bcf         INTCON, TMR0IF
                                           ; sd_card_acmd41                          ; now initialise with acmd41
                                           ;     call        read_spi
                                           ;     movlw       0x77                    ; means send cmd55, then cmd41
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x01
                                           ;     call        write_spi
                                           ; 
                                           ; sd_card_ack_cmd55                       ; check cmd 55 was acknowledged
                                           ;     btfsc       INTCON, TMR0IF
                                           ;     goto        sd_timeout
                                           ;     call        read_spi
                                           ;     xorlw       0xff
                                           ;     bz          sd_card_ack_cmd55
                                           ;     xorlw       0xfe
                                           ;     bnz         error_exit              ; for mmc support ought to try cmd1 here
                                           ;                                         ; not really important in this day...
                                           ; 
                                           ;     call        read_spi
                                           ;     movlw       0x69                    ; cmd41
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     btfsc       sdflags, v2             ; signal that we are HC capable if the
                                           ;     movlw       0x40                    ; card is a version 2, otherwise no need
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x01
                                           ;     call        write_spi
                                           ; 
                                           ; sd_card_init6
                                           ;     btfsc       INTCON, TMR0IF
                                           ;     goto        sd_timeout
                                           ;     call        read_spi
                                           ;     xorlw       0xff                    ; if response was ff, try again it was
                                           ;     bz          sd_card_init6           ; just a bit slow
                                           ;     xorlw       0xfe                    ; 0xff ^ 0xfe = 0x01 > see if still idle
                                           ;     bz          sd_card_acmd41          ; if so, poll again
                                           ;     xorlw       0x01                    ; 0xff ^ 0xfe ^ 0x01 = 0x00
                                           ;     btfss       STATUS, Z               ; if zero card is ready
                                           ;     bra         error_exit              ; if it's none of these something went
                                           ;                                         ; wrong, exit
                                           ;     bcf         T0CON, TMR0ON           ; turn off timeout
                                           ;     bsf         LATC, P_SD_CS           ; release chip select
                                           ;     bsf         sdflags, cardinit
                                           ;     return
                                           
                                           sd_timeout
000a14   b78a     btfsc	0x8a, 0x3, 0x1         btfsc       sdflags, init_started   ; if this is in the init Z80 doesn't
000a16   d00b     bra	0xa2e                    bra         sd_timeout_nr           ; know about it, don't send a response
000a18   0aff     xorlw	0xff                   xorlw       0xff                    ; otherwise, correct for the last xor
000a1a   6f90     movwf	0x90, 0x1              movwf       temp2                   ; save the value
                                           
000a1c   6ad9     clrf	0xd9, 0                 clrf        FSR2L                   ; initialise the response buffer pointer
000a1e   0e03     movlw	0x3                    movlw       0x03
000a20   6eda     movwf	0xda, 0                movwf       FSR2H
000a22   0e54     movlw	0x54                   movlw       'T'                     ; set first character T for timeout
000a24   6ede     movwf	0xde, 0                movwf       POSTINC2
000a26   518b     movf	0x8b, 0, 0x1            movf        sd_command, w           ; add the last command sent to the SD
000a28   6ede     movwf	0xde, 0                movwf       POSTINC2
000a2a   5190     movf	0x90, 0, 0x1            movf        temp2, w                ; add the last response before timeout
000a2c   6ede     movwf	0xde, 0                movwf       POSTINC2
                                           
                                           sd_timeout_nr
000a2e   838a     bsf	0x8a, 0x1, 0x1           bsf         sdflags, carderr        ; set the error flag
000a30   828b     bsf	0x8b, 0x1, 0             bsf         LATC, P_SD_CS           ; and release the SD
000a32   0012     return	0                     return
                                           
                                           error_exit
000a34   b78a     btfsc	0x8a, 0x3, 0x1         btfsc       sdflags, init_started   ; don't send a report if in auto-init
000a36   d00a     bra	0xa4c                    bra         error_exit_nr
000a38   6f90     movwf	0x90, 0x1              movwf       temp2                   ; save the error code from the SD
                                           
000a3a   6ad9     clrf	0xd9, 0                 clrf        FSR2L
000a3c   0e03     movlw	0x3                    movlw       0x03
000a3e   6eda     movwf	0xda, 0                movwf       FSR2H
000a40   0e45     movlw	0x45                   movlw       'E'                     ; start with E for error
000a42   6ede     movwf	0xde, 0                movwf       POSTINC2
000a44   518b     movf	0x8b, 0, 0x1            movf        sd_command, w           ; add the last command sent to SD
000a46   6ede     movwf	0xde, 0                movwf       POSTINC2
000a48   5190     movf	0x90, 0, 0x1            movf        temp2, w                ; add the error response
000a4a   6ede     movwf	0xde, 0                movwf       POSTINC2
                                           
                                           error_exit_nr
000a4c   838a     bsf	0x8a, 0x1, 0x1           bsf         sdflags, carderr        ; cleared when card removed
000a4e   828b     bsf	0x8b, 0x1, 0             bsf         LATC, P_SD_CS
000a50   0012     return	0                     return
                                           
                                           sd_card_csd
000a52   928b     bcf	0x8b, 0x1, 0             bcf         LATC, P_SD_CS
                                           
000a54   0e49     movlw	0x49                   movlw       0x49
000a56   6f8b     movwf	0x8b, 0x1              movwf       sd_command
000a58   6b8f     clrf	0x8f, 0x1               clrf        sd_data+3
000a5a   6b8e     clrf	0x8e, 0x1               clrf        sd_data+2
000a5c   6b8d     clrf	0x8d, 0x1               clrf        sd_data+1
000a5e   6b8c     clrf	0x8c, 0x1               clrf        sd_data
                                           
000a60   ecb2     call	0xb64, 0                call        write_sd
000a62   f005
                                           
000a64   ec69     call	0xad2, 0                call        start_timeout
000a66   f005
000a68   eca9     call	0xb52, 0                call        read_sd
000a6a   f005
000a6c   9ed5     bcf	0xd5, 0x7, 0             bcf         T0CON, TMR0ON
                                           
000a6e   0a00     xorlw	0                      xorlw       0x00
000a70   e1e1     bnz	0xa34                    bnz         error_exit
                                           
000a72   ec69     call	0xad2, 0                call        start_timeout
000a74   f005
000a76   eca9     call	0xb52, 0                call        read_sd
000a78   f005
000a7a   9ed5     bcf	0xd5, 0x7, 0             bcf         T0CON, TMR0ON
                                           
000a7c   0afe     xorlw	0xfe                   xorlw       0xFE
000a7e   e1da     bnz	0xa34                    bnz         error_exit
                                           
000a80   0e10     movlw	0x10                   movlw       0x10
000a82   6f88     movwf	0x88, 0x1              movwf       count
                                           
                                           sd_card_csd_loop
000a84   ecf0     call	0xbe0, 0                call        read_spi
000a86   f005
000a88   6ede     movwf	0xde, 0                movwf       POSTINC2
000a8a   2f88     decfsz	0x88, 0x1, 0x1        decfsz      count,f
000a8c   d7fb     bra	0xa84                    bra         sd_card_csd_loop
                                           
000a8e   828b     bsf	0x8b, 0x1, 0             bsf         LATC, P_SD_CS
000a90   0012     return	0                     return
                                           
                                           ;     call        read_spi
                                           ;     movlw       0x49
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x01
                                           ;     call        write_spi
                                           ; 
                                           ; sd_card_csd_loop
                                           ;     call        read_spi
                                           ;     xorlw       0x00
                                           ;     btfss       STATUS, Z
                                           ;     bra         sd_card_csd_loop
                                           ; 
                                           ; sd_card_csd_loop2
                                           ;     call        read_spi
                                           ;     xorlw       0xfe
                                           ;     bnz         sd_card_csd_loop2
                                           ;     
                                           ;     movlw       0x10
                                           ;     movwf       count
                                           ; 
                                           ; sd_card_csd_loop3
                                           ;     call        read_spi
                                           ;     movwf       POSTINC2
                                           ;     decfsz      count,f
                                           ;     bra         sd_card_csd_loop3
                                           ; 
                                           ;     movlw       0x01
                                           ;     movwf       slave_count+1
                                           ;     movlw       0x10
                                           ;     movwf       slave_count
                                           ;     bsf         LATC, P_SD_CS
                                           ;     return
                                           
                                           sd_card_cid
000a92   928b     bcf	0x8b, 0x1, 0             bcf         LATC, P_SD_CS
                                           
000a94   0e4a     movlw	0x4a                   movlw       0x4A
000a96   6f8b     movwf	0x8b, 0x1              movwf       sd_command
                                           
000a98   6b8f     clrf	0x8f, 0x1               clrf        sd_data+3
000a9a   6b8e     clrf	0x8e, 0x1               clrf        sd_data+2
000a9c   6b8d     clrf	0x8d, 0x1               clrf        sd_data+1
000a9e   6b8c     clrf	0x8c, 0x1               clrf        sd_data
                                           
000aa0   ecb2     call	0xb64, 0                call        write_sd
000aa2   f005
                                           
000aa4   ec69     call	0xad2, 0                call        start_timeout
000aa6   f005
000aa8   eca9     call	0xb52, 0                call        read_sd
000aaa   f005
000aac   9ed5     bcf	0xd5, 0x7, 0             bcf         T0CON, TMR0ON
                                           
000aae   0a00     xorlw	0                      xorlw       0x00
000ab0   e1c1     bnz	0xa34                    bnz         error_exit
                                           
000ab2   ec69     call	0xad2, 0                call        start_timeout
000ab4   f005
000ab6   eca9     call	0xb52, 0                call        read_sd
000ab8   f005
000aba   9ed5     bcf	0xd5, 0x7, 0             bcf         T0CON, TMR0ON
                                           
000abc   0afe     xorlw	0xfe                   xorlw       0xFE
000abe   e1ba     bnz	0xa34                    bnz         error_exit
                                           
                                               
                                           ;     call        read_spi
                                           ;     movlw       0x4A
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x01
                                           ;     call        write_spi
                                           ; 
                                           ; sd_card_cid_loop
                                           ;     call        read_spi
                                           ;     xorlw       0x00
                                           ;     bnz         sd_card_cid_loop
                                           ; 
                                           ; sd_card_cid_loop2
                                           ;     call        read_spi
                                           ;     xorlw       0xfe
                                           ;     bnz         sd_card_cid_loop2
                                           
000ac0   0e10     movlw	0x10                   movlw       0x10
000ac2   6f88     movwf	0x88, 0x1              movwf       count
                                           
                                           sd_card_cid_read_loop
000ac4   ecf0     call	0xbe0, 0                call        read_spi
000ac6   f005
000ac8   6ede     movwf	0xde, 0                movwf       POSTINC2
000aca   2f88     decfsz	0x88, 0x1, 0x1        decfsz      count, f
000acc   d7fb     bra	0xac4                    bra         sd_card_cid_read_loop
                                           
000ace   828b     bsf	0x8b, 0x1, 0             bsf         LATC, P_SD_CS
000ad0   0012     return	0                     return
                                           
                                           start_timeout
000ad2   6ad7     clrf	0xd7, 0                 clrf        TMR0H
000ad4   6ad6     clrf	0xd6, 0                 clrf        TMR0L
000ad6   8ed5     bsf	0xd5, 0x7, 0             bsf         T0CON, TMR0ON           ; start timeout
000ad8   94f2     bcf	0xf2, 0x2, 0             bcf         INTCON, TMR0IF
000ada   0012     return	0                     return
                                           
                                           sd_card_read_block
000adc   928b     bcf	0x8b, 0x1, 0             bcf         LATC, P_SD_CS
                                           
000ade   0e51     movlw	0x51                   movlw       0x51                    ; CMD17
000ae0   6f8b     movwf	0x8b, 0x1              movwf       sd_command
                                           
                                               ; assume address already set
                                           
000ae2   ecb2     call	0xb64, 0                call        write_sd
000ae4   f005
                                           
000ae6   ec69     call	0xad2, 0                call        start_timeout
000ae8   f005
000aea   eca9     call	0xb52, 0                call        read_sd
000aec   f005
000aee   9ed5     bcf	0xd5, 0x7, 0             bcf         T0CON, TMR0ON
                                           
000af0   0a00     xorlw	0                      xorlw       0x00
000af2   e1a0     bnz	0xa34                    bnz         error_exit
                                           
000af4   ec69     call	0xad2, 0                call        start_timeout
000af6   f005
                                           sd_card_read_block_wait
000af8   eca9     call	0xb52, 0                call        read_sd
000afa   f005
000afc   9ed5     bcf	0xd5, 0x7, 0             bcf         T0CON, TMR0ON
                                           
000afe   0afe     xorlw	0xfe                   xorlw       0xFE
000b00   e1fb     bnz	0xaf8                    bnz         sd_card_read_block_wait ; wait for a data token
                                           
000b02   0e01     movlw	0x1                    movlw       0x01                    ; set count to 514-1 bytes (512 data and
000b04   6f88     movwf	0x88, 0x1              movwf       count                   ; two checksum)
000b06   0e02     movlw	0x2                    movlw       0x02
000b08   6f89     movwf	0x89, 0x1              movwf       count+1
                                           
                                           sd_card_read_block_loop
000b0a   ecf0     call	0xbe0, 0                call        read_spi
000b0c   f005
000b0e   6ede     movwf	0xde, 0                movwf       POSTINC2
000b10   0788     decf	0x88, 0x1, 0x1          decf        count, f
000b12   b0d8     btfsc	0xd8, 0, 0             btfsc       STATUS, C               ; skips if count overflowed
000b14   d7fa     bra	0xb0a                    bra         sd_card_read_block_loop
000b16   0789     decf	0x89, 0x1, 0x1          decf        count+1, f
000b18   b0d8     btfsc	0xd8, 0, 0             btfsc       STATUS, C
000b1a   d7f7     bra	0xb0a                    bra         sd_card_read_block_loop
                                           
000b1c   828b     bsf	0x8b, 0x1, 0             bsf         LATC, P_SD_CS
000b1e   0012     return	0                     return
                                           
                                           ; push_z80
                                           ;     movwf       PORTD
                                           ;     bcf         LATB, P_RXF
                                           ; z80_push_loop
                                           ;     btfsc       TRISE, OBF
                                           ;     bra         z80_push_loop
                                           ; 
                                           ;     bsf         LATB, P_RXF
                                           ;     return
                                           
                                           ; debug
                                           ;     movwf       MAIN_TEMP
                                           ;     swapf       WREG, w
                                           ;     call        hex
                                           ;     movwf       DREG
                                           ;     movlw       0x05
                                           ;     movwf       LO_ADDR
                                           ;     clrf        HI_ADDR
                                           ;     call        ensure_master
                                           ;     call        io_write
                                           ;     movf        MAIN_TEMP, w
                                           ;     call        hex
                                           ;     movwf       DREG
                                           ;     call        io_write
                                           ;     call        revert_master
                                           ;     return
                                           ; 
                                           ; hex
                                           ;     clrf        PCLATH
                                           ;     andlw       0xf
                                           ;     rlncf       WREG, w
                                           ;     addlw       low hex_lut
                                           ;     btfsc       STATUS, C
                                           ;     incf        PCLATH, f
                                           ;     movwf       low_jump
                                           ;     movlw       high hex_lut
                                           ;     addwf       PCLATH, f
                                           ;     movf        low_jump, w
                                           ;     movwf       PCL
                                           ; 
                                           ; hex_lut
                                           ;     retlw       '0'
                                           ;     retlw       '1'
                                           ;     retlw       '2'
                                           ;     retlw       '3'
                                           ;     retlw       '4'
                                           ;     retlw       '5'
                                           ;     retlw       '6'
                                           ;     retlw       '7'
                                           ;     retlw       '8'
                                           ;     retlw       '9'
                                           ;     retlw       'A'
                                           ;     retlw       'B'
                                           ;     retlw       'C'
                                           ;     retlw       'D'
                                           ;     retlw       'E'
                                           ;     retlw       'F'
                                           ; 
                                           ; msg
                                           ;     movlw       0x05
                                           ;     movwf       LO_ADDR
                                           ;     clrf        HI_ADDR
                                           ;     tblrd*+
                                           ;     movff       TABLAT, DREG
                                           ;     movlw       0x00
                                           ;     xorwf       DREG, w
                                           ;     btfsc       STATUS, Z
                                           ;     return
                                           ;     call        ensure_master
                                           ;     call        io_write
                                           ;     call        revert_master
                                           ;     bra         msg
                                           ; 
                                           ; newline
                                           ;     movlw       0xA
                                           ;     movwf       DREG
                                           ;     movlw       0x05
                                           ;     movwf       LO_ADDR
                                           ;     clrf        HI_ADDR
                                           ;     call        ensure_master
                                           ;     call        io_write
                                           ;     call        revert_master
                                           ;     return
                                           
                                           ;===============================================================================
                                           ; sd_card_poll - called in the main loop, checks the card detect pin
                                           ;===============================================================================
                                           
                                           ;; If the card detect pin is low and the init flag is clear, calls init.  If
                                           ;; card detect pin is high (no card) clears all flags.
                                           sd_card_poll
000b20   b881     btfsc	0x81, 0x4, 0           btfsc       PORTB, P_SD_FIND
000b22   d014     bra	0xb4c                    bra         sd_card_removed
                                           
                                               ; sd attached, check it's init or err state
000b24   0e06     movlw	0x6                    movlw       0x6
000b26   158a     andwf	0x8a, 0, 0x1           andwf       sdflags, w
000b28   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS, Z
                                               ; not zero so already been started, return
000b2a   0012     return	0                     return
                                           
000b2c   b78a     btfsc	0x8a, 0x3, 0x1         btfsc       sdflags, init_started
000b2e   d004     bra	0xb38                    bra         sd_init_timeout
000b30   ec69     call	0xad2, 0                call        start_timeout
000b32   f005
000b34   878a     bsf	0x8a, 0x3, 0x1           bsf         sdflags, init_started
000b36   0012     return	0                     return
                                           
                                           sd_init_timeout
000b38   b4f2     btfsc	0xf2, 0x2, 0           btfsc       INTCON, TMR0IF
000b3a   d001     bra	0xb3e                    bra         sd_do_init
                                               ; debounce time not up
000b3c   0012     return	0                     return
                                           
                                           sd_do_init
                                               ; disable timer
000b3e   9ed5     bcf	0xd5, 0x7, 0             bcf         T0CON, TMR0ON
000b40   ecbc     call	0x978, 0                call        sd_card_init
000b42   f004
000b44   b58a     btfsc	0x8a, 0x2, 0x1         btfsc       sdflags, cardinit
000b46   9e8a     bcf	0x8a, 0x7, 0             bcf         LATB, P_SD_PRES         ; tell Z80 there's a started card here
                                           
                                               ; clear the init timer
000b48   978a     bcf	0x8a, 0x3, 0x1           bcf         sdflags, init_started
000b4a   0012     return	0                     return
                                           
                                           sd_card_removed
000b4c   6b8a     clrf	0x8a, 0x1               clrf        sdflags
000b4e   8e8a     bsf	0x8a, 0x7, 0             bsf         LATB, P_SD_PRES         ; signal sd removed
000b50   0012     return	0                     return
                                           
                                           ;-------------------------------------------------------------------------------
                                           ; read_sd - internal mid-level read from SD
                                           ;-------------------------------------------------------------------------------
                                           read_sd
000b52   b4f2     btfsc	0xf2, 0x2, 0           btfsc       INTCON, TMR0IF
000b54   ef0a     goto	0xa14                   goto        sd_timeout
000b56   f005
000b58   ecf0     call	0xbe0, 0                call        read_spi
000b5a   f005
000b5c   0aff     xorlw	0xff                   xorlw       0xff
000b5e   e0f9     bz	0xb52                     bz          read_sd
000b60   0aff     xorlw	0xff                   xorlw       0xff
000b62   0012     return	0                     return
                                           
                                           ;-------------------------------------------------------------------------------
                                           ; write_sd - internal mid-level write a command to SD
                                           ;-------------------------------------------------------------------------------
                                           write_sd
                                               ; test for an ACMD41
000b64   bf8b     btfsc	0x8b, 0x7, 0x1         btfsc       sd_command, 7
000b66   eccc     call	0xb98, 0                call        sd_cmd55
000b68   f005
                                           
000b6a   ecf0     call	0xbe0, 0                call        read_spi
000b6c   f005
000b6e   518b     movf	0x8b, 0, 0x1            movf        sd_command, w
000b70   0b7f     andlw	0x7f                   andlw       0x7F
000b72   ecf5     call	0xbea, 0                call        write_spi
000b74   f005
                                           
                                               ; now the 32 bit data
000b76   518f     movf	0x8f, 0, 0x1            movf        sd_data+3, w
000b78   ecf5     call	0xbea, 0                call        write_spi
000b7a   f005
000b7c   518e     movf	0x8e, 0, 0x1            movf        sd_data+2, w
000b7e   ecf5     call	0xbea, 0                call        write_spi
000b80   f005
000b82   518d     movf	0x8d, 0, 0x1            movf        sd_data+1, w
000b84   ecf5     call	0xbea, 0                call        write_spi
000b86   f005
000b88   518c     movf	0x8c, 0, 0x1            movf        sd_data, w
000b8a   ecf5     call	0xbea, 0                call        write_spi
000b8c   f005
                                           
                                               ; now the checksum, might need to be a real one
000b8e   ece7     call	0xbce, 0                call        sd_get_checksum
000b90   f005
000b92   ecf5     call	0xbea, 0                call        write_spi
000b94   f005
                                           
000b96   0012     return	0                     return
                                           
                                           ; send the special command 55 which preceeds ACMD codes
                                           sd_cmd55
000b98   ecf0     call	0xbe0, 0                call        read_spi
000b9a   f005
000b9c   0e77     movlw	0x77                   movlw       0x77
000b9e   ecf5     call	0xbea, 0                call        write_spi
000ba0   f005
000ba2   0e00     movlw	0                      movlw       0x00
000ba4   ecf5     call	0xbea, 0                call        write_spi
000ba6   f005
000ba8   0e00     movlw	0                      movlw       0x00
000baa   ecf5     call	0xbea, 0                call        write_spi
000bac   f005
000bae   0e00     movlw	0                      movlw       0x00
000bb0   ecf5     call	0xbea, 0                call        write_spi
000bb2   f005
000bb4   0e00     movlw	0                      movlw       0x00
000bb6   ecf5     call	0xbea, 0                call        write_spi
000bb8   f005
000bba   0e01     movlw	0x1                    movlw       0x01
000bbc   ecf5     call	0xbea, 0                call        write_spi
000bbe   f005
                                           
000bc0   eca9     call	0xb52, 0                call        read_sd
000bc2   f005
000bc4   0b7e     andlw	0x7e                   andlw       0x7e
000bc6   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS, Z
000bc8   ef1a     goto	0xa34                   goto        error_exit                      ; if it was not zero an error
000bca   f005
                                                                                           ; flag was set
000bcc   0012     return	0                     return
                                           
                                           sd_get_checksum
000bce   0e40     movlw	0x40                   movlw       0x40            ; cmd0
000bd0   198b     xorwf	0x8b, 0, 0x1           xorwf       sd_command, w
000bd2   b4d8     btfsc	0xd8, 0x2, 0           btfsc       STATUS, Z
000bd4   0c95     retlw	0x95                   retlw       0x95
000bd6   0e48     movlw	0x48                   movlw       0x48            ; cmd8
000bd8   198b     xorwf	0x8b, 0, 0x1           xorwf       sd_command, w
000bda   b4d8     btfsc	0xd8, 0x2, 0           btfsc       STATUS, Z
000bdc   0c87     retlw	0x87                   retlw       0x87
                                               ; neither of those, so don't care
000bde   0c01     retlw	0x1                    retlw       0x01
                                           
                                           ;-------------------------------------------------------------------------------
                                           ; read_spi - internal low-level read a byte from SPI
                                           ;-------------------------------------------------------------------------------
                                           
                                           read_spi
000be0   68c9     setf	0xc9, 0                 setf        SSPBUF
                                           read_spi_loop
000be2   a0c7     btfss	0xc7, 0, 0             btfss       SSPSTAT, BF
000be4   d7fe     bra	0xbe2                    bra         read_spi_loop
000be6   50c9     movf	0xc9, 0, 0              movf        SSPBUF, w
000be8   0012     return	0                     return
                                           
                                           ;-------------------------------------------------------------------------------
                                           ; write_spi - internal low-level write a byte to the SPI peripheral
                                           ;-------------------------------------------------------------------------------
                                           
                                           write_spi
000bea   6ec9     movwf	0xc9, 0                movwf       SSPBUF
                                           write_spi_loop
000bec   a0c7     btfss	0xc7, 0, 0             btfss       SSPSTAT, BF
000bee   d7fe     bra	0xbec                    bra         write_spi_loop
000bf0   50c9     movf	0xc9, 0, 0              movf        SSPBUF, w
000bf2   0012     return	0                     return
                                           
                                           
                                           ; debugmsg1
                                           ;     db          '\n', 'C'
                                           ;     db          'M', 'D'
                                           ;     db          '0', 0x00
                                           ; 
                                           ; debugmsg2
                                           ;     db          'G', 'o'
                                           ;     db          't', 0x00
                                           ; 
                                           ; debugmsg3
                                           ;     db          'A', 'C'
                                           ;     db          'M', 'D'
                                           ;     db          '4', '1'
                                           ;     db          ' ', 0x00
                                           ; 
                                           ; debugmsg4
                                           ;     db          '\n', '['
                                           ;     db          ' ', 'O'
                                           ;     db          'k', ' '
                                           ;     db          ']', '\n'
                                           ;     db          0x00, 0x00
                                           ; 
                                           ; em
                                           ;     db          'E', 'r'
                                           ;     db          'r', 'o'
                                           ;     db          'r', '!'
                                           ;     db          ' ', 0x00
                                           ; 
                                           ; tom
                                           ;     db          'T', '.'
                                           ;     db          'O', 0x00
                                           ; -- Export these --------------------------------------------------------------
                                           
                                               GLOBAL      sd_init
                                               ;GLOBAL      sd_card_init    ; shouldn't be global
                                               GLOBAL      sd_card_csd
                                               GLOBAL      sd_card_cid
                                               GLOBAL      sd_card_poll
                                               GLOBAL      sd_card_read_block
                                               
                                               GLOBAL      sd_data
                                           
                                           end
                                           ;==============================================================================
                                           ;    main.asm
                                           ;==============================================================================
                                           
                                           ;------------------------------------------------------------------------------
                                           ;
                                           ; Simple Debug Kernel for CPU supervisor on Z80 Project Mark 2
                                           ; File Version 2 - 17 Oct 09
                                           ; hairymnstr@gmail.com
                                           ;
                                           ; Copyright (C) 2009  Nathan Dumont
                                           ;
                                           ; This program is free software: you can redistribute it and/or modify
                                           ; it under the terms of the GNU General Public License as published by
                                           ; the Free Software Foundation, either version 3 of the License, or
                                           ; (at your option) any later version.
                                           ;
                                           ; This program is distributed in the hope that it will be useful,
                                           ; but WITHOUT ANY WARRANTY; without even the implied warranty of
                                           ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                           ; GNU General Public License for more details.
                                           ;
                                           ; You should have received a copy of the GNU General Public License
                                           ; along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                           ;
                                           ;
                                           ;------------------------------------------------------------------------------
                                           
                                           list p=18f4520
                                           #include <p18f4520.inc>
                                                   LIST
                                           
                                           ;==========================================================================
                                           ;  MPASM PIC18F4520 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2007 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           #include "portpins.inc"
                                           ;== PORT Definitions ==========================================================
                                           
                                           ;-- PORT A --------------------------------------------------------------------
                                           
                                           P_RESET         EQU     0
                                           P_BUSRQ         EQU     1
                                           P_MREQ          EQU     2
                                           P_IORQ          EQU     3
                                           P_WAIT          EQU     4
                                           P_HI_LAT        EQU     5
                                           
                                           ;-- PORT C --------------------------------------------------------------------
                                           
                                           P_BUSACK        EQU     0
                                           P_SD_CS         EQU     1
                                           P_CLK           EQU     2
                                           P_SD_CK         EQU     3
                                           P_SD_DI         EQU     4
                                           P_SD_DO         EQU     5
                                           P_TX            EQU     6
                                           P_RX            EQU     7
                                           
                                           ;-- PORT B ---------------------------------------------------------------------
                                           
                                           P_SD_FIND       EQU     4
                                           P_TXE           EQU     5
                                           P_RXF           EQU     6
                                           P_SD_PRES       EQU     7
                                           
                                           SLAVE_LATB_DEF EQU     b'11000000'
                                           SLAVE_TRISB_DEF EQU     b'00011111'
                                           
                                           ;-- PORT E --------------------------------------------------------------------
                                           
                                           P_RD            EQU     0
                                           P_WR            EQU     1
                                           P_CS            EQU     2
                                           
                                           errorlevel -302
                                           errorlevel -205
                                           
                                           CONFIG OSC = HSPLL
                                           CONFIG FCMEN = ON, IESO = OFF, PWRT = ON, BOREN = OFF, BORV = 0
                                           CONFIG WDT = OFF, WDTPS = 1, MCLRE = ON, LPT1OSC = OFF
                                           CONFIG PBADEN = OFF, CCP2MX = PORTC, STVREN = ON, LVP = OFF
                                           CONFIG XINST = OFF, DEBUG = OFF, CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                                           CONFIG CPB = OFF, CPD = OFF, WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                                           CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF, EBTR0 = OFF, EBTR1 = OFF
                                           CONFIG EBTR2 = OFF, EBTR3 = OFF, EBTRB = OFF
                                           
                                           ; -- Externals From serial.asm ------------------------------------------------
                                           
                                               EXTERN      serial_rx_int
                                               EXTERN      serial_init
                                               EXTERN      serial_command_dispatch
                                           
                                           ; -- Externals From host_bus.asm ----------------------------------------------
                                           
                                               EXTERN      get_reset
                                               EXTERN      get_dma
                                               EXTERN      get_slave
                                               EXTERN      ensure_master
                                               EXTERN      revert_master
                                               EXTERN      slave_int
                                               EXTERN      slave_command_dispatch
                                           
                                           ; -- Externals From boot.asm ---------------------------------------------------
                                           
                                               EXTERN      boot_init
                                               EXTERN      boot_load
                                           
                                           ; -- Externals From sd.asm -----------------------------------------------------
                                           
                                               EXTERN      sd_init
                                               EXTERN      sd_card_init
                                               EXTERN      sd_card_csd
                                               EXTERN      sd_card_cid
                                               EXTERN      sd_card_poll
                                           ;== Variables =================================================================
                                           
                                           UDATA
                                           
                                           MAIN_TEMP       RES     1
                                           
                                           org 0x00
000000   ef0b     goto	0x16                    goto init
000002   f000
                                           
                                           org 0x08
                                           interrupt
000008   ba9e     btfsc	0x9e, 0x5, 0           btfsc       PIR1,RCIF       ; test serial receive interrupt flag
00000a   ec5b     call	0xb6, 0                 call        serial_rx_int   ; set, so handle received data
00000c   f000
00000e   be9e     btfsc	0x9e, 0x7, 0           btfsc       PIR1, PSPIF
000010   eca7     call	0xd4e, 0                call        slave_int       ; parallel port write
000012   f006
000014   0011     retfie	0x1                   retfie      FAST            ; all interrupts serviced, return reinstating context
                                           
                                           init
000016   0e0f     movlw	0xf                    movlw       0x0F
000018   6ec1     movwf	0xc1, 0                movwf       ADCON1          ; no ADC functionality thanks.
00001a   ec3b     call	0xc76, 0                call        get_reset       ; put the Z80 into reset before we start doing stuff
00001c   f006
00001e   ec21     call	0x42, 0                 call        serial_init     ; initialise the serial port
000020   f000
000022   ec36     call	0x106c, 0               call        boot_init       ; set up CPU clock etc.
000024   f008
000026   ecaf     call	0x95e, 0                call        sd_init         ; set up pins for the SD card
000028   f004
                                           
                                           ;     bcf         TRISC,5         ; the extra LED on SD card port needs output
                                           ;     bcf         LATC,5
                                           
00002a   ec78     call	0x10f0, 0               call        boot_load
00002c   f008
                                               
                                           ;     bsf         LATC,5
                                           
                                               ; let the Z80 go!!
00002e   ec49     call	0xc92, 0                call        get_slave
000030   f006
                                           
                                           
                                               
                                           ;     call        sd_card_init
                                           
                                           ;     call        sd_card_csd
                                           
                                           ;     call        sd_card_cid
                                           
                                           main
                                               ; call serial_command_dispatch, checks for a whole command received and
                                               ; calls an appropriate handler function for the command
000032   ec90     call	0xb20, 0                call        sd_card_poll
000034   f005
000036   ec96     call	0x12c, 0                call        serial_command_dispatch
000038   f000
00003a   ecf2     call	0xde4, 0                call        slave_command_dispatch
00003c   f006
00003e   ef19     goto	0x32                    goto        main
000040   f000
                                           
                                           ; == Export these =============================================================
                                           
                                               GLOBAL      MAIN_TEMP
                                           end
                                           list p=18f4520
                                           include <p18f4520.inc>
                                                   LIST
                                           
                                           ;==========================================================================
                                           ;  MPASM PIC18F4520 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2007 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           include <portpins.inc>
                                           ;== PORT Definitions ==========================================================
                                           
                                           ;-- PORT A --------------------------------------------------------------------
                                           
                                           P_RESET         EQU     0
                                           P_BUSRQ         EQU     1
                                           P_MREQ          EQU     2
                                           P_IORQ          EQU     3
                                           P_WAIT          EQU     4
                                           P_HI_LAT        EQU     5
                                           
                                           ;-- PORT C --------------------------------------------------------------------
                                           
                                           P_BUSACK        EQU     0
                                           P_SD_CS         EQU     1
                                           P_CLK           EQU     2
                                           P_SD_CK         EQU     3
                                           P_SD_DI         EQU     4
                                           P_SD_DO         EQU     5
                                           P_TX            EQU     6
                                           P_RX            EQU     7
                                           
                                           ;-- PORT B ---------------------------------------------------------------------
                                           
                                           P_SD_FIND       EQU     4
                                           P_TXE           EQU     5
                                           P_RXF           EQU     6
                                           P_SD_PRES       EQU     7
                                           
                                           SLAVE_LATB_DEF EQU     b'11000000'
                                           SLAVE_TRISB_DEF EQU     b'00011111'
                                           
                                           ;-- PORT E --------------------------------------------------------------------
                                           
                                           P_RD            EQU     0
                                           P_WR            EQU     1
                                           P_CS            EQU     2
                                           
                                               UDATA
                                           
                                           eeprom_addr     RES     1
                                           eeprom_data     RES     1
                                           
                                               CODE
                                           
                                           eeprom_write
000bf4   5192     movf	0x92, 0, 0x1            movf        eeprom_addr, w
000bf6   6ea9     movwf	0xa9, 0                movwf       EEADR
000bf8   5193     movf	0x93, 0, 0x1            movf        eeprom_data, w
000bfa   6ea8     movwf	0xa8, 0                movwf       EEDATA
000bfc   9ea6     bcf	0xa6, 0x7, 0             bcf         EECON1, EEPGD
000bfe   9ca6     bcf	0xa6, 0x6, 0             bcf         EECON1, CFGS
000c00   84a6     bsf	0xa6, 0x2, 0             bsf         EECON1, WREN
                                           
000c02   9ef2     bcf	0xf2, 0x7, 0             bcf         INTCON, GIE
000c04   0e55     movlw	0x55                   movlw       0x55
000c06   6ea7     movwf	0xa7, 0                movwf       EECON2
000c08   0eaa     movlw	0xaa                   movlw       0xAA
000c0a   6ea7     movwf	0xa7, 0                movwf       EECON2
000c0c   82a6     bsf	0xa6, 0x1, 0             bsf         EECON1, WR
                                           
                                           eeprom_write_wait
000c0e   b2a6     btfsc	0xa6, 0x1, 0           btfsc       EECON1, WR
000c10   d7fe     bra	0xc0e                    bra         eeprom_write_wait
                                           
000c12   8ef2     bsf	0xf2, 0x7, 0             bsf         INTCON, GIE
                                           
000c14   94a6     bcf	0xa6, 0x2, 0             bcf         EECON1, WREN
                                           
000c16   0012     return	0                     return
                                           
                                           eeprom_read
000c18   5192     movf	0x92, 0, 0x1            movf        eeprom_addr, w
000c1a   6ea9     movwf	0xa9, 0                movwf       EEADR
000c1c   9ea6     bcf	0xa6, 0x7, 0             bcf         EECON1, EEPGD
000c1e   9ca6     bcf	0xa6, 0x6, 0             bcf         EECON1, CFGS
000c20   80a6     bsf	0xa6, 0, 0               bsf         EECON1, RD
000c22   50a8     movf	0xa8, 0, 0              movf        EEDATA, w
000c24   6f93     movwf	0x93, 0x1              movwf       eeprom_data
                                           
000c26   0012     return	0                     return
                                           
                                           ;== Export all labels ==========================================================
                                           
                                               GLOBAL      eeprom_write
                                               GLOBAL      eeprom_read
                                           
                                               GLOBAL      eeprom_addr
                                               GLOBAL      eeprom_data
                                           
                                           end
                                           ;==============================================================================
                                           ;    host_bus.asm
                                           ;==============================================================================
                                           list p=18f4520
                                           include <p18f4520.inc>
                                                   LIST
                                           
                                           ;==========================================================================
                                           ;  MPASM PIC18F4520 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2007 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           include <portpins.inc>
                                           ;== PORT Definitions ==========================================================
                                           
                                           ;-- PORT A --------------------------------------------------------------------
                                           
                                           P_RESET         EQU     0
                                           P_BUSRQ         EQU     1
                                           P_MREQ          EQU     2
                                           P_IORQ          EQU     3
                                           P_WAIT          EQU     4
                                           P_HI_LAT        EQU     5
                                           
                                           ;-- PORT C --------------------------------------------------------------------
                                           
                                           P_BUSACK        EQU     0
                                           P_SD_CS         EQU     1
                                           P_CLK           EQU     2
                                           P_SD_CK         EQU     3
                                           P_SD_DI         EQU     4
                                           P_SD_DO         EQU     5
                                           P_TX            EQU     6
                                           P_RX            EQU     7
                                           
                                           ;-- PORT B ---------------------------------------------------------------------
                                           
                                           P_SD_FIND       EQU     4
                                           P_TXE           EQU     5
                                           P_RXF           EQU     6
                                           P_SD_PRES       EQU     7
                                           
                                           SLAVE_LATB_DEF EQU     b'11000000'
                                           SLAVE_TRISB_DEF EQU     b'00011111'
                                           
                                           ;-- PORT E --------------------------------------------------------------------
                                           
                                           P_RD            EQU     0
                                           P_WR            EQU     1
                                           P_CS            EQU     2
                                           
                                           ; -- Externals From eeprom.asm -------------------------------------------------
                                           
                                               EXTERN      eeprom_read
                                               EXTERN      eeprom_write
                                           
                                               EXTERN      eeprom_data
                                               EXTERN      eeprom_addr
                                           
                                           ; -- Externals From sd.asm -----------------------------------------------------
                                           
                                               EXTERN      sd_card_cid
                                               EXTERN      sd_card_csd
                                               EXTERN      sd_card_read_block
                                           
                                               EXTERN      sd_data
                                           
                                               UDATA
                                           carderr           equ   1
                                           
                                           LO_ADDR RES     1
                                           HI_ADDR RES     1
                                           DREG    RES     1
                                           
                                           MODE            RES     1
                                           TEMP_MODE       RES     1
                                           
                                           low_jump        res     1
                                           
                                           slave_latb_temp         res     1
                                           slave_trisb_temp        res     1
                                           
                                           slave_count             res     2
                                           slaveflags              res     1
                                           
                                           busy                    equ     0
                                           rxbytes                 equ     1
                                           txbytes                 equ     2
                                           
                                               CODE
                                           
                                           ;== Z80 Bus interfacing functions =============================================
                                           
                                           ;******************************************************************************
                                           ;*                                                                            *
                                           ;* ensure_master - if in slave mode acquire DMA control and return.           *
                                           ;*                 otherwise return immediately.  Note current state.         *
                                           ;*                                                                            *
                                           ;* Inputs:  NONE                                                              *
                                           ;* Outputs: NONE                                                              *
                                           ;* Called:  set_master                                                        *
                                           ;* Changes: TEMP_MODE                                                         *
                                           ;*                                                                            *
                                           ;******************************************************************************
                                           
                                           ensure_master
                                               ; check_mode
000c28   5197     movf	0x97, 0, 0x1            movf        MODE,w
000c2a   6f98     movwf	0x98, 0x1              movwf       TEMP_MODE       ; save the mode at the entry to this function
000c2c   0a00     xorlw	0                      xorlw       0x00     
000c2e   e001     bz	0xc32                     bz          ensure_master_not_master
000c30   0012     return	0                     return                      ; already master so just return
                                           ensure_master_not_master
                                               ; not master need to get DMA mode
000c32   ec2f     call	0xc5e, 0                call        get_dma
000c34   f006
000c36   0012     return	0                     return
                                           
                                           ;******************************************************************************
                                           ;*                                                                            *
                                           ;* revert_master - set master mode back to the mode in TEMP_MODE              *
                                           ;*                                                                            *
                                           ;******************************************************************************
                                           
                                           revert_master
000c38   5197     movf	0x97, 0, 0x1            movf        MODE,w
000c3a   1998     xorwf	0x98, 0, 0x1           xorwf       TEMP_MODE,w
000c3c   e101     bnz	0xc40                    bnz         revert_master_needs_change
000c3e   0012     return	0                     return              ; MODE and TEMP_MODE matched don't change
                                           revert_master_needs_change
000c40   b198     btfsc	0x98, 0, 0x1           btfsc       TEMP_MODE,0     ; test reset mode bit
000c42   ef29     goto	0xc52                   goto        revert_master_reset
000c44   f006
000c46   b398     btfsc	0x98, 0x1, 0x1         btfsc       TEMP_MODE,1     ; test DMA master mode bit
000c48   ef2c     goto	0xc58                   goto        revert_master_dma
000c4a   f006
                                               ; if neither of those need to switch back to slave
000c4c   ec49     call	0xc92, 0                call        get_slave
000c4e   f006
000c50   0012     return	0                     return
                                           
                                           revert_master_reset
000c52   ec3b     call	0xc76, 0                call        get_reset       ; assert the reset line
000c54   f006
000c56   0012     return	0                     return
                                           
                                           revert_master_dma
000c58   ec2f     call	0xc5e, 0                call        get_dma         ; get DMA control
000c5a   f006
000c5c   0012     return	0                     return
                                           
                                           
                                           get_dma
                                               ; save state of slave registers
000c5e   cf8a     movff	0xf8a, 0x9a            movff       LATB, slave_latb_temp
000c60   f09a
000c62   cf93     movff	0xf93, 0x9b            movff       TRISB, slave_trisb_temp
000c64   f09b
000c66   9289     bcf	0x89, 0x1, 0             bcf         LATA,1          ; assert the BUSRQ signal low
                                           get_dma_loop
000c68   b082     btfsc	0x82, 0, 0             btfsc       PORTC,0         ; wait for BUSACK to go low
000c6a   d7fe     bra	0xc68                    bra         get_dma_loop
000c6c   0e02     movlw	0x2                    movlw       0x02
000c6e   6f97     movwf	0x97, 0x1              movwf       MODE            ; set mode to DMA master
000c70   ec4d     call	0xc9a, 0                call        set_master
000c72   f006
000c74   0012     return	0                     return
                                           
                                           get_reset
000c76   9089     bcf	0x89, 0, 0               bcf         LATA,0          ; pull reset low
                                           
                                               ; while waiting for the Z80 M cycle to end, reset the slave device settings
000c78   0ec0     movlw	0xc0                   movlw       SLAVE_LATB_DEF
000c7a   6f9a     movwf	0x9a, 0x1              movwf       slave_latb_temp
000c7c   0e1f     movlw	0x1f                   movlw       SLAVE_TRISB_DEF
000c7e   6f9b     movwf	0x9b, 0x1              movwf       slave_trisb_temp
000c80   6b9c     clrf	0x9c, 0x1               clrf        slave_count
000c82   6b9d     clrf	0x9d, 0x1               clrf        slave_count+1
000c84   6b9e     clrf	0x9e, 0x1               clrf        slaveflags
000c86   0000     nop                          nop                         ; leave time for the M cycle to finish
000c88   0e01     movlw	0x1                    movlw       0x01
000c8a   6f97     movwf	0x97, 0x1              movwf       MODE
000c8c   ec4d     call	0xc9a, 0                call        set_master
000c8e   f006
000c90   0012     return	0                     return
                                           
                                           get_slave
000c92   6b97     clrf	0x97, 0x1               clrf        MODE            ; set mode to slave
000c94   ec58     call	0xcb0, 0                call        set_slave       ; set IO into slave mode
000c96   f006
000c98   0012     return	0                     return
                                           ;******************************************************************************
                                           ;*                                                                            *
                                           ;* set_master - configure pins so PIC is master device                        *
                                           ;*                                                                            *
                                           ;* Inputs:  NONE                                                              *
                                           ;* Outputs: NONE                                                              *
                                           ;* Called:                                                                    *
                                           ;* Changes: TRISB, TRISE, TRISA                                               *
                                           ;*                                                                            *
                                           ;******************************************************************************
                                           
                                           set_master
                                               ; set the address pins to output
                                               ; disable PSP interrupts
000c9a   9e9d     bcf	0x9d, 0x7, 0             bcf         PIE1, PSPIE
000c9c   6a93     clrf	0x93, 0                 clrf        TRISB
000c9e   0eec     movlw	0xec                   movlw       b'11101100'     ;RD and WR as output, disable PSP
000ca0   1696     andwf	0x96, 0x1, 0           andwf       TRISE,f
000ca2   0eff     movlw	0xff                   movlw       0xFF
000ca4   6e8d     movwf	0x8d, 0                movwf       LATE            ;set RD and WR High
                                           
000ca6   0ed0     movlw	0xd0                   movlw       b'11010000'
000ca8   1692     andwf	0x92, 0x1, 0           andwf       TRISA,f
000caa   0e3c     movlw	0x3c                   movlw       b'00111100'
000cac   1289     iorwf	0x89, 0x1, 0           iorwf       LATA,f
000cae   0012     return	0                     return
                                           
                                           set_slave
000cb0   c09a     movff	0x9a, 0xf8a            movff       slave_latb_temp, LATB
000cb2   ff8a
000cb4   c09b     movff	0x9b, 0xf93            movff       slave_trisb_temp, TRISB
000cb6   ff93
                                           ;     setf        TRISB
000cb8   0e17     movlw	0x17                   movlw       b'00010111'     ; PSP mode
000cba   1296     iorwf	0x96, 0x1, 0           iorwf       TRISE, f
000cbc   6889     setf	0x89, 0                 setf        LATA            ; all pins in A are high or don't care
000cbe   0ecc     movlw	0xcc                   movlw       b'11001100'     ; MREQ, IORQ input
000cc0   6e92     movwf	0x92, 0                movwf       TRISA
                                           
                                               ; now enable PSP interrupt
000cc2   9e9e     bcf	0x9e, 0x7, 0             bcf         PIR1, PSPIF
000cc4   8e9d     bsf	0x9d, 0x7, 0             bsf         PIE1, PSPIE
000cc6   0012     return	0                     return
                                           
                                           ;******************************************************************************
                                           ;*                                                                            *
                                           ;* io_read - Read an address on the IO bus                                    *
                                           ;*                                                                            *
                                           ;* Inputs:  HI_ADDR, LO_ADDR                                                  *
                                           ;* Outputs: DREG                                                              *
                                           ;* Called:                                                                    *
                                           ;* Changes:                                                                   *
                                           ;*                                                                            *
                                           ;* Asssumes the PIC is in master mode (WAIT in, RD,WR,IORQ,MREQ and ADDR out  *
                                           ;*                                                                            *
                                           ;******************************************************************************
                                           
                                           io_read
                                               ; set address
000cc8   5195     movf	0x95, 0, 0x1            movf    HI_ADDR,w
000cca   6e8a     movwf	0x8a, 0                movwf   LATB
000ccc   9a89     bcf	0x89, 0x5, 0             bcf     LATA,P_HI_LAT
000cce   5194     movf	0x94, 0, 0x1            movf    LO_ADDR,w
000cd0   8a89     bsf	0x89, 0x5, 0             bsf     LATA,P_HI_LAT
000cd2   6e8a     movwf	0x8a, 0                movwf   LATB
                                               ; 200ns delay before IORQ and RD
000cd4   0000     nop                          nop
000cd6   9689     bcf	0x89, 0x3, 0             bcf     LATA,P_IORQ
000cd8   908d     bcf	0x8d, 0, 0               bcf     LATE,P_RD
000cda   0000     nop                          nop
                                               ; mandatory wait state
                                           io_read_wait_loop
000cdc   a880     btfss	0x80, 0x4, 0           btfss   PORTA,P_WAIT
000cde   d7fe     bra	0xcdc                    bra     io_read_wait_loop
                                               ; store the read data
000ce0   5083     movf	0x83, 0, 0              movf    PORTD,w
                                               ;release IORQ and RD
000ce2   808d     bsf	0x8d, 0, 0               bsf     LATE,P_RD
000ce4   8689     bsf	0x89, 0x3, 0             bsf     LATA,P_IORQ
000ce6   6f96     movwf	0x96, 0x1              movwf   DREG
000ce8   0012     return	0                     return
                                           
                                           ;******************************************************************************
                                           ;*                                                                            *
                                           ;* io_write - Write an address on the IO bus                                  *
                                           ;*                                                                            *
                                           ;* Inputs:  HI_ADDR, LO_ADDR, DREG                                            *
                                           ;* Outputs: NONE                                                              *
                                           ;* Called:                                                                    *
                                           ;* Changes:                                                                   *
                                           ;*                                                                            *
                                           ;* Asssumes the PIC is in master mode (WAIT in, RD,WR,IORQ,MREQ and ADDR out  *
                                           ;*                                                                            *
                                           ;******************************************************************************
                                           
                                           io_write
                                               ; set address
000cea   5195     movf	0x95, 0, 0x1            movf        HI_ADDR,w
000cec   6e8a     movwf	0x8a, 0                movwf       LATB
000cee   9a89     bcf	0x89, 0x5, 0             bcf         LATA,P_HI_LAT
000cf0   5194     movf	0x94, 0, 0x1            movf        LO_ADDR,w
000cf2   8a89     bsf	0x89, 0x5, 0             bsf         LATA,P_HI_LAT
000cf4   6e8a     movwf	0x8a, 0                movwf       LATB
                                               ; 200ns delay before IORQ and RD
000cf6   5196     movf	0x96, 0, 0x1            movf        DREG,w          ; write the data to the bus
000cf8   6e8c     movwf	0x8c, 0                movwf       LATD
000cfa   6a95     clrf	0x95, 0                 clrf        TRISD           ; don't forget to drive the bus for a write!!
000cfc   9689     bcf	0x89, 0x3, 0             bcf         LATA,P_IORQ
000cfe   928d     bcf	0x8d, 0x1, 0             bcf         LATE,P_WR
000d00   0000     nop                          nop
                                               ; mandatory wait state
                                           io_write_wait_loop
000d02   a880     btfss	0x80, 0x4, 0           btfss       PORTA,P_WAIT
000d04   d7fe     bra	0xd02                    bra         io_write_wait_loop
                                               ;release IORQ and RD
000d06   828d     bsf	0x8d, 0x1, 0             bsf         LATE,P_WR
000d08   8689     bsf	0x89, 0x3, 0             bsf         LATA,P_IORQ
000d0a   6895     setf	0x95, 0                 setf        TRISD           ; stop driving the bus again
000d0c   0012     return	0                     return
                                           
                                           ;******************************************************************************
                                           ;*                                                                            *
                                           ;* mem_read - Read from an address on the memory bus                          *
                                           ;*                                                                            *
                                           ;* Inputs:  HI_ADDR, LO_ADDR                                                  *
                                           ;* Outputs: DREG                                                              *
                                           ;* Called:                                                                    *
                                           ;* Changes:                                                                   *
                                           ;*                                                                            *
                                           ;* Asssumes the PIC is in master mode (WAIT in, RD,WR,IORQ,MREQ and ADDR out) *
                                           ;*                                                                            *
                                           ;******************************************************************************
                                           
                                           mem_read
                                               ; set address
000d0e   5195     movf	0x95, 0, 0x1            movf    HI_ADDR,w
000d10   6e8a     movwf	0x8a, 0                movwf   LATB
000d12   9a89     bcf	0x89, 0x5, 0             bcf     LATA,P_HI_LAT
000d14   5194     movf	0x94, 0, 0x1            movf    LO_ADDR,w
000d16   8a89     bsf	0x89, 0x5, 0             bsf     LATA,P_HI_LAT
000d18   6e8a     movwf	0x8a, 0                movwf   LATB
000d1a   9489     bcf	0x89, 0x2, 0             bcf     LATA,P_MREQ
000d1c   908d     bcf	0x8d, 0, 0               bcf     LATE,P_RD
                                           mem_read_wait_loop
000d1e   a880     btfss	0x80, 0x4, 0           btfss   PORTA,P_WAIT
000d20   d7fe     bra	0xd1e                    bra     mem_read_wait_loop
                                               ; store the read data
000d22   5083     movf	0x83, 0, 0              movf    PORTD,w
                                               ;release IORQ and RD
000d24   808d     bsf	0x8d, 0, 0               bsf     LATE,P_RD
000d26   8489     bsf	0x89, 0x2, 0             bsf     LATA,P_MREQ
000d28   6f96     movwf	0x96, 0x1              movwf   DREG
000d2a   0012     return	0                     return
                                           
                                           ;******************************************************************************
                                           ;*                                                                            *
                                           ;* mem_write - Write to an address on the memory bus                          *
                                           ;*                                                                            *
                                           ;* Inputs:  HI_ADDR, LO_ADDR, DREG                                            *
                                           ;* Outputs: NONE                                                              *
                                           ;* Called:                                                                    *
                                           ;* Changes:                                                                   *
                                           ;*                                                                            *
                                           ;* Asssumes the PIC is in master mode (WAIT in, RD,WR,IORQ,MREQ and ADDR out) *
                                           ;*                                                                            *
                                           ;******************************************************************************
                                           
                                           mem_write
                                               ; set address
000d2c   5195     movf	0x95, 0, 0x1            movf        HI_ADDR,w
000d2e   6e8a     movwf	0x8a, 0                movwf       LATB
000d30   9a89     bcf	0x89, 0x5, 0             bcf         LATA,P_HI_LAT
000d32   5194     movf	0x94, 0, 0x1            movf        LO_ADDR,w
000d34   8a89     bsf	0x89, 0x5, 0             bsf         LATA,P_HI_LAT
000d36   6e8a     movwf	0x8a, 0                movwf       LATB
                                               ; 200ns delay before IORQ and RD
000d38   5196     movf	0x96, 0, 0x1            movf        DREG,w          ; write the data to the bus
000d3a   6e8c     movwf	0x8c, 0                movwf       LATD
000d3c   6a95     clrf	0x95, 0                 clrf        TRISD           ; don't forget to drive the bus for a write!!
000d3e   9489     bcf	0x89, 0x2, 0             bcf         LATA,P_MREQ
000d40   928d     bcf	0x8d, 0x1, 0             bcf         LATE,P_WR
                                               ; mandatory wait state
                                           mem_write_wait_loop
000d42   a880     btfss	0x80, 0x4, 0           btfss       PORTA,P_WAIT
000d44   d7fe     bra	0xd42                    bra         mem_write_wait_loop
                                               ;release IORQ and RD
000d46   828d     bsf	0x8d, 0x1, 0             bsf         LATE,P_WR
000d48   8489     bsf	0x89, 0x2, 0             bsf         LATA,P_MREQ
000d4a   6895     setf	0x95, 0                 setf        TRISD           ; stop driving the bus again
000d4c   0012     return	0                     return
                                           
                                           ; == Slave mode code ===========================================================
                                           
                                           ;===============================================================================
                                           ; slave_int - interrupt generated by the PSP
                                           ;===============================================================================
                                           
                                           ;; This splits into two blocks of code, read and write.
                                           ;;
                                           ;; Write: if the Z80 wrote a byte, see if we are expecting bytes (TXE low), if
                                           ;; so then check if it's the first byte, in this case we need to update the byte
                                           ;; counters for this command based on the command length.  Otherwise, store the
                                           ;; byte and check if it was the last.  If it was set the busy flag, and let the
                                           ;; main-loop command dispatcher prepare a response.
                                           ;;
                                           ;; Read: if the Z80 read a byte, look at the state of the response count.  If
                                           ;; there are any bytes left put the next one in the output latch and set RXF to
                                           ;; signal more data, otherwise return to "waiting for command" mode.
                                           
                                           slave_int
                                               ; what mode are we in?
000d4e   b19e     btfsc	0x9e, 0, 0x1           btfsc       slaveflags, busy
000d50   d047     bra	0xde0                    bra         slave_ignore_event      ; don't do anything if busy
000d52   b59e     btfsc	0x9e, 0x2, 0x1         btfsc       slaveflags, txbytes
000d54   d004     bra	0xd5e                    bra         slave_tx
000d56   b39e     btfsc	0x9e, 0x1, 0x1         btfsc       slaveflags, rxbytes
000d58   d019     bra	0xd8c                    bra         slave_rx
                                               ; if it's none of them, must be idle
000d5a   be96     btfsc	0x96, 0x7, 0           btfsc       TRISE, IBF
000d5c   d017     bra	0xd8c                    bra         slave_rx
                                           
                                               ; the Z80 read a byte from the PSP, need to reload it if there's data
                                           slave_tx
                                               ; check if this was a read event
000d5e   be96     btfsc	0x96, 0x7, 0           btfsc       TRISE, IBF
000d60   eff0     goto	0xde0                   goto        slave_ignore_event      ; if it was a write ignore it
000d62   f006
000d64   8c8a     bsf	0x8a, 0x6, 0             bsf         LATB, P_RXF             ; nothing to read for a min!!
000d66   859e     bsf	0x9e, 0x2, 0x1           bsf         slaveflags, txbytes     ; set the txmode flag
000d68   eced     call	0xfda, 0                call        slave_check_byte0
000d6a   f007
000d6c   0a00     xorlw	0                      xorlw       0x00
000d6e   b4d8     btfsc	0xd8, 0x2, 0           btfsc       STATUS, Z
000d70   efc1     goto	0xd82                   goto        slave_go_idle           ; go into idle mode
000d72   f006
                                               ; not the last byte just read, so put another in output
000d74   50de     movf	0xde, 0, 0              movf        POSTINC2, w             ; get a byte from the fifo
000d76   6e83     movwf	0x83, 0                movwf       PORTD                   ; put it in the output buffer
000d78   4f9c     dcfsnz	0x9c, 0x1, 0x1        dcfsnz      slave_count, f          ; decrement the remaining byte count
000d7a   079d     decf	0x9d, 0x1, 0x1          decf        slave_count+1, f        ; decrement high byte if low is zero
000d7c   9c8a     bcf	0x8a, 0x6, 0             bcf         LATB, P_RXF             ; set the flag to say there's more data
000d7e   9e9e     bcf	0x9e, 0x7, 0             bcf         PIR1, PSPIF             ; clear the interrupt flag
000d80   0012     return	0                     return
                                           
                                           slave_go_idle
000d82   959e     bcf	0x9e, 0x2, 0x1           bcf         slaveflags, txbytes
000d84   939e     bcf	0x9e, 0x1, 0x1           bcf         slaveflags, rxbytes
                                               ; busy can only be cleared in the main loop
000d86   9e9e     bcf	0x9e, 0x7, 0             bcf         PIR1, PSPIF
000d88   9a8a     bcf	0x8a, 0x5, 0             bcf         LATB, P_TXE     ; let the Z80 talk again
000d8a   0012     return	0                     return
                                           
                                           slave_rx
                                               ; see if this was actually a write
000d8c   ae96     btfss	0x96, 0x7, 0           btfss       TRISE, IBF
000d8e   d028     bra	0xde0                    bra         slave_ignore_event      ; if it was a read ignore it
                                               ; set the TXE bit until we're finished processing
000d90   8a8a     bsf	0x8a, 0x5, 0             bsf         LATB, P_TXE
000d92   b39e     btfsc	0x9e, 0x1, 0x1         btfsc       slaveflags, rxbytes     ; see if we're already in rx mode
000d94   d016     bra	0xdc2                    bra         slave_rx_data
                                           
                                               ; if not do setup work
                                               ; setup the rx register
000d96   0e03     movlw	0x3                    movlw       0x03
000d98   6eda     movwf	0xda, 0                movwf       FSR2H
000d9a   6ad9     clrf	0xd9, 0                 clrf        FSR2L
000d9c   5083     movf	0x83, 0, 0              movf        PORTD, w
000d9e   6ede     movwf	0xde, 0                movwf       POSTINC2
                                           
                                               ; this is the first byte so setup the counter etc.
000da0   6af7     clrf	0xf7, 0                 clrf        TBLPTRH
000da2   44e8     rlncf	0xe8, 0, 0             rlncf       WREG, w                 ; 16 bit lookup, multiply 2
000da4   0fec     addlw	0xec                   addlw       low slave_command_lengths
                                           ;     addwf       PORTD, w
000da6   b0d8     btfsc	0xd8, 0, 0             btfsc       STATUS, C
000da8   2af7     incf	0xf7, 0x1, 0            incf        TBLPTRH, f
000daa   6ef6     movwf	0xf6, 0                movwf       TBLPTRL
000dac   0e0f     movlw	0xf                    movlw       high slave_command_lengths
000dae   26f7     addwf	0xf7, 0x1, 0           addwf       TBLPTRH, f
000db0   6af8     clrf	0xf8, 0                 clrf        TBLPTRU
000db2   0009     tblrd	*+                     tblrd*+
000db4   cff5     movff	0xff5, 0x9c            movff       TABLAT, slave_count     ; low byte first
000db6   f09c
000db8   0008     tblrd	*                      tblrd*
000dba   cff5     movff	0xff5, 0x9d            movff       TABLAT, slave_count+1   ; then high byte
000dbc   f09d
                                           
                                               ; set the rxmode flag
000dbe   839e     bsf	0x9e, 0x1, 0x1           bsf         slaveflags, rxbytes
                                           
                                               ; byte is already in buffer, so skip saving again
000dc0   d002     bra	0xdc6                    bra         slave_rx_data_done
                                           
                                           slave_rx_data
                                               ; save the actual byte received
000dc2   5083     movf	0x83, 0, 0              movf        PORTD, w
000dc4   6ede     movwf	0xde, 0                movwf       POSTINC2
                                           
                                           slave_rx_data_done
                                               ; see if the byte count is down to zero yet
000dc6   eced     call	0xfda, 0                call        slave_check_byte0
000dc8   f007
000dca   0a00     xorlw	0                      xorlw       0x00
000dcc   e005     bz	0xdd8                     bz          slave_start_processing          ; if it's zero process the cmd
                                               ; it's not zero yet so decrement the counter
000dce   4f9c     dcfsnz	0x9c, 0x1, 0x1        dcfsnz      slave_count, f
000dd0   079d     decf	0x9d, 0x1, 0x1          decf        slave_count+1, f                ; if low byte is zero dec upper
                                           
000dd2   9e9e     bcf	0x9e, 0x7, 0             bcf         PIR1, PSPIF                     ; clear the interrupt
000dd4   9a8a     bcf	0x8a, 0x5, 0             bcf         LATB, P_TXE                     ; let the Z80 send the next byte
000dd6   0012     return	0                     return
                                           
                                           slave_start_processing
                                               ; got a whole command in the buffer
000dd8   939e     bcf	0x9e, 0x1, 0x1           bcf         slaveflags, rxbytes
000dda   819e     bsf	0x9e, 0, 0x1             bsf         slaveflags, busy                ; signal the main process
000ddc   9e9e     bcf	0x9e, 0x7, 0             bcf         PIR1, PSPIF
                                               ; don't clear either of the talk/listen flags until we're done
000dde   0012     return	0                     return
                                           
                                           slave_ignore_event
                                               ; it was an event we're not interested in or can't deal with now
                                               ; just clear the interrupt and get back to work
000de0   9e9e     bcf	0x9e, 0x7, 0             bcf         PIR1, PSPIF
000de2   0012     return	0                     return
                                           
                                           ;===============================================================================
                                           ; slave_command_dispatch - if there are any commands waiting to be serviced do
                                           ;                               them, otherwise return immediately
                                           ;===============================================================================
                                           
                                           slave_command_dispatch
000de4   a19e     btfss	0x9e, 0, 0x1           btfss       slaveflags, busy
000de6   0012     return	0                     return                              ; no commands to deal with
                                               ; there's a new command to deal with.  First reset the pointer
000de8   0e03     movlw	0x3                    movlw       0x03
000dea   6eda     movwf	0xda, 0                movwf       FSR2H
000dec   6ad9     clrf	0xd9, 0                 clrf        FSR2L
                                           
                                               ; now get the command byte and do a jump
000dee   0e0e     movlw	0xe                    movlw       high slave_cmd_table
000df0   6efa     movwf	0xfa, 0                movwf       PCLATH
000df2   50df     movf	0xdf, 0, 0              movf        INDF2, w
000df4   0b3f     andlw	0x3f                   andlw       0x3F
000df6   44e8     rlncf	0xe8, 0, 0             rlncf       WREG, w
000df8   44e8     rlncf	0xe8, 0, 0             rlncf       WREG, w
000dfa   0f02     addlw	0x2                    addlw       low slave_cmd_table
000dfc   b0d8     btfsc	0xd8, 0, 0             btfsc       STATUS,C
000dfe   2afa     incf	0xfa, 0x1, 0            incf        PCLATH, f
000e00   6ef9     movwf	0xf9, 0                movwf       PCL
                                           
                                           ;===============================================================================
                                           ; slave_cmd_table - 64 command lookup table for commands from Z80
                                           ;===============================================================================
                                           
                                           slave_cmd_table
000e02   ef81     goto	0xf02                   goto        slave_unused_command    ; 0
000e04   f007
000e06   ef81     goto	0xf02                   goto        slave_unused_command    ; 1
000e08   f007
000e0a   ef81     goto	0xf02                   goto        slave_unused_command    ; 2
000e0c   f007
000e0e   ef81     goto	0xf02                   goto        slave_unused_command    ; 3
000e10   f007
000e12   ef81     goto	0xf02                   goto        slave_unused_command    ; 4
000e14   f007
000e16   ef81     goto	0xf02                   goto        slave_unused_command    ; 5
000e18   f007
000e1a   ef81     goto	0xf02                   goto        slave_unused_command    ; 6
000e1c   f007
000e1e   ef81     goto	0xf02                   goto        slave_unused_command    ; 7
000e20   f007
000e22   ef81     goto	0xf02                   goto        slave_unused_command    ; 8
000e24   f007
000e26   ef81     goto	0xf02                   goto        slave_unused_command    ; 9
000e28   f007
000e2a   ef94     goto	0xf28                   goto        slave_command_read_eeprom    ; 10
000e2c   f007
000e2e   ef87     goto	0xf0e                   goto        slave_command_write_eeprom    ; 11
000e30   f007
000e32   ef81     goto	0xf02                   goto        slave_unused_command    ; 12
000e34   f007
000e36   ef81     goto	0xf02                   goto        slave_unused_command    ; 13
000e38   f007
000e3a   ef81     goto	0xf02                   goto        slave_unused_command    ; 14
000e3c   f007
000e3e   ef81     goto	0xf02                   goto        slave_unused_command    ; 15
000e40   f007
000e42   ef81     goto	0xf02                   goto        slave_unused_command    ; 16
000e44   f007
000e46   ef81     goto	0xf02                   goto        slave_unused_command    ; 17
000e48   f007
000e4a   ef81     goto	0xf02                   goto        slave_unused_command    ; 18
000e4c   f007
000e4e   ef81     goto	0xf02                   goto        slave_unused_command    ; 19
000e50   f007
000e52   ef81     goto	0xf02                   goto        slave_unused_command    ; 20
000e54   f007
000e56   ef81     goto	0xf02                   goto        slave_unused_command    ; 21
000e58   f007
000e5a   ef81     goto	0xf02                   goto        slave_unused_command    ; 22
000e5c   f007
000e5e   ef81     goto	0xf02                   goto        slave_unused_command    ; 23
000e60   f007
000e62   ef81     goto	0xf02                   goto        slave_unused_command    ; 24
000e64   f007
000e66   ef81     goto	0xf02                   goto        slave_unused_command    ; 25
000e68   f007
000e6a   ef81     goto	0xf02                   goto        slave_unused_command    ; 26
000e6c   f007
000e6e   ef81     goto	0xf02                   goto        slave_unused_command    ; 27
000e70   f007
000e72   ef81     goto	0xf02                   goto        slave_unused_command    ; 28
000e74   f007
000e76   ef81     goto	0xf02                   goto        slave_unused_command    ; 29
000e78   f007
000e7a   ef81     goto	0xf02                   goto        slave_unused_command    ; 30
000e7c   f007
000e7e   ef81     goto	0xf02                   goto        slave_unused_command    ; 31
000e80   f007
000e82   efc2     goto	0xf84                   goto        slave_command_card_cid    ; 32
000e84   f007
000e86   efd7     goto	0xfae                   goto        slave_command_card_csd    ; 33
000e88   f007
000e8a   efa2     goto	0xf44                   goto        slave_command_read_sector    ; 34
000e8c   f007
000e8e   ef81     goto	0xf02                   goto        slave_unused_command    ; 35
000e90   f007
000e92   ef81     goto	0xf02                   goto        slave_unused_command    ; 36
000e94   f007
000e96   ef81     goto	0xf02                   goto        slave_unused_command    ; 37
000e98   f007
000e9a   ef81     goto	0xf02                   goto        slave_unused_command    ; 38
000e9c   f007
000e9e   ef81     goto	0xf02                   goto        slave_unused_command    ; 39
000ea0   f007
000ea2   ef81     goto	0xf02                   goto        slave_unused_command    ; 40
000ea4   f007
000ea6   ef81     goto	0xf02                   goto        slave_unused_command    ; 41
000ea8   f007
000eaa   ef81     goto	0xf02                   goto        slave_unused_command    ; 42
000eac   f007
000eae   ef81     goto	0xf02                   goto        slave_unused_command    ; 43
000eb0   f007
000eb2   ef81     goto	0xf02                   goto        slave_unused_command    ; 44
000eb4   f007
000eb6   ef81     goto	0xf02                   goto        slave_unused_command    ; 45
000eb8   f007
000eba   ef81     goto	0xf02                   goto        slave_unused_command    ; 46
000ebc   f007
000ebe   ef81     goto	0xf02                   goto        slave_unused_command    ; 47
000ec0   f007
000ec2   ef81     goto	0xf02                   goto        slave_unused_command    ; 48
000ec4   f007
000ec6   ef81     goto	0xf02                   goto        slave_unused_command    ; 49
000ec8   f007
000eca   ef81     goto	0xf02                   goto        slave_unused_command    ; 50
000ecc   f007
000ece   ef81     goto	0xf02                   goto        slave_unused_command    ; 51
000ed0   f007
000ed2   ef81     goto	0xf02                   goto        slave_unused_command    ; 52
000ed4   f007
000ed6   ef81     goto	0xf02                   goto        slave_unused_command    ; 53
000ed8   f007
000eda   ef81     goto	0xf02                   goto        slave_unused_command    ; 54
000edc   f007
000ede   ef81     goto	0xf02                   goto        slave_unused_command    ; 55
000ee0   f007
000ee2   ef81     goto	0xf02                   goto        slave_unused_command    ; 56
000ee4   f007
000ee6   ef81     goto	0xf02                   goto        slave_unused_command    ; 57
000ee8   f007
000eea   ef81     goto	0xf02                   goto        slave_unused_command    ; 58
000eec   f007
000eee   ef81     goto	0xf02                   goto        slave_unused_command    ; 59
000ef0   f007
000ef2   ef81     goto	0xf02                   goto        slave_unused_command    ; 60
000ef4   f007
000ef6   ef81     goto	0xf02                   goto        slave_unused_command    ; 61
000ef8   f007
000efa   ef81     goto	0xf02                   goto        slave_unused_command    ; 62
000efc   f007
000efe   efec     goto	0xfd8                   goto        slave_command_reset     ; 63
000f00   f007
                                           
                                           slave_unused_command
                                               ; dummy incase a bad command was sent
000f02   919e     bcf	0x9e, 0, 0x1             bcf         slaveflags, busy
000f04   959e     bcf	0x9e, 0x2, 0x1           bcf         slaveflags, txbytes
000f06   939e     bcf	0x9e, 0x1, 0x1           bcf         slaveflags, rxbytes
                                           
                                               ; let the Z80 write, but not read
000f08   9a8a     bcf	0x8a, 0x5, 0             bcf         LATB, P_TXE
000f0a   8c8a     bsf	0x8a, 0x6, 0             bsf         LATB, P_RXF
                                           
                                               ; in idle mode again, return to main loop
000f0c   0012     return	0                     return
                                           
                                           slave_command_write_eeprom
                                               ; write a byte to the EEPROM non-volatile memory
                                               ; 3 byte sequence: command, address, data
000f0e   2ad9     incf	0xd9, 0x1, 0            incf        FSR2L, f                ; ignore the command byte
000f10   cfde     movff	0xfde, 0x92            movff       POSTINC2, eeprom_addr
000f12   f092
000f14   cfde     movff	0xfde, 0x93            movff       POSTINC2, eeprom_data
000f16   f093
                                           
000f18   ecfa     call	0xbf4, 0                call        eeprom_write
000f1a   f005
                                           
000f1c   919e     bcf	0x9e, 0, 0x1             bcf         slaveflags, busy
000f1e   959e     bcf	0x9e, 0x2, 0x1           bcf         slaveflags, txbytes
000f20   939e     bcf	0x9e, 0x1, 0x1           bcf         slaveflags, rxbytes
                                           
000f22   8c8a     bsf	0x8a, 0x6, 0             bsf         LATB, P_RXF
000f24   9a8a     bcf	0x8a, 0x5, 0             bcf         LATB, P_TXE
000f26   0012     return	0                     return
                                           
                                           ;-------------------------------------------------------------------------------
                                           ; slave_command_read_eeprom - read a byte from eeprom and return it
                                           ;-------------------------------------------------------------------------------
                                           slave_command_read_eeprom
                                               ; read a byte from the NV eeprom memory
                                               ; two bytes: command, addr
000f28   2ad9     incf	0xd9, 0x1, 0            incf        FSR2L, f                ; ignore the command
000f2a   cfde     movff	0xfde, 0x92            movff       POSTINC2, eeprom_addr
000f2c   f092
                                           
000f2e   ec0c     call	0xc18, 0                call        eeprom_read             ; read a byte
000f30   f006
                                           
000f32   6e83     movwf	0x83, 0                movwf       PORTD                   ; put the data in the output buffer
                                           
000f34   6b9c     clrf	0x9c, 0x1               clrf        slave_count
000f36   6b9d     clrf	0x9d, 0x1               clrf        slave_count+1           ; this is the last byte
                                           
000f38   919e     bcf	0x9e, 0, 0x1             bcf         slaveflags, busy
000f3a   939e     bcf	0x9e, 0x1, 0x1           bcf         slaveflags, rxbytes
000f3c   859e     bsf	0x9e, 0x2, 0x1           bsf         slaveflags, txbytes     ; in tx mode ignore all else until read
                                           
000f3e   8a8a     bsf	0x8a, 0x5, 0             bsf         LATB, P_TXE             ; don't write
000f40   9c8a     bcf	0x8a, 0x6, 0             bcf         LATB, P_RXF             ; do read!!
                                           
000f42   0012     return	0                     return
                                           
                                           ;-------------------------------------------------------------------------------
                                           ; slave_command_read_sector - read a sector from the SD card
                                           ;-------------------------------------------------------------------------------
                                           slave_command_read_sector
                                               ; run sd_card_init and respond with the output
000f44   2ad9     incf	0xd9, 0x1, 0            incf        FSR2L, f        ; ignore the command
000f46   cfde     movff	0xfde, 0x8c            movff       POSTINC2, sd_data
000f48   f08c
000f4a   cfde     movff	0xfde, 0x8d            movff       POSTINC2, sd_data+1
000f4c   f08d
000f4e   cfde     movff	0xfde, 0x8e            movff       POSTINC2, sd_data+2
000f50   f08e
000f52   cfde     movff	0xfde, 0x8f            movff       POSTINC2, sd_data+3     ; select the block
000f54   f08f
                                           
000f56   0e03     movlw	0x3                    movlw       0x03
000f58   6eda     movwf	0xda, 0                movwf       FSR2H
000f5a   6ad9     clrf	0xd9, 0                 clrf        FSR2L
                                           
                                               ; set first byte to okay, changed on error
000f5c   0e4f     movlw	0x4f                   movlw       'O'
000f5e   6ede     movwf	0xde, 0                movwf       POSTINC2
                                           
000f60   ec6e     call	0xadc, 0                call        sd_card_read_block
000f62   f005
                                           
                                               ; response is always 515 bytes - ack, 512 data, 2 crc
000f64   0e03     movlw	0x3                    movlw       0x03
000f66   6f9d     movwf	0x9d, 0x1              movwf       slave_count+1
000f68   0e03     movlw	0x3                    movlw       0x03
000f6a   6f9c     movwf	0x9c, 0x1              movwf       slave_count
                                           
000f6c   6ad9     clrf	0xd9, 0                 clrf        FSR2L
000f6e   0e03     movlw	0x3                    movlw       0x03
000f70   6eda     movwf	0xda, 0                movwf       FSR2H
000f72   50de     movf	0xde, 0, 0              movf        POSTINC2, w
000f74   6e83     movwf	0x83, 0                movwf       PORTD
000f76   079c     decf	0x9c, 0x1, 0x1          decf        slave_count, f
                                           
000f78   919e     bcf	0x9e, 0, 0x1             bcf         slaveflags, busy
000f7a   939e     bcf	0x9e, 0x1, 0x1           bcf         slaveflags, rxbytes
000f7c   859e     bsf	0x9e, 0x2, 0x1           bsf         slaveflags, txbytes
                                           
000f7e   9c8a     bcf	0x8a, 0x6, 0             bcf         LATB, P_RXF
000f80   8a8a     bsf	0x8a, 0x5, 0             bsf         LATB, P_TXE
                                           
000f82   0012     return	0                     return
                                           
                                           ;-------------------------------------------------------------------------------
                                           ; slave_command_card_cid - get the CID data from the attached SD card
                                           ;-------------------------------------------------------------------------------
                                           slave_command_card_cid
000f84   0e03     movlw	0x3                    movlw       0x03
000f86   6eda     movwf	0xda, 0                movwf       FSR2H
000f88   6ad9     clrf	0xd9, 0                 clrf        FSR2L
                                           
                                               ; set first byte of response to O for okay, overwritten by error routines
000f8a   0e4f     movlw	0x4f                   movlw       'O'
000f8c   6ede     movwf	0xde, 0                movwf       POSTINC2
000f8e   ec49     call	0xa92, 0                call        sd_card_cid
000f90   f005
                                           
                                           
                                               ; Z80 expects this number of bytes
000f92   0e11     movlw	0x11                   movlw       0x11
000f94   6f9c     movwf	0x9c, 0x1              movwf       slave_count
000f96   0e01     movlw	0x1                    movlw       0x01
000f98   6f9d     movwf	0x9d, 0x1              movwf       slave_count+1
                                           
000f9a   6ad9     clrf	0xd9, 0                 clrf        FSR2L
000f9c   50de     movf	0xde, 0, 0              movf        POSTINC2, w
000f9e   6e83     movwf	0x83, 0                movwf       PORTD
000fa0   079c     decf	0x9c, 0x1, 0x1          decf        slave_count, f
                                           
000fa2   919e     bcf	0x9e, 0, 0x1             bcf         slaveflags, busy
000fa4   939e     bcf	0x9e, 0x1, 0x1           bcf         slaveflags, rxbytes
000fa6   859e     bsf	0x9e, 0x2, 0x1           bsf         slaveflags, txbytes
                                           
000fa8   9c8a     bcf	0x8a, 0x6, 0             bcf         LATB, P_RXF
000faa   8a8a     bsf	0x8a, 0x5, 0             bsf         LATB, P_TXE
                                           
000fac   0012     return	0                     return
                                           
                                           ;-------------------------------------------------------------------------------
                                           ; slave_command_card_csd - get the CSD data from the attached SD card
                                           ;-------------------------------------------------------------------------------
                                           slave_command_card_csd
000fae   0e03     movlw	0x3                    movlw       0x03
000fb0   6eda     movwf	0xda, 0                movwf       FSR2H
000fb2   6ad9     clrf	0xd9, 0                 clrf        FSR2L
                                           
                                               ; put O at the start of the response.  This gets overwritten by errors
000fb4   0e4f     movlw	0x4f                   movlw       'O'
000fb6   6ede     movwf	0xde, 0                movwf       POSTINC2
000fb8   ec29     call	0xa52, 0                call        sd_card_csd
000fba   f005
                                           
                                               ; whatever happens the data we return must be 17 bytes
000fbc   0e11     movlw	0x11                   movlw       0x11
000fbe   6f9c     movwf	0x9c, 0x1              movwf       slave_count
000fc0   0e01     movlw	0x1                    movlw       0x01
000fc2   6f9d     movwf	0x9d, 0x1              movwf       slave_count+1
                                           
000fc4   6ad9     clrf	0xd9, 0                 clrf        FSR2L
000fc6   50de     movf	0xde, 0, 0              movf        POSTINC2, w
000fc8   6e83     movwf	0x83, 0                movwf       PORTD
000fca   079c     decf	0x9c, 0x1, 0x1          decf        slave_count, f
                                           
000fcc   919e     bcf	0x9e, 0, 0x1             bcf         slaveflags, busy
000fce   939e     bcf	0x9e, 0x1, 0x1           bcf         slaveflags, rxbytes
000fd0   859e     bsf	0x9e, 0x2, 0x1           bsf         slaveflags, txbytes
                                           
000fd2   9c8a     bcf	0x8a, 0x6, 0             bcf         LATB, P_RXF
000fd4   8a8a     bsf	0x8a, 0x5, 0             bsf         LATB, P_TXE
                                           
000fd6   0012     return	0                     return
                                           
                                           slave_command_reset
                                               ; reset the whole system
000fd8   00ff     reset                        reset
                                           
                                           ;-------------------------------------------------------------------------------
                                           ; slave_check_byte0 - returns 0 in w if the current byte number is zero
                                           ;-------------------------------------------------------------------------------
                                           slave_check_byte0
000fda   519d     movf	0x9d, 0, 0x1            movf        slave_count+1, w
000fdc   0a00     xorlw	0                      xorlw       0x00
000fde   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS,Z
000fe0   0cff     retlw	0xff                   retlw       0xff
000fe2   519c     movf	0x9c, 0, 0x1            movf        slave_count, w
000fe4   0a00     xorlw	0                      xorlw       0x00
000fe6   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS, Z
000fe8   0cff     retlw	0xff                   retlw       0xff
000fea   0c00     retlw	0                      retlw       0x00
                                           
                                           slave_command_lengths
000fec   0000     nop                          db          0x00, 0x00                      ;  0 (0x00): none
000fee   0000     nop                          db          0x00, 0x00                      ;  1 (0x01): none
000ff0   0000     nop                          db          0x00, 0x00                      ;  2 (0x02): none
000ff2   0000     nop                          db          0x00, 0x00                      ;  3 (0x03): none
000ff4   0000     nop                          db          0x00, 0x00                      ;  4 (0x04): none
000ff6   0000     nop                          db          0x00, 0x00                      ;  5 (0x05): none
000ff8   0000     nop                          db          0x00, 0x00                      ;  6 (0x06): none
000ffa   0000     nop                          db          0x00, 0x00                      ;  7 (0x07): none
000ffc   0000     nop                          db          0x00, 0x00                      ;  8 (0x08): none
000ffe   0000     nop                          db          0x00, 0x00                      ;  9 (0x09): none
001000   0101     movlb	0x1                    db          0x01, 0x01                      ; 10 (0x0A): read eeprom 1: addr
001002   0102     movlb	0x2                    db          0x02, 0x01                      ; 11 (0x0B): write eeprom 2: addr, data
001004   0000     nop                          db          0x00, 0x00                      ; 12 (0x0C): none
001006   0000     nop                          db          0x00, 0x00                      ; 13 (0x0D): none
001008   0000     nop                          db          0x00, 0x00                      ; 14 (0x0E): none
00100a   0000     nop                          db          0x00, 0x00                      ; 15 (0x0F): none
00100c   0000     nop                          db          0x00, 0x00                      ; 16 (0x10): none
00100e   0000     nop                          db          0x00, 0x00                      ; 17 (0x11): none
001010   0000     nop                          db          0x00, 0x00                      ; 18 (0x12): none
001012   0000     nop                          db          0x00, 0x00                      ; 19 (0x13): none
001014   0000     nop                          db          0x00, 0x00                      ; 20 (0x14): none
001016   0000     nop                          db          0x00, 0x00                      ; 21 (0x15): none
001018   0000     nop                          db          0x00, 0x00                      ; 22 (0x16): none
00101a   0000     nop                          db          0x00, 0x00                      ; 23 (0x17): none
00101c   0000     nop                          db          0x00, 0x00                      ; 24 (0x18): none
00101e   0000     nop                          db          0x00, 0x00                      ; 25 (0x19): none
001020   0000     nop                          db          0x00, 0x00                      ; 26 (0x1A): none
001022   0000     nop                          db          0x00, 0x00                      ; 27 (0x1B): none
001024   0000     nop                          db          0x00, 0x00                      ; 28 (0x1C): none
001026   0000     nop                          db          0x00, 0x00                      ; 29 (0x1D): none
001028   0000     nop                          db          0x00, 0x00                      ; 30 (0x1E): none
00102a   0000     nop                          db          0x00, 0x00                      ; 31 (0x1F): none
00102c   0000     nop                          db          0x00, 0x00                      ; 32 (0x20): sd_card_cid, no data
00102e   0000     nop                          db          0x00, 0x00                      ; 33 (0x21): sd_card_csd, no data
001030   0104     movlb	0x4                    db          0x04, 0x01                      ; 34 (0x22): sd_card_read_block 4: addr
001032   0000     nop                          db          0x00, 0x00                      ; 35 (0x23): none
001034   0000     nop                          db          0x00, 0x00                      ; 36 (0x24): none
001036   0000     nop                          db          0x00, 0x00                      ; 37 (0x25): none
001038   0000     nop                          db          0x00, 0x00                      ; 38 (0x26): none
00103a   0000     nop                          db          0x00, 0x00                      ; 39 (0x27): none
00103c   0000     nop                          db          0x00, 0x00                      ; 40 (0x28): none
00103e   0000     nop                          db          0x00, 0x00                      ; 41 (0x29): none
001040   0000     nop                          db          0x00, 0x00                      ; 42 (0x2A): none
001042   0000     nop                          db          0x00, 0x00                      ; 43 (0x2B): none
001044   0000     nop                          db          0x00, 0x00                      ; 44 (0x2C): none
001046   0000     nop                          db          0x00, 0x00                      ; 45 (0x2D): none
001048   0000     nop                          db          0x00, 0x00                      ; 46 (0x2E): none
00104a   0000     nop                          db          0x00, 0x00                      ; 47 (0x2F): none
00104c   0000     nop                          db          0x00, 0x00                      ; 48 (0x30): none
00104e   0000     nop                          db          0x00, 0x00                      ; 49 (0x31): none
001050   0000     nop                          db          0x00, 0x00                      ; 50 (0x32): none
001052   0000     nop                          db          0x00, 0x00                      ; 51 (0x33): none
001054   0000     nop                          db          0x00, 0x00                      ; 52 (0x34): none
001056   0000     nop                          db          0x00, 0x00                      ; 53 (0x35): none
001058   0000     nop                          db          0x00, 0x00                      ; 54 (0x36): none
00105a   0000     nop                          db          0x00, 0x00                      ; 55 (0x37): none
00105c   0000     nop                          db          0x00, 0x00                      ; 56 (0x38): none
00105e   0000     nop                          db          0x00, 0x00                      ; 57 (0x39): none
001060   0000     nop                          db          0x00, 0x00                      ; 58 (0x3A): none
001062   0000     nop                          db          0x00, 0x00                      ; 59 (0x3B): none
001064   0000     nop                          db          0x00, 0x00                      ; 60 (0x3C): none
001066   0000     nop                          db          0x00, 0x00                      ; 61 (0x3D): none
001068   0000     nop                          db          0x00, 0x00                      ; 62 (0x3E): none
00106a   0000     nop                          db          0x00, 0x00                      ; 63 (0x3F): reset, no data
                                           ; == Export these refs =========================================================
                                           
                                               GLOBAL      HI_ADDR
                                               GLOBAL      LO_ADDR
                                               GLOBAL      DREG
                                           
                                               GLOBAL      get_reset
                                               GLOBAL      get_dma
                                               GLOBAL      get_slave
                                               GLOBAL      ensure_master
                                               GLOBAL      revert_master
                                               GLOBAL      io_read
                                               GLOBAL      io_write
                                               GLOBAL      mem_read
                                               GLOBAL      mem_write
                                               GLOBAL      slave_int
                                               GLOBAL      slave_command_dispatch
                                               GLOBAL      slave_count
                                           end
                                           ;==============================================================================
                                           ;    boot.asm
                                           ;==============================================================================
                                           
                                           ;------------------------------------------------------------------------------
                                           ;
                                           ; Simple Debug Kernel for CPU supervisor on Z80 Project Mark 2
                                           ; File Version 2 - 17 Oct 09
                                           ; hairymnstr@gmail.com
                                           ;
                                           ; Copyright (C) 2009  Nathan Dumont
                                           ;
                                           ; This program is free software: you can redistribute it and/or modify
                                           ; it under the terms of the GNU General Public License as published by
                                           ; the Free Software Foundation, either version 3 of the License, or
                                           ; (at your option) any later version.
                                           ;
                                           ; This program is distributed in the hope that it will be useful,
                                           ; but WITHOUT ANY WARRANTY; without even the implied warranty of
                                           ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                           ; GNU General Public License for more details.
                                           ;
                                           ; You should have received a copy of the GNU General Public License
                                           ; along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                           ;
                                           ;
                                           ;------------------------------------------------------------------------------
                                           
                                           list p=18f4520
                                           #include <p18f4520.inc>
                                                   LIST
                                           
                                           ;==========================================================================
                                           ;  MPASM PIC18F4520 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2007 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           #include "portpins.inc"
                                           ;== PORT Definitions ==========================================================
                                           
                                           ;-- PORT A --------------------------------------------------------------------
                                           
                                           P_RESET         EQU     0
                                           P_BUSRQ         EQU     1
                                           P_MREQ          EQU     2
                                           P_IORQ          EQU     3
                                           P_WAIT          EQU     4
                                           P_HI_LAT        EQU     5
                                           
                                           ;-- PORT C --------------------------------------------------------------------
                                           
                                           P_BUSACK        EQU     0
                                           P_SD_CS         EQU     1
                                           P_CLK           EQU     2
                                           P_SD_CK         EQU     3
                                           P_SD_DI         EQU     4
                                           P_SD_DO         EQU     5
                                           P_TX            EQU     6
                                           P_RX            EQU     7
                                           
                                           ;-- PORT B ---------------------------------------------------------------------
                                           
                                           P_SD_FIND       EQU     4
                                           P_TXE           EQU     5
                                           P_RXF           EQU     6
                                           P_SD_PRES       EQU     7
                                           
                                           SLAVE_LATB_DEF EQU     b'11000000'
                                           SLAVE_TRISB_DEF EQU     b'00011111'
                                           
                                           ;-- PORT E --------------------------------------------------------------------
                                           
                                           P_RD            EQU     0
                                           P_WR            EQU     1
                                           P_CS            EQU     2
                                           
                                           ; -- Externals From host_bus.asm ----------------------------------------------
                                           
                                               EXTERN      ensure_master
                                               EXTERN      revert_master
                                               EXTERN      mem_write
                                           
                                               EXTERN      DREG
                                               EXTERN      HI_ADDR
                                               EXTERN      LO_ADDR
                                           
                                           ; -- Externals From eeprom.asm -------------------------------------------------
                                           
                                               EXTERN      eeprom_read
                                               EXTERN      eeprom_addr
                                               EXTERN      eeprom_data
                                           
                                             UDATA
                                           
                                           WRCOUNT         RES     1
                                           BOOTWR_FLAGS      RES     1
                                           
                                           high_jump               res     1
                                           low_jump                res     1
                                           
                                             CODE
                                           
                                           boot_init
00106c   0e01     movlw	0x1                    movlw       0x01
00106e   6f92     movwf	0x92, 0x1              movwf       eeprom_addr
                                           
001070   ec0c     call	0xc18, 0                call        eeprom_read
001072   f006
                                               ; option for clock speed now in eedata
                                           
001074   0e10     movlw	0x10                   movlw       high clock_jump_table
001076   6fa1     movwf	0xa1, 0x1              movwf       high_jump
                                           
001078   5193     movf	0x93, 0, 0x1            movf        eeprom_data, w
00107a   0b03     andlw	0x3                    andlw       0x03            ; make sure it's a valid clock setting
                                           
00107c   44e8     rlncf	0xe8, 0, 0             rlncf       WREG, w
00107e   44e8     rlncf	0xe8, 0, 0             rlncf       WREG, w
                                           
001080   0f90     addlw	0x90                   addlw       low clock_jump_table
001082   b0d8     btfsc	0xd8, 0, 0             btfsc       STATUS, C
001084   2ba1     incf	0xa1, 0x1, 0x1          incf        high_jump, f
                                           
001086   6fa2     movwf	0xa2, 0x1              movwf       low_jump
001088   51a1     movf	0xa1, 0, 0x1            movf        high_jump, w
00108a   6efa     movwf	0xfa, 0                movwf       PCLATH
                                           
00108c   51a2     movf	0xa2, 0, 0x1            movf        low_jump, w
00108e   6ef9     movwf	0xf9, 0                movwf       PCL
                                           
                                           clock_jump_table
001090   ef50     goto	0x10a0                  goto        clock_0
001092   f008
001094   ef5a     goto	0x10b4                  goto        clock_1
001096   f008
001098   ef64     goto	0x10c8                  goto        clock_2
00109a   f008
00109c   ef6e     goto	0x10dc                  goto        clock_3
00109e   f008
                                           
                                           clock_0                         ; 250kHz
                                           ; set up the PWM peripheral that's going to generate the clock
0010a0   0e27     movlw	0x27                   movlw       d'39'            ; Frequency setting  1 = 5MHz, 2 = 3.33MHz, 
                                                                            ;                    3 = 2.5MHz, 39 = 250kHz
0010a2   6ecb     movwf	0xcb, 0                movwf       PR2
                                           ; Duty cycle 1/2 
                                           ; 10 bit value bits <9:2> in CCPR1L
                                           ;              bits <1:0> in CCP1CON<5:4>
                                           ; 5MHz = 4    (b'0000000100' - 0x01 & b'00') - mode 03
                                           ; 3.33MHz = 6 (b'0000000110' - 0x01 & b'10') - mode 02
                                           ; 2.5MHz = 16 (b'0000010000' - 0x02 & b'00') - mode 01
                                           ; 250kHz = 80 (b'0001010000' - 0x14 & b'00') - mode 00
                                           ; CCP1CON<7:6> 00 - single output
                                           ; CCP1CON<5:4> xx - see above
                                           ; CCP1CON<3:0> 1100 - PWM mode
0010a4   0e0c     movlw	0xc                    movlw       b'00001100'
0010a6   6ebd     movwf	0xbd, 0                movwf       CCP1CON
0010a8   0e14     movlw	0x14                   movlw       0x14
0010aa   6ebe     movwf	0xbe, 0                movwf       CCPR1L          
                                           
0010ac   9494     bcf	0x94, 0x2, 0             bcf         TRISC,P_CLK     ; pin as output
                                               
0010ae   0e04     movlw	0x4                    movlw       b'00000100'     ; T2 on, no pre or post scale
0010b0   6eca     movwf	0xca, 0                movwf       T2CON
                                           
0010b2   0012     return	0                     return
                                           
                                           clock_1                         ; 2.5MHz
                                           ; set up the PWM peripheral that's going to generate the clock
0010b4   0e03     movlw	0x3                    movlw       d'3'            ; Frequency setting  1 = 5MHz, 2 = 3.33MHz, 
                                                                            ;                    3 = 2.5MHz, 39 = 250kHz
0010b6   6ecb     movwf	0xcb, 0                movwf       PR2
                                           ; Duty cycle 1/2 
                                           ; 10 bit value bits <9:2> in CCPR1L
                                           ;              bits <1:0> in CCP1CON<5:4>
                                           ; 5MHz = 4    (b'0000000100' - 0x01 & b'00') - mode 03
                                           ; 3.33MHz = 6 (b'0000000110' - 0x01 & b'10') - mode 02
                                           ; 2.5MHz = 16 (b'0000010000' - 0x02 & b'00') - mode 01
                                           ; 250kHz = 80 (b'0001010000' - 0x14 & b'00') - mode 00
                                           ; CCP1CON<7:6> 00 - single output
                                           ; CCP1CON<5:4> xx - see above
                                           ; CCP1CON<3:0> 1100 - PWM mode
0010b8   0e0c     movlw	0xc                    movlw       b'00001100'
0010ba   6ebd     movwf	0xbd, 0                movwf       CCP1CON
0010bc   0e02     movlw	0x2                    movlw       0x2
0010be   6ebe     movwf	0xbe, 0                movwf       CCPR1L          
                                           
0010c0   9494     bcf	0x94, 0x2, 0             bcf         TRISC,P_CLK     ; pin as output
                                               
0010c2   0e04     movlw	0x4                    movlw       b'00000100'     ; T2 on, no pre or post scale
0010c4   6eca     movwf	0xca, 0                movwf       T2CON
                                           
0010c6   0012     return	0                     return
                                           
                                           clock_2                         ; 3.33MHz
                                           ; set up the PWM peripheral that's going to generate the clock
0010c8   0e02     movlw	0x2                    movlw       d'2'            ; Frequency setting  1 = 5MHz, 2 = 3.33MHz, 
                                                                            ;                    3 = 2.5MHz, 39 = 250kHz
0010ca   6ecb     movwf	0xcb, 0                movwf       PR2
                                           ; Duty cycle 1/2 
                                           ; 10 bit value bits <9:2> in CCPR1L
                                           ;              bits <1:0> in CCP1CON<5:4>
                                           ; 5MHz = 4    (b'0000000100' - 0x01 & b'00') - mode 03
                                           ; 3.33MHz = 6 (b'0000000110' - 0x01 & b'10') - mode 02
                                           ; 2.5MHz = 16 (b'0000010000' - 0x02 & b'00') - mode 01
                                           ; 250kHz = 80 (b'0001010000' - 0x14 & b'00') - mode 00
                                           ; CCP1CON<7:6> 00 - single output
                                           ; CCP1CON<5:4> xx - see above
                                           ; CCP1CON<3:0> 1100 - PWM mode
0010cc   0e2c     movlw	0x2c                   movlw       b'00101100'
0010ce   6ebd     movwf	0xbd, 0                movwf       CCP1CON
0010d0   0e01     movlw	0x1                    movlw       0x1
0010d2   6ebe     movwf	0xbe, 0                movwf       CCPR1L          
                                           
0010d4   9494     bcf	0x94, 0x2, 0             bcf         TRISC,P_CLK     ; pin as output
                                               
0010d6   0e04     movlw	0x4                    movlw       b'00000100'     ; T2 on, no pre or post scale
0010d8   6eca     movwf	0xca, 0                movwf       T2CON
                                           
0010da   0012     return	0                     return
                                           
                                           clock_3                         ; 5MHz
                                           ; set up the PWM peripheral that's going to generate the clock
0010dc   0e01     movlw	0x1                    movlw       d'1'            ; Frequency setting  1 = 5MHz, 2 = 3.33MHz, 
                                                                            ;                    3 = 2.5MHz, 39 = 250kHz
0010de   6ecb     movwf	0xcb, 0                movwf       PR2
                                           ; Duty cycle 1/2 
                                           ; 10 bit value bits <9:2> in CCPR1L
                                           ;              bits <1:0> in CCP1CON<5:4>
                                           ; 5MHz = 4    (b'0000000100' - 0x01 & b'00') - mode 03
                                           ; 3.33MHz = 6 (b'0000000110' - 0x01 & b'10') - mode 02
                                           ; 2.5MHz = 16 (b'0000010000' - 0x02 & b'00') - mode 01
                                           ; 250kHz = 80 (b'0001010000' - 0x14 & b'00') - mode 00
                                           ; CCP1CON<7:6> 00 - single output
                                           ; CCP1CON<5:4> xx - see above
                                           ; CCP1CON<3:0> 1100 - PWM mode
0010e0   0e0c     movlw	0xc                    movlw       b'00001100'
0010e2   6ebd     movwf	0xbd, 0                movwf       CCP1CON
0010e4   0e01     movlw	0x1                    movlw       0x1
0010e6   6ebe     movwf	0xbe, 0                movwf       CCPR1L          
                                           
0010e8   9494     bcf	0x94, 0x2, 0             bcf         TRISC,P_CLK     ; pin as output
                                               
0010ea   0e04     movlw	0x4                    movlw       b'00000100'     ; T2 on, no pre or post scale
0010ec   6eca     movwf	0xca, 0                movwf       T2CON
                                           
0010ee   0012     return	0                     return
                                           
                                           ;===============================================================================
                                           ; boot_load - loads the boot ROM from the PIC's flash to system memory
                                           ;===============================================================================
                                           
                                           ;; There is an 8K image in Flash onboard this PIC.  This is loaded sequentially
                                           ;; into system memory consecutively from $0000.
                                           
                                           boot_load
                                               ; make sure that the Z80 is a slave
0010f0   ec14     call	0xc28, 0                call        ensure_master
0010f2   f006
                                           
                                               ; set up the table read pointers
                                           
0010f4   6af8     clrf	0xf8, 0                 clrf        TBLPTRU
0010f6   0e60     movlw	0x60                   movlw       0x60
0010f8   6ef7     movwf	0xf7, 0                movwf       TBLPTRH
0010fa   6af6     clrf	0xf6, 0                 clrf        TBLPTRL
                                           
                                               ; set up EECON1 for Flash memory read
                                               
0010fc   0e80     movlw	0x80                   movlw       b'10000000'
0010fe   6ea6     movwf	0xa6, 0                movwf       EECON1
                                           
                                               ; now loop over all 8KB of data
001100   6b95     clrf	0x95, 0x1               clrf        HI_ADDR
001102   6b94     clrf	0x94, 0x1               clrf        LO_ADDR
                                           
                                           boot_load_loop
001104   0009     tblrd	*+                     tblrd*+             ; copy a byte into TABLAT
001106   cff5     movff	0xff5, 0x96            movff       TABLAT,DREG
001108   f096
00110a   ec96     call	0xd2c, 0                call        mem_write
00110c   f006
00110e   3f94     incfsz	0x94, 0x1, 0x1        incfsz      LO_ADDR,f
001110   d7f9     bra	0x1104                   bra         boot_load_loop
001112   2b95     incf	0x95, 0x1, 0x1          incf        HI_ADDR,f
                                               ;movf        HI_ADDR,w
                                               ;xorlw       0x01
                                               ;bz          boot_jump_8000
001114   5195     movf	0x95, 0, 0x1            movf        HI_ADDR,w
001116   0a20     xorlw	0x20                   xorlw       0x20
001118   e1f5     bnz	0x1104                   bnz         boot_load_loop
                                               
                                               ; all done, release the bus if we claimed it and return
00111a   ec1c     call	0xc38, 0                call        revert_master
00111c   f006
                                           
00111e   0012     return	0                     return
                                           
                                           ;boot_jump_8000
                                           ;    movlw       0x80
                                           ;    movwf       HI_ADDR
                                           ;    bra         boot_load_loop
                                           
                                           ;*******************************************************************************
                                           ;*  boot_update - copy a 128 byte packet from RX buffer to flash               *
                                           ;*    This is called repeatedly from serial.asm after an update BIOS command   *
                                           ;*    is sent from a PC.                                                       *
                                           ;*******************************************************************************
                                           boot_update
                                               ; first two bytes in the RX buffer are the start address in FLASH
                                               ; they've already been checked so just trust them
                                               ; FSR0L is already pointing at the high address
                                           
001120   6af8     clrf	0xf8, 0                 clrf        TBLPTRU
001122   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
001124   6ef7     movwf	0xf7, 0                movwf       TBLPTRH
001126   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
001128   6ef6     movwf	0xf6, 0                movwf       TBLPTRL
                                           
00112a   81a0     bsf	0xa0, 0, 0x1             bsf         BOOTWR_FLAGS,0
                                               ; next code gets run twice because you can only erase data in 64 byte blocks
                                           boot_update_erase
                                               ; erase a block
00112c   8ea6     bsf	0xa6, 0x7, 0             bsf         EECON1, EEPGD
00112e   9ca6     bcf	0xa6, 0x6, 0             bcf         EECON1, CFGS
001130   84a6     bsf	0xa6, 0x2, 0             bsf         EECON1, WREN
001132   88a6     bsf	0xa6, 0x4, 0             bsf         EECON1, FREE
001134   9ef2     bcf	0xf2, 0x7, 0             bcf         INTCON, GIE
                                           
001136   0e55     movlw	0x55                   movlw       0x55
001138   6ea7     movwf	0xa7, 0                movwf       EECON2
00113a   0eaa     movlw	0xaa                   movlw       0x0AA
00113c   6ea7     movwf	0xa7, 0                movwf       EECON2
00113e   82a6     bsf	0xa6, 0x1, 0             bsf         EECON1, WR              ; actual erase command up to 2 ms
                                           
001140   8ef2     bsf	0xf2, 0x7, 0             bsf         INTCON, GIE     ; re-enable interrupts
001142   000a     tblrd	*-                     tblrd*-                     ; dummy decrement, we're going to use pre-inc
                                                                           ; to write so the pointer is still in the
                                                                           ; block when we call write
                                           
001144   83a0     bsf	0xa0, 0x1, 0x1           bsf         BOOTWR_FLAGS,1  ; flag to see how many times we've done this
                                               ; write a 32 byte block, happens twice
                                           boot_update_write
001146   0e20     movlw	0x20                   movlw       d'32'
001148   6f9f     movwf	0x9f, 0x1              movwf       WRCOUNT
                                           
                                           boot_update_write_loop
00114a   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
00114c   6ef5     movwf	0xf5, 0                movwf       TABLAT
00114e   000f     tblwt	+*                     tblwt+*
001150   2f9f     decfsz	0x9f, 0x1, 0x1        decfsz      WRCOUNT,f
001152   d7fb     bra	0x114a                   bra         boot_update_write_loop
                                           
                                               ; written 32 bytes to tablat, now need to initiate the write
001154   8ea6     bsf	0xa6, 0x7, 0             bsf         EECON1, EEPGD
001156   9ca6     bcf	0xa6, 0x6, 0             bcf         EECON1, CFGS
001158   84a6     bsf	0xa6, 0x2, 0             bsf         EECON1, WREN
00115a   9ef2     bcf	0xf2, 0x7, 0             bcf         INTCON, GIE
                                           
00115c   0e55     movlw	0x55                   movlw       0x55
00115e   6ea7     movwf	0xa7, 0                movwf       EECON2
001160   0eaa     movlw	0xaa                   movlw       0x0AA
001162   6ea7     movwf	0xa7, 0                movwf       EECON2
001164   82a6     bsf	0xa6, 0x1, 0             bsf         EECON1, WR
                                           
001166   8ef2     bsf	0xf2, 0x7, 0             bsf         INTCON, GIE
001168   94a6     bcf	0xa6, 0x2, 0             bcf         EECON1, WREN
                                           
00116a   a3a0     btfss	0xa0, 0x1, 0x1         btfss       BOOTWR_FLAGS,1
00116c   d002     bra	0x1172                   bra         boot_update_second_erase
                                           
00116e   93a0     bcf	0xa0, 0x1, 0x1           bcf         BOOTWR_FLAGS,1
001170   d7ea     bra	0x1146                   bra         boot_update_write
                                           
                                           boot_update_second_erase
001172   a1a0     btfss	0xa0, 0, 0x1           btfss       BOOTWR_FLAGS,0
001174   efc0     goto	0x1180                  goto        boot_verify
001176   f008
001178   91a0     bcf	0xa0, 0, 0x1             bcf         BOOTWR_FLAGS,0
00117a   0009     tblrd	*+                     tblrd*+                     ; dummy increment to make sure we erase the next block
00117c   ef96     goto	0x112c                  goto        boot_update_erase
00117e   f008
                                           
                                           boot_verify
                                               ; check through all the bytes just written to flash and make sure they
                                               ; match.  Then build a report packet accordingly
001180   85a0     bsf	0xa0, 0x2, 0x1           bsf         BOOTWR_FLAGS,2  ; set a flag, this gets cleared if we find an
                                                                           ; error
                                           
001182   0e01     movlw	0x1                    movlw       0x1
001184   6eea     movwf	0xea, 0                movwf       FSR0H
001186   0e02     movlw	0x2                    movlw       0x02            ; need to skip the command and length bytes
001188   6ee9     movwf	0xe9, 0                movwf       FSR0L
                                           
                                               ; set the table pointer
00118a   6af8     clrf	0xf8, 0                 clrf        TBLPTRU
00118c   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
00118e   6ef7     movwf	0xf7, 0                movwf       TBLPTRH
001190   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
001192   6ef6     movwf	0xf6, 0                movwf       TBLPTRL
                                           
001194   0e80     movlw	0x80                   movlw       0x80
001196   6f9f     movwf	0x9f, 0x1              movwf       WRCOUNT
                                           
                                           boot_verify_loop
001198   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
00119a   0009     tblrd	*+                     tblrd*+
00119c   18f5     xorwf	0xf5, 0, 0             xorwf       TABLAT,w
00119e   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS,Z
0011a0   95a0     bcf	0xa0, 0x2, 0x1           bcf         BOOTWR_FLAGS,2
0011a2   2f9f     decfsz	0x9f, 0x1, 0x1        decfsz      WRCOUNT,f
0011a4   d7f9     bra	0x1198                   bra         boot_verify_loop
                                           
                                               ; all verified, need to make a response packet based on the OK flag
0011a6   a5a0     btfss	0xa0, 0x2, 0x1         btfss       BOOTWR_FLAGS,2
0011a8   d00a     bra	0x11be                   bra         boot_verify_nak
                                           
                                               ; got here so write went according to plan
0011aa   0e02     movlw	0x2                    movlw       0x2
0011ac   6ee2     movwf	0xe2, 0                movwf       FSR1H
0011ae   6ae1     clrf	0xe1, 0                 clrf        FSR1L
                                           
0011b0   0e08     movlw	0x8                    movlw       0x08            ; successful command 8 executed
0011b2   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0011b4   0e00     movlw	0                      movlw       0x00            ; no data, just ack
0011b6   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0011b8   0e08     movlw	0x8                    movlw       0x08            ; hard coded checksum Oo
0011ba   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                           
0011bc   0012     return	0                     return
                                           
                                           boot_verify_nak
                                               ; there must have been an error in the memory writing, send a NAK
0011be   0e02     movlw	0x2                    movlw       0x02
0011c0   6ee2     movwf	0xe2, 0                movwf       FSR1H
0011c2   6ae1     clrf	0xe1, 0                 clrf        FSR1L
                                           
                                               ; going to cheat and use the WRCOUNT as a checksum holder
0011c4   6b9f     clrf	0x9f, 0x1               clrf        WRCOUNT
                                           
0011c6   0e48     movlw	0x48                   movlw       0x48            ; nak for command 8
0011c8   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0011ca   1b9f     xorwf	0x9f, 0x1, 0x1         xorwf       WRCOUNT,f
0011cc   0e02     movlw	0x2                    movlw       0x02            ; only the error code to reply with
0011ce   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0011d0   1b9f     xorwf	0x9f, 0x1, 0x1         xorwf       WRCOUNT,f
0011d2   0e00     movlw	0                      movlw       0x00
0011d4   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0011d6   1b9f     xorwf	0x9f, 0x1, 0x1         xorwf       WRCOUNT,f
0011d8   0e08     movlw	0x8                    movlw       0x08            ; verification error number
0011da   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0011dc   1b9f     xorwf	0x9f, 0x1, 0x1         xorwf       WRCOUNT,f
0011de   519f     movf	0x9f, 0, 0x1            movf        WRCOUNT,w
0011e0   6ee6     movwf	0xe6, 0                movwf       POSTINC1        ; add the checksum
                                           
0011e2   0012     return	0                     return
                                               
                                           
                                           ; == Export These ==============================================================
                                           
                                               GLOBAL      boot_init
                                               GLOBAL      boot_load
                                               GLOBAL      boot_update
                                           
                                           end
                                           
                                           list p=18f4520
                                           #include <p18f4520.inc>
                                                   LIST
                                           
                                           ;==========================================================================
                                           ;  MPASM PIC18F4520 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2007 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           
                                               org 0x6000
                                           
006000   60c3     cpfslt	0xc3, 0               data 0x60C3, 0x000E, 0x0000, 0x0000 ; 6000
006002   000e     tblwt	*-                 
006004   0000     nop                      
006006   0000     nop                      
006008   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6008
00600a   0000     nop                      
00600c   0000     nop                      
00600e   0000     nop                      
006010   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6010
006012   0000     nop                      
006014   0000     nop                      
006016   0000     nop                      
006018   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6018
00601a   0000     nop                      
00601c   0000     nop                      
00601e   0000     nop                      
006020   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6020
006022   0000     nop                      
006024   0000     nop                      
006026   0000     nop                      
006028   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6028
00602a   0000     nop                      
00602c   0000     nop                      
00602e   0000     nop                      
006030   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6030
006032   0000     nop                      
006034   0000     nop                      
006036   0000     nop                      
006038   c5f5     movff	0x5f5, 0x5d5           data 0xC5F5, 0xE5D5, 0x06DB, 0x47CB ; 6038
00603a   e5d5
00603c   06db     decf	0xdb, 0x1, 0        
00603e   47cb     rlncf	0xcb, 0x1, 0x1     
006040   62ca     cpfseq	0xca, 0               data 0x62CA, 0xCB00, 0xCA4F, 0x004B ; 6040
006042   cb00     movff	0xb00, 0xa4f       
006044   ca4f
006046   004b     dw	0x4b  ;unknown opcode 
006048   68c3     setf	0xc3, 0                 data 0x68C3, 0xDB00, 0x3203, 0x17EF ; 6048
00604a   db00     rcall	0x664c             
00604c   3203     rrcf	0x3, 0x1, 0         
00604e   17ef     andwf	0xef, 0x1, 0x1     
006050   5232     movf	0x32, 0x1, 0            data 0x5232, 0x2102, 0x0252, 0x023E ; 6050
006052   2102     addwfc	0x2, 0, 0x1       
006054   0252     mulwf	0x52, 0            
006056   023e     mulwf	0x3e, 0            
006058   0fcd     addlw	0xcd                   data 0x0FCD, 0x3E02, 0xD320, 0xC305 ; 6058
00605a   3e02     incfsz	0x2, 0x1, 0       
00605c   d320     bra	0x669e               
00605e   c305     movff	0x305, 0x68        
006060   0068
006060   0068     dw	0x68  ;unknown opcode     data 0x0068, 0x88CD, 0xC302, 0x0068 ; 6060
006062   88cd     bsf	0xcd, 0x4, 0         
006064   c302     movff	0x302, 0x68        
006066   0068
006068   d1e1     bra	0x642c                   data 0xD1E1, 0xF1C1, 0xEDFB, 0x004D ; 6068
00606a   f1c1     dw	0xf1c1  ;unknown opcode 
00606c   edfb     call	0x9bf6, 0x1         
00606e   004d
006070   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6070
006072   0000     nop                      
006074   0000     nop                      
006076   0000     nop                      
006078   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6078
00607a   0000     nop                      
00607c   0000     nop                      
00607e   0000     nop                      
006080   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6080
006082   0000     nop                      
006084   0000     nop                      
006086   0000     nop                      
006088   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6088
00608a   0000     nop                      
00608c   0000     nop                      
00608e   0000     nop                      
006090   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6090
006092   0000     nop                      
006094   0000     nop                      
006096   0000     nop                      
006098   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6098
00609a   0000     nop                      
00609c   0000     nop                      
00609e   0000     nop                      
0060a0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 60A0
0060a2   0000     nop                      
0060a4   0000     nop                      
0060a6   0000     nop                      
0060a8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 60A8
0060aa   0000     nop                      
0060ac   0000     nop                      
0060ae   0000     nop                      
0060b0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 60B0
0060b2   0000     nop                      
0060b4   0000     nop                      
0060b6   0000     nop                      
0060b8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 60B8
0060ba   0000     nop                      
0060bc   0000     nop                      
0060be   0000     nop                      
0060c0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 60C0
0060c2   0000     nop                      
0060c4   0000     nop                      
0060c6   0000     nop                      
0060c8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 60C8
0060ca   0000     nop                      
0060cc   0000     nop                      
0060ce   0000     nop                      
0060d0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 60D0
0060d2   0000     nop                      
0060d4   0000     nop                      
0060d6   0000     nop                      
0060d8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 60D8
0060da   0000     nop                      
0060dc   0000     nop                      
0060de   0000     nop                      
0060e0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 60E0
0060e2   0000     nop                      
0060e4   0000     nop                      
0060e6   0000     nop                      
0060e8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 60E8
0060ea   0000     nop                      
0060ec   0000     nop                      
0060ee   0000     nop                      
0060f0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 60F0
0060f2   0000     nop                      
0060f4   0000     nop                      
0060f6   0000     nop                      
0060f8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 60F8
0060fa   0000     nop                      
0060fc   0000     nop                      
0060fe   0000     nop                      
006100   0000     nop                          data 0x0000, 0x0000, 0x9003, 0x03D0 ; 6100
006102   0000     nop                      
006104   9003     bcf	0x3, 0, 0            
006106   03d0     mulwf	0xd0, 0x1          
006108   a000     btfss	0, 0, 0                data 0xA000, 0x2625, 0xD500, 0x32DC ; 6108
00610a   2625     addwf	0x25, 0x1, 0       
00610c   d500     bra	0x5b0e               
00610e   32dc     rrcf	0xdc, 0x1, 0        
006110   4000     rrncf	0, 0, 0                data 0x4000, 0x4C4B, 0x0000, 0x0000 ; 6110
006112   4c4b     dcfsnz	0x4b, 0, 0        
006114   0000     nop                      
006116   0000     nop                      
006118   cd00     movff	0xd00, 0x1e9           data 0xCD00, 0x01E9, 0x76F3, 0x32F3 ; 6118
00611a   01e9
00611c   76f3     btg	0xf3, 0x3, 0         
00611e   32f3     rrcf	0xf3, 0x1, 0        
006120   0118     movlb	0x18                   data 0x0118, 0x06D3, 0xC9FB, 0xC5F3 ; 6120
006122   06d3     decf	0xd3, 0x1, 0        
006124   c9fb     movff	0x9fb, 0x5f3       
006126   c5f3
006128   472f     rlncf	0x2f, 0x1, 0x1         data 0x472F, 0x183A, 0xA001, 0x1832 ; 6128
00612a   183a     xorwf	0x3a, 0, 0         
00612c   a001     btfss	0x1, 0, 0          
00612e   1832     xorwf	0x32, 0, 0         
006130   d301     bra	0x6734                   data 0xD301, 0xC106, 0xC9FB, 0xC5F3 ; 6130
006132   c106     movff	0x106, 0x9fb       
006134   c9fb
006136   c5f3     movff	0x5f3, 0xa47       
006138   3a47
006138   3a47     swapf	0x47, 0x1, 0           data 0x3A47, 0x0118, 0x32B0, 0x0118 ; 6138
00613a   0118     movlb	0x18               
00613c   32b0     rrcf	0xb0, 0x1, 0        
00613e   0118     movlb	0x18               
006140   06d3     decf	0xd3, 0x1, 0            data 0x06D3, 0xFBC1, 0xF5C9, 0x0B3E ; 6140
006142   fbc1     dw	0xfbc1  ;unknown opcode 
006144   f5c9     dw	0xf5c9  ;unknown opcode 
006146   0b3e     andlw	0x3e               
006148   82cd     bsf	0xcd, 0x1, 0             data 0x82CD, 0x7801, 0x82CD, 0xF101 ; 6148
00614a   7801     btg	0x1, 0x4, 0          
00614c   82cd     bsf	0xcd, 0x1, 0         
00614e   f101     dw	0xf101  ;unknown opcode 
006150   82cd     bsf	0xcd, 0x1, 0             data 0x82CD, 0xC901, 0x0A3E, 0x82CD ; 6150
006152   c901     movff	0x901, 0xa3e       
006154   0a3e
006156   82cd     bsf	0xcd, 0x1, 0         
006158   7801     btg	0x1, 0x4, 0              data 0x7801, 0x82CD, 0xCD01, 0x0161 ; 6158
00615a   82cd     bsf	0xcd, 0x1, 0         
00615c   cd01     movff	0xd01, 0x161       
00615e   0161
006160   c5c9     movff	0x5c9, 0xa3a           data 0xC5C9, 0x7A3A, 0xC604, 0x4702 ; 6160
006162   7a3a
006164   c604     movff	0x604, 0x702       
006166   4702
006168   7a3a     btg	0x3a, 0x5, 0             data 0x7A3A, 0xA804, 0x0A28, 0x08DB ; 6168
00616a   a804     btfss	0x4, 0x4, 0        
00616c   0a28     xorlw	0x28               
00616e   08db     sublw	0xdb               
006170   4fcb     dcfsnz	0xcb, 0x1, 0x1        data 0x4FCB, 0xF420, 0xDBC1, 0xC902 ; 6170
006172   f420     dw	0xf420  ;unknown opcode 
006174   dbc1     rcall	0x68f8             
006176   c902     movff	0x902, 0x1e5       
006178   21e5
006178   21e5     addwfc	0xe5, 0, 0x1          data 0x21E5, 0x17F0, 0xE9CD, 0xE101 ; 6178
00617a   17f0     andwf	0xf0, 0x1, 0x1     
00617c   e9cd     dw	0xe9cd  ;unknown opcode 
00617e   e101     bnz	0x6182               
006180   c9c1     movff	0x9c1, 0xbf5           data 0xC9C1, 0xDBF5, 0xCB08, 0x2047 ; 6180
006182   dbf5
006184   cb08     movff	0xb08, 0x47        
006186   2047
006188   f1fa     dw	0xf1fa  ;unknown opcode     data 0xF1FA, 0x02D3, 0x3EC9, 0xCD3F ; 6188
00618a   02d3     mulwf	0xd3, 0            
00618c   3ec9     incfsz	0xc9, 0x1, 0      
00618e   cd3f     movff	0xd3f, 0x182       
006190   0182
006190   0182     movlb	0x82                   data 0x0182, 0x76F3, 0x003E, 0x04D3 ; 6190
006192   76f3     btg	0xf3, 0x3, 0         
006194   003e     dw	0x3e  ;unknown opcode 
006196   04d3     decf	0xd3, 0, 0          
006198   3ec9     incfsz	0xc9, 0x1, 0          data 0x3EC9, 0xD310, 0xC904, 0x07E6 ; 6198
00619a   d310     bra	0x67bc               
00619c   c904     movff	0x904, 0x7e6       
00619e   07e6
0061a0   20c6     addwfc	0xc6, 0, 0            data 0x20C6, 0x08F6, 0x04D3, 0x3EC9 ; 61A0
0061a2   08f6     sublw	0xf6               
0061a4   04d3     decf	0xd3, 0, 0          
0061a6   3ec9     incfsz	0xc9, 0x1, 0      
0061a8   d320     bra	0x67ea                   data 0xD320, 0xDB04, 0xC904, 0x3EF5 ; 61A8
0061aa   db04     rcall	0x67b4             
0061ac   c904     movff	0x904, 0xef5       
0061ae   3ef5
0061b0   f630     dw	0xf630  ;unknown opcode     data 0xF630, 0xD308, 0xF104, 0x04D3 ; 61B0
0061b2   d308     bra	0x67c4               
0061b4   f104     dw	0xf104  ;unknown opcode 
0061b6   04d3     decf	0xd3, 0, 0          
0061b8   3ec9     incfsz	0xc9, 0x1, 0          data 0x3EC9, 0xD330, 0xDB04, 0xC904 ; 61B8
0061ba   d330     bra	0x681c               
0061bc   db04     rcall	0x67c6             
0061be   c904     movff	0x904, 0xef5       
0061c0   3ef5
0061c0   3ef5     incfsz	0xf5, 0x1, 0          data 0x3EF5, 0xF640, 0xD308, 0xF104 ; 61C0
0061c2   f640     dw	0xf640  ;unknown opcode 
0061c4   d308     bra	0x67d6               
0061c6   f104     dw	0xf104  ;unknown opcode 
0061c8   04d3     decf	0xd3, 0, 0              data 0x04D3, 0x3EC9, 0xD340, 0xDB04 ; 61C8
0061ca   3ec9     incfsz	0xc9, 0x1, 0      
0061cc   d340     bra	0x684e               
0061ce   db04     rcall	0x67d8             
0061d0   c904     movff	0x904, 0x7e6           data 0xC904, 0x07E6, 0x60C6, 0x04D3 ; 61D0
0061d2   07e6
0061d4   60c6     cpfslt	0xc6, 0           
0061d6   04d3     decf	0xd3, 0, 0          
0061d8   e6c9     bn	0x616c                    data 0xE6C9, 0xC607, 0xD350, 0xC904 ; 61D8
0061da   c607     movff	0x607, 0x350       
0061dc   d350
0061de   c904     movff	0x904, 0x3e6       
0061e0   03e6
0061e0   03e6     mulwf	0xe6, 0x1              data 0x03E6, 0x50C6, 0x08F6, 0x04D3 ; 61E0
0061e2   50c6     movf	0xc6, 0, 0          
0061e4   08f6     sublw	0xf6               
0061e6   04d3     decf	0xd3, 0, 0          
0061e8   7ec9     btg	0xc9, 0x7, 0             data 0x7EC9, 0x00EE, 0xD3C8, 0x2305 ; 61E8
0061ea   00ee     dw	0xee  ;unknown opcode 
0061ec   d3c8     bra	0x697e               
0061ee   2305     addwfc	0x5, 0x1, 0x1     
0061f0   e9c3     dw	0xe9c3  ;unknown opcode     data 0xE9C3, 0xEE01, 0x2000, 0x3E02 ; 61F0
0061f2   ee01     lfsr	0, 0x100            
0061f4   2000
0061f6   3e02     incfsz	0x2, 0x1, 0       
0061f8   3d04     incfsz	0x4, 0, 0x1           data 0x3D04, 0x03E6, 0xCD3C, 0x0705 ; 61F8
0061fa   03e6     mulwf	0xe6, 0x1          
0061fc   cd3c     movff	0xd3c, 0x705       
0061fe   0705
006200   a121     btfss	0x21, 0, 0x1           data 0xA121, 0x7807, 0x0FCD, 0xC902 ; 6200
006202   7807     btg	0x7, 0x4, 0          
006204   0fcd     addlw	0xcd               
006206   c902     movff	0x902, 0x5c5       
006208   d5c5
006208   d5c5     bra	0x5d94                   data 0xD5C5, 0x0EE5, 0x1880, 0xC505 ; 6208
00620a   0ee5     movlw	0xe5               
00620c   1880     xorwf	0x80, 0, 0         
00620e   c505     movff	0x505, 0x5d5       
006210   e5d5
006210   e5d5     bnov	0x61bc                  data 0xE5D5, 0x000E, 0xE647, 0x0FFE ; 6210
006212   000e     tblwt	*-                 
006214   e647     bn	0x62a4                
006216   0ffe     addlw	0xfe               
006218   40cb     rrncf	0xcb, 0, 0             data 0x40CB, 0x0120, 0x853D, 0x0130 ; 6218
00621a   0120     movlb	0x20               
00621c   853d     bsf	0x3d, 0x2, 0x1       
00621e   0130     movlb	0x30               
006220   6f24     movwf	0x24, 0x1              data 0x6F24, 0xCB7E, 0x2840, 0x2B03 ; 6220
006222   cb7e     movff	0xb7e, 0x840       
006224   2840
006226   2b03     incf	0x3, 0x1, 0x1       
006228   0418     decf	0x18, 0, 0              data 0x0418, 0x0F0F, 0x0F0F, 0x4211 ; 6228
00622a   0f0f     addlw	0xf                
00622c   0f0f     addlw	0xf                
00622e   4211     rrncf	0x11, 0x1, 0       
006230   e602     bn	0x6236                    data 0xE602, 0x830F, 0x0130, 0x5F14 ; 6230
006232   830f     bsf	0xf, 0x1, 0x1        
006234   0130     movlb	0x30               
006236   5f14     subwf	0x14, 0x1, 0x1     
006238   b11a     btfsc	0x1a, 0, 0x1           data 0xB11A, 0x05D3, 0xE410, 0xD1E1 ; 6238
00623a   05d3     decf	0xd3, 0, 0x1        
00623c   e410     bov	0x625e               
00623e   d1e1     bra	0x6602               
006240   c9c1     movff	0x9c1, 0x130           data 0xC9C1, 0x3130, 0x3332, 0x3534 ; 6240
006242   3130
006244   3332     rrcf	0x32, 0x1, 0x1      
006246   3534     rlcf	0x34, 0, 0x1        
006248   3736     rlcf	0x36, 0x1, 0x1          data 0x3736, 0x3938, 0x4241, 0x4443 ; 6248
00624a   3938     swapf	0x38, 0, 0x1       
00624c   4241     rrncf	0x41, 0x1, 0       
00624e   4443     rlncf	0x43, 0, 0         
006250   4645     rlncf	0x45, 0x1, 0           data 0x4645, 0x0000, 0x0000, 0x0000 ; 6250
006252   0000     nop                      
006254   0000     nop                      
006256   0000     nop                      
006258   0000     nop                          data 0x0000, 0x0000, 0x803E, 0x01D3 ; 6258
00625a   0000     nop                      
00625c   803e     bsf	0x3e, 0, 0           
00625e   01d3     movlb	0xd3               
006260   003e     dw	0x3e  ;unknown opcode     data 0x003E, 0x01D3, 0x3C06, 0xFE10 ; 6260
006262   01d3     movlb	0xd3               
006264   3c06     incfsz	0x6, 0, 0         
006266   fe10     dw	0xfe10  ;unknown opcode 
006268   c5c9     movff	0x5c9, 0xb47           data 0xC5C9, 0xDB47, 0xE601, 0x2810 ; 6268
00626a   db47
00626c   e601     bn	0x6270                
00626e   2810     incf	0x10, 0, 0          
006270   78fa     btg	0xfa, 0x4, 0             data 0x78FA, 0x00D3, 0x3EC9, 0xD307 ; 6270
006272   00d3     dw	0xd3  ;unknown opcode 
006274   3ec9     incfsz	0xc9, 0x1, 0      
006276   d307     bra	0x6886               
006278   3e1e     incfsz	0x1e, 0x1, 0          data 0x3E1E, 0xD3C0, 0xD311, 0xD313 ; 6278
00627a   d3c0     bra	0x69fc               
00627c   d311     bra	0x68a0               
00627e   d313     bra	0x68a6               
006280   d315     bra	0x68ac                   data 0xD315, 0x3E17, 0xD308, 0xC91C ; 6280
006282   3e17     incfsz	0x17, 0x1, 0      
006284   d308     bra	0x6896               
006286   c91c     movff	0x91c, 0xddb       
006288   1ddb
006288   1ddb     comf	0xdb, 0, 0x1            data 0x1DDB, 0x5FCB, 0xCDC8, 0x0298 ; 6288
00628a   5fcb     subwf	0xcb, 0x1, 0x1     
00628c   cdc8     movff	0xdc8, 0x298       
00628e   0298
006290   7a3a     btg	0x3a, 0x5, 0             data 0x7A3A, 0x3C04, 0x7A32, 0xC904 ; 6290
006292   3c04     incfsz	0x4, 0, 0         
006294   7a32     btg	0x32, 0x5, 0         
006296   c904     movff	0x904, 0xedb       
006298   1edb
006298   1edb     comf	0xdb, 0x1, 0            data 0x1EDB, 0xDFCB, 0x1ED3, 0x10DB ; 6298
00629a   dfcb     rcall	0x6232             
00629c   1ed3     comf	0xd3, 0x1, 0        
00629e   10db     iorwf	0xdb, 0, 0         
0062a0   7232     btg	0x32, 0x1, 0             data 0x7232, 0xDB04, 0x3212, 0x0473 ; 62A0
0062a2   db04     rcall	0x68ac             
0062a4   3212     rrcf	0x12, 0x1, 0        
0062a6   0473     decf	0x73, 0, 0          
0062a8   14db     andwf	0xdb, 0, 0             data 0x14DB, 0x7FE6, 0x7432, 0xDB04 ; 62A8
0062aa   7fe6     btg	0xe6, 0x7, 0x1       
0062ac   7432     btg	0x32, 0x2, 0         
0062ae   db04     rcall	0x68b8             
0062b0   3216     rrcf	0x16, 0x1, 0            data 0x3216, 0x0475, 0x19DB, 0x7632 ; 62B0
0062b2   0475     decf	0x75, 0, 0          
0062b4   19db     xorwf	0xdb, 0, 0x1       
0062b6   7632     btg	0x32, 0x3, 0         
0062b8   db04     rcall	0x68c2                 data 0xDB04, 0x321A, 0x0477, 0x203E ; 62B8
0062ba   321a     rrcf	0x1a, 0x1, 0        
0062bc   0477     decf	0x77, 0, 0          
0062be   203e     addwfc	0x3e, 0, 0        
0062c0   7832     btg	0x32, 0x4, 0             data 0x7832, 0xDB04, 0x3218, 0x0479 ; 62C0
0062c2   db04     rcall	0x68cc             
0062c4   3218     rrcf	0x18, 0x1, 0        
0062c6   0479     decf	0x79, 0, 0          
0062c8   1edb     comf	0xdb, 0x1, 0            data 0x1EDB, 0x9FCB, 0x1ED3, 0xDBC9 ; 62C8
0062ca   9fcb     bcf	0xcb, 0x7, 0x1       
0062cc   1ed3     comf	0xd3, 0x1, 0        
0062ce   dbc9     rcall	0x6a62             
0062d0   cb1e     movff	0xb1e, 0x3df           data 0xCB1E, 0xD3DF, 0xC91E, 0x1EDB ; 62D0
0062d2   d3df
0062d4   c91e     movff	0x91e, 0xedb       
0062d6   1edb
0062d8   9fcb     bcf	0xcb, 0x7, 0x1           data 0x9FCB, 0x1ED3, 0xCDC9, 0x02CF ; 62D8
0062da   1ed3     comf	0xd3, 0x1, 0        
0062dc   cdc9     movff	0xdc9, 0x2cf       
0062de   02cf
0062e0   1adb     xorwf	0xdb, 0x1, 0           data 0x1ADB, 0x273C, 0x1AD3, 0xD6CD ; 62E0
0062e2   273c     addwf	0x3c, 0x1, 0x1     
0062e4   1ad3     xorwf	0xd3, 0x1, 0       
0062e6   d6cd     bra	0x6082               
0062e8   cd02     movff	0xd02, 0x298           data 0xCD02, 0x0298, 0xCFCD, 0x3A02 ; 62E8
0062ea   0298
0062ec   cfcd     movff	0xfcd, 0xa02       
0062ee   3a02
0062f0   0475     decf	0x75, 0, 0              data 0x0475, 0x5618, 0xCFCD, 0xDB02 ; 62F0
0062f2   5618     subfwb	0x18, 0x1, 0      
0062f4   cfcd     movff	0xfcd, 0xb02       
0062f6   db02
0062f8   3d1a     incfsz	0x1a, 0, 0x1          data 0x3D1A, 0xD327, 0xCD1A, 0x02D6 ; 62F8
0062fa   d327     bra	0x694a               
0062fc   cd1a     movff	0xd1a, 0x2d6       
0062fe   02d6
006300   98cd     bcf	0xcd, 0x4, 0             data 0x98CD, 0xCD02, 0x02CF, 0x753A ; 6300
006302   cd02     movff	0xd02, 0x2cf       
006304   02cf
006306   753a     btg	0x3a, 0x2, 0x1       
006308   1804     xorwf	0x4, 0, 0              data 0x1804, 0xCD3F, 0x02CF, 0x19DB ; 6308
00630a   cd3f     movff	0xd3f, 0x2cf       
00630c   02cf
00630e   19db     xorwf	0xdb, 0, 0x1       
006310   273c     addwf	0x3c, 0x1, 0x1         data 0x273C, 0x0718, 0xCFCD, 0xDB02 ; 6310
006312   0718     decf	0x18, 0x1, 0x1      
006314   cfcd     movff	0xfcd, 0xb02       
006316   db02
006318   3d19     incfsz	0x19, 0, 0x1          data 0x3D19, 0x2827, 0x470A, 0x13D6 ; 6318
00631a   2827     incf	0x27, 0, 0          
00631c   470a     rlncf	0xa, 0x1, 0x1      
00631e   13d6     iorwf	0xd6, 0x1, 0x1     
006320   29fa     incf	0xfa, 0, 0x1            data 0x29FA, 0x0603, 0x1801, 0x0602 ; 6320
006322   0603     decf	0x3, 0x1, 0         
006324   1801     xorwf	0x1, 0, 0          
006326   0602     decf	0x2, 0x1, 0         
006328   7812     btg	0x12, 0x4, 0             data 0x7812, 0x19D3, 0xD6CD, 0xCD02 ; 6328
00632a   19d3     xorwf	0xd3, 0, 0x1       
00632c   d6cd     bra	0x60c8               
00632e   cd02     movff	0xd02, 0x298       
006330   0298
006330   0298     mulwf	0x98, 0                data 0x0298, 0xCFCD, 0x3A02, 0x0475 ; 6330
006332   cfcd     movff	0xfcd, 0xa02       
006334   3a02
006336   0475     decf	0x75, 0, 0          
006338   1018     iorwf	0x18, 0, 0             data 0x1018, 0xCFCD, 0xDB02, 0x3C16 ; 6338
00633a   cfcd     movff	0xfcd, 0xb02       
00633c   db02
00633e   3c16     incfsz	0x16, 0, 0        
006340   1827     xorwf	0x27, 0, 0             data 0x1827, 0xCD07, 0x02CF, 0x16DB ; 6340
006342   cd07     movff	0xd07, 0x2cf       
006344   02cf
006346   16db     andwf	0xdb, 0x1, 0       
006348   273d     addwf	0x3d, 0x1, 0x1         data 0x273D, 0xDB47, 0xEE19, 0x2802 ; 6348
00634a   db47     rcall	0x69da             
00634c   ee19     lfsr	0x1, 0x902          
00634e   2802
006350   ee27     lfsr	0x2, 0x702              data 0xEE27, 0x3D02, 0x9E21, 0x8504 ; 6350
006352   3d02
006354   9e21     bcf	0x21, 0x7, 0         
006356   8504     bsf	0x4, 0x2, 0x1        
006358   0130     movlb	0x30                   data 0x0130, 0x6F24, 0xEE78, 0x2800 ; 6358
00635a   6f24     movwf	0x24, 0x1          
00635c   ee78     dw	0xee78  ;unknown opcode 
00635e   2800     incf	0, 0, 0             
006360   3d09     incfsz	0x9, 0, 0x1           data 0x3D09, 0xFA96, 0x036B, 0x0106 ; 6360
006362   fa96     dw	0xfa96  ;unknown opcode 
006364   036b     mulwf	0x6b, 0x1          
006366   0106     movlb	0x6                
006368   0118     movlb	0x18                   data 0x0118, 0x7846, 0x16D3, 0xD6CD ; 6368
00636a   7846     btg	0x46, 0x4, 0         
00636c   16d3     andwf	0xd3, 0x1, 0       
00636e   d6cd     bra	0x610a               
006370   cd02     movff	0xd02, 0x298           data 0xCD02, 0x0298, 0x08CD, 0xC904 ; 6370
006372   0298
006374   08cd     sublw	0xcd               
006376   c904     movff	0x904, 0x73a       
006378   773a
006378   773a     btg	0x3a, 0x3, 0x1           data 0x773A, 0xCD04, 0x04B7, 0x9F21 ; 6378
00637a   cd04     movff	0xd04, 0x4b7       
00637c   04b7
00637e   9f21     bcf	0x21, 0x7, 0x1       
006380   e604     bn	0x638a                    data 0xE604, 0x2003, 0x21D7, 0x04AA ; 6380
006382   2003     addwfc	0x3, 0, 0         
006384   21d7     addwfc	0xd7, 0, 0x1      
006386   04aa     decf	0xaa, 0, 0          
006388   d218     bra	0x67ba                   data 0xD218, 0xCFCD, 0xDB02, 0x3C14 ; 6388
00638a   cfcd     movff	0xfcd, 0xb02       
00638c   db02
00638e   3c14     incfsz	0x14, 0, 0        
006390   1827     xorwf	0x27, 0, 0             data 0x1827, 0xCD0F, 0x02CF, 0x14DB ; 6390
006392   cd0f     movff	0xd0f, 0x2cf       
006394   02cf
006396   14db     andwf	0xdb, 0, 0         
006398   00ee     dw	0xee  ;unknown opcode     data 0x00EE, 0x0428, 0x273D, 0x0218 ; 6398
00639a   0428     decf	0x28, 0, 0          
00639c   273d     addwf	0x3d, 0x1, 0x1     
00639e   0218     mulwf	0x18, 0            
0063a0   233e     addwfc	0x3e, 0x1, 0x1        data 0x233E, 0xD647, 0xFA24, 0x03AA ; 63A0
0063a2   d647     bra	0x6032               
0063a4   fa24     dw	0xfa24  ;unknown opcode 
0063a6   03aa     mulwf	0xaa, 0x1          
0063a8   0006     pop                          data 0x0006, 0xD378, 0xCD14, 0x02D6 ; 63A8
0063aa   d378     bra	0x6a9c               
0063ac   cd14     movff	0xd14, 0x2d6       
0063ae   02d6
0063b0   98cd     bcf	0xcd, 0x4, 0             data 0x98CD, 0xC902, 0xCFCD, 0xDB02 ; 63B0
0063b2   c902     movff	0x902, 0xfcd       
0063b4   cfcd
0063b6   db02     rcall	0x69bc             
0063b8   3c12     incfsz	0x12, 0, 0            data 0x3C12, 0x1827, 0xCD0F, 0x02CF ; 63B8
0063ba   1827     xorwf	0x27, 0, 0         
0063bc   cd0f     movff	0xd0f, 0x2cf       
0063be   02cf
0063c0   12db     iorwf	0xdb, 0x1, 0           data 0x12DB, 0x00EE, 0x0428, 0x273D ; 63C0
0063c2   00ee     dw	0xee  ;unknown opcode 
0063c4   0428     decf	0x28, 0, 0          
0063c6   273d     addwf	0x3d, 0x1, 0x1     
0063c8   0218     mulwf	0x18, 0                data 0x0218, 0x593E, 0xD647, 0xFA60 ; 63C8
0063ca   593e     subwfb	0x3e, 0, 0x1      
0063cc   d647     bra	0x605c               
0063ce   fa60     dw	0xfa60  ;unknown opcode 
0063d0   03d4     mulwf	0xd4, 0x1              data 0x03D4, 0x0006, 0xD378, 0xCD12 ; 63D0
0063d2   0006     pop                      
0063d4   d378     bra	0x6ac6               
0063d6   cd12     movff	0xd12, 0x2d6       
0063d8   02d6
0063d8   02d6     mulwf	0xd6, 0                data 0x02D6, 0x98CD, 0xC902, 0xCFCD ; 63D8
0063da   98cd     bcf	0xcd, 0x4, 0         
0063dc   c902     movff	0x902, 0xfcd       
0063de   cfcd
0063e0   db02     rcall	0x69e6                 data 0xDB02, 0x3C10, 0x1827, 0xCD0F ; 63E0
0063e2   3c10     incfsz	0x10, 0, 0        
0063e4   1827     xorwf	0x27, 0, 0         
0063e6   cd0f     movff	0xd0f, 0x2cf       
0063e8   02cf
0063e8   02cf     mulwf	0xcf, 0                data 0x02CF, 0x10DB, 0x00EE, 0x0428 ; 63E8
0063ea   10db     iorwf	0xdb, 0, 0         
0063ec   00ee     dw	0xee  ;unknown opcode 
0063ee   0428     decf	0x28, 0, 0          
0063f0   273d     addwf	0x3d, 0x1, 0x1         data 0x273D, 0x0218, 0x593E, 0xD647 ; 63F0
0063f2   0218     mulwf	0x18, 0            
0063f4   593e     subwfb	0x3e, 0, 0x1      
0063f6   d647     bra	0x6086               
0063f8   fa60     dw	0xfa60  ;unknown opcode     data 0xFA60, 0x03FE, 0x0006, 0xD378 ; 63F8
0063fa   03fe     mulwf	0xfe, 0x1          
0063fc   0006     pop                      
0063fe   d378     bra	0x6af0               
006400   cd10     movff	0xd10, 0x2d6           data 0xCD10, 0x02D6, 0x98CD, 0xC902 ; 6400
006402   02d6
006404   98cd     bcf	0xcd, 0x4, 0         
006406   c902     movff	0x902, 0xfcd       
006408   cfcd
006408   cfcd     movff	0xfcd, 0x602           data 0xCFCD, 0x0602, 0x3A06, 0x0477 ; 6408
00640a   0602
00640c   3a06     swapf	0x6, 0x1, 0        
00640e   0477     decf	0x77, 0, 0          
006410   b7cd     btfsc	0xcd, 0x3, 0x1         data 0xB7CD, 0x8004, 0x3A47, 0x0477 ; 6410
006412   8004     bsf	0x4, 0, 0            
006414   3a47     swapf	0x47, 0x1, 0       
006416   0477     decf	0x77, 0, 0          
006418   b7cd     btfsc	0xcd, 0x3, 0x1         data 0xB7CD, 0xE604, 0x0FFC, 0x800F ; 6418
00641a   e604     bn	0x6424                
00641c   0ffc     addlw	0xfc               
00641e   800f     bsf	0xf, 0, 0            
006420   2147     addwfc	0x47, 0, 0x1          data 0x2147, 0x04AB, 0x763A, 0x3D04 ; 6420
006422   04ab     decf	0xab, 0, 0          
006424   763a     btg	0x3a, 0x3, 0         
006426   3d04     incfsz	0x4, 0, 0x1       
006428   3085     rrcf	0x85, 0, 0              data 0x3085, 0x2401, 0x7E6F, 0x4780 ; 6428
00642a   2401     addwf	0x1, 0, 0          
00642c   7e6f     btg	0x6f, 0x7, 0         
00642e   4780     rlncf	0x80, 0x1, 0x1     
006430   753a     btg	0x3a, 0x2, 0x1           data 0x753A, 0xCD04, 0x04B7, 0x4780 ; 6430
006432   cd04     movff	0xd04, 0x4b7       
006434   04b7
006436   4780     rlncf	0x80, 0x1, 0x1     
006438   763a     btg	0x3a, 0x3, 0             data 0x763A, 0xD604, 0xF203, 0x044B ; 6438
00643a   d604     bra	0x6044               
00643c   f203     dw	0xf203  ;unknown opcode 
00643e   044b     decf	0x4b, 0, 0          
006440   773a     btg	0x3a, 0x3, 0x1           data 0x773A, 0xCD04, 0x04B7, 0x03E6 ; 6440
006442   cd04     movff	0xd04, 0x4b7       
006444   04b7
006446   03e6     mulwf	0xe6, 0x1          
006448   0120     movlb	0x20                   data 0x0120, 0x7805, 0x0706, 0xC9CD ; 6448
00644a   7805     btg	0x5, 0x4, 0          
00644c   0706     decf	0x6, 0x1, 0x1       
00644e   c9cd     movff	0x9cd, 0xc04       
006450   3c04
006450   3c04     incfsz	0x4, 0, 0             data 0x3C04, 0x18D3, 0xD6CD, 0xCD02 ; 6450
006452   18d3     xorwf	0xd3, 0, 0         
006454   d6cd     bra	0x61f0               
006456   cd02     movff	0xd02, 0x298       
006458   0298
006458   0298     mulwf	0x98, 0                data 0x0298, 0xEEC9, 0x2000, 0x3A03 ; 6458
00645a   eec9     dw	0xeec9  ;unknown opcode 
00645c   2000     addwfc	0, 0, 0           
00645e   3a03     swapf	0x3, 0x1, 0        
006460   0479     decf	0x79, 0, 0              data 0x0479, 0x07E6, 0xCB3D, 0xCB27 ; 6460
006462   07e6     decf	0xe6, 0x1, 0x1      
006464   cb3d     movff	0xb3d, 0xb27       
006466   cb27
006468   2127     addwfc	0x27, 0, 0x1          data 0x2127, 0x0482, 0x3085, 0x2401 ; 6468
00646a   0482     decf	0x82, 0, 0          
00646c   3085     rrcf	0x85, 0, 0          
00646e   2401     addwf	0x1, 0, 0          
006470   c96f     movff	0x96f, 0               data 0xC96F, 0x0000, 0x0000, 0x0000 ; 6470
006472   0000
006474   0000     nop                      
006476   0000     nop                      
006478   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6478
00647a   0000     nop                      
00647c   0000     nop                      
00647e   0000     nop                      
006480   0000     nop                          data 0x0000, 0x7553, 0x006E, 0x6F4D ; 6480
006482   7553     btg	0x53, 0x2, 0x1       
006484   006e     dw	0x6e  ;unknown opcode 
006486   6f4d     movwf	0x4d, 0x1          
006488   006e     dw	0x6e  ;unknown opcode     data 0x006E, 0x7554, 0x0065, 0x6557 ; 6488
00648a   7554     btg	0x54, 0x2, 0x1       
00648c   0065     dw	0x65  ;unknown opcode 
00648e   6557     cpfsgt	0x57, 0x1         
006490   0064     dw	0x64  ;unknown opcode     data 0x0064, 0x6854, 0x0075, 0x7246 ; 6490
006492   6854     setf	0x54, 0             
006494   0075     dw	0x75  ;unknown opcode 
006496   7246     btg	0x46, 0x1, 0         
006498   0069     dw	0x69  ;unknown opcode     data 0x0069, 0x6153, 0x0074, 0x2831 ; 6498
00649a   6153     cpfslt	0x53, 0x1         
00649c   0074     dw	0x74  ;unknown opcode 
00649e   2831     incf	0x31, 0, 0          
0064a0   3031     rrcf	0x31, 0, 0              data 0x3031, 0x3031, 0x3131, 0x3130 ; 64A0
0064a2   3031     rrcf	0x31, 0, 0          
0064a4   3131     rrcf	0x31, 0, 0x1        
0064a6   3130     rrcf	0x30, 0, 0x1        
0064a8   3130     rrcf	0x30, 0, 0x1            data 0x3130, 0x0029, 0x0303, 0x0106 ; 64A8
0064aa   0029     dw	0x29  ;unknown opcode 
0064ac   0303     mulwf	0x3, 0x1           
0064ae   0106     movlb	0x6                
0064b0   0604     decf	0x4, 0x1, 0             data 0x0604, 0x0502, 0x0300, 0xC505 ; 64B0
0064b2   0502     decf	0x2, 0, 0x1         
0064b4   0300     mulwf	0, 0x1             
0064b6   c505     movff	0x505, 0x64f       
0064b8   e64f
0064b8   e64f     bn	0x6558                    data 0xE64F, 0x0FF0, 0x0F47, 0x0F0F ; 64B8
0064ba   0ff0     addlw	0xf0               
0064bc   0f47     addlw	0x47               
0064be   0f0f     addlw	0xf                
0064c0   8087     bsf	0x87, 0, 0               data 0x8087, 0x7947, 0x0FE6, 0xC180 ; 64C0
0064c2   7947     btg	0x47, 0x4, 0x1       
0064c4   0fe6     addlw	0xe6               
0064c6   c180     movff	0x180, 0x5c9       
0064c8   d5c9
0064c8   d5c9     bra	0x605c                   data 0xD5C9, 0x60E5, 0x784F, 0x00EE ; 64C8
0064ca   60e5     cpfslt	0xe5, 0           
0064cc   784f     btg	0x4f, 0x4, 0         
0064ce   00ee     dw	0xee  ;unknown opcode 
0064d0   16c8     andwf	0xc8, 0x1, 0           data 0x16C8, 0x1E01, 0x1400, 0x20CB ; 64D0
0064d2   1e01     comf	0x1, 0x1, 0         
0064d4   1400     andwf	0, 0, 0            
0064d6   20cb     addwfc	0xcb, 0, 0        
0064d8   fb30     dw	0xfb30  ;unknown opcode     data 0xFB30, 0x0F78, 0x80F6, 0x7947 ; 64D8
0064da   0f78     addlw	0x78               
0064dc   80f6     bsf	0xf6, 0, 0           
0064de   7947     btg	0x47, 0x4, 0x1       
0064e0   3890     swapf	0x90, 0, 0             data 0x3890, 0x2806, 0x4F11, 0x837A ; 64E0
0064e2   2806     incf	0x6, 0, 0           
0064e4   4f11     dcfsnz	0x11, 0x1, 0x1    
0064e6   837a     bsf	0x7a, 0x1, 0x1       
0064e8   155f     andwf	0x5f, 0, 0x1           data 0x155F, 0xEE7A, 0x2801, 0xCB05 ; 64E8
0064ea   ee7a     dw	0xee7a  ;unknown opcode 
0064ec   2801     incf	0x1, 0, 0           
0064ee   cb05     movff	0xb05, 0x908       
0064f0   7908
0064f0   7908     btg	0x8, 0x4, 0x1            data 0x7908, 0xEC18, 0x1D79, 0x444B ; 64F0
0064f2   ec18     call	0x1af230, 0         
0064f4   1d79
0064f6   444b     rlncf	0x4b, 0, 0         
0064f8   d1e1     bra	0x68bc                   data 0xD1E1, 0xF5C9, 0x013E, 0x03CD ; 64F8
0064fa   f5c9     dw	0xf5c9  ;unknown opcode 
0064fc   013e     movlb	0x3e               
0064fe   03cd     mulwf	0xcd, 0x1          
006500   f105     dw	0xf105  ;unknown opcode     data 0xF105, 0xC5C9, 0x4FE5, 0x0406 ; 6500
006502   c5c9     movff	0x5c9, 0xfe5       
006504   4fe5
006506   0406     decf	0x6, 0, 0           
006508   9c21     bcf	0x21, 0x6, 0             data 0x9C21, 0x3707, 0x7ECB, 0x0120 ; 6508
00650a   3707     rlcf	0x7, 0x1, 0x1       
00650c   7ecb     btg	0xcb, 0x7, 0         
00650e   0120     movlb	0x20               
006510   7e3f     btg	0x3f, 0x7, 0             data 0x7E3F, 0x771F, 0x102B, 0x0DFA ; 6510
006512   771f     btg	0x1f, 0x3, 0x1       
006514   102b     iorwf	0x2b, 0, 0         
006516   0dfa     mullw	0xfa               
006518   ec20     call	0x3c240, 0              data 0xEC20, 0xC1E1, 0xF5C9, 0x013E ; 6518
00651a   c1e1
00651c   f5c9     dw	0xf5c9  ;unknown opcode 
00651e   013e     movlb	0x3e               
006520   25cd     addwf	0xcd, 0, 0x1           data 0x25CD, 0xF105, 0xC5C9, 0x4FE5 ; 6520
006522   f105     dw	0xf105  ;unknown opcode 
006524   c5c9     movff	0x5c9, 0xfe5       
006526   4fe5
006528   0406     decf	0x6, 0, 0               data 0x0406, 0x9921, 0x3707, 0x7E3F ; 6528
00652a   9921     bcf	0x21, 0x4, 0x1       
00652c   3707     rlcf	0x7, 0x1, 0x1       
00652e   7e3f     btg	0x3f, 0x7, 0         
006530   7717     btg	0x17, 0x3, 0x1           data 0x7717, 0x1023, 0x0DFA, 0xF020 ; 6530
006532   1023     iorwf	0x23, 0, 0         
006534   0dfa     mullw	0xfa               
006536   f020     dw	0xf020  ;unknown opcode 
006538   c1e1     movff	0x1e1, 0x5c9           data 0xC1E1, 0xE5C9, 0x9D21, 0x1807 ; 6538
00653a   e5c9
00653c   9d21     bcf	0x21, 0x6, 0x1       
00653e   1807     xorwf	0x7, 0, 0          
006540   e50a     bnov	0x6556                  data 0xE50A, 0xA121, 0x1807, 0xE504 ; 6540
006542   a121     btfss	0x21, 0, 0x1       
006544   1807     xorwf	0x7, 0, 0          
006546   e504     bnov	0x6550              
006548   9921     bcf	0x21, 0x4, 0x1           data 0x9921, 0xF507, 0xDDC5, 0xFDE5 ; 6548
00654a   f507     dw	0xf507  ;unknown opcode 
00654c   ddc5     rcall	0x60d8             
00654e   fde5     dw	0xfde5  ;unknown opcode 
006550   3ee5     incfsz	0xe5, 0x1, 0          data 0x3EE5, 0x0E00, 0x0600, 0xDD04 ; 6550
006552   0e00     movlw	0                  
006554   0600     decf	0, 0x1, 0           
006556   dd04     rcall	0x5f60             
006558   9921     bcf	0x21, 0x4, 0x1           data 0x9921, 0xFD07, 0x9D21, 0xDD07 ; 6558
00655a   fd07     dw	0xfd07  ;unknown opcode 
00655c   9d21     bcf	0x21, 0x6, 0x1       
00655e   dd07     rcall	0x5f6e             
006560   0086     dw	0x86  ;unknown opcode     data 0x0086, 0x0130, 0xFD0C, 0x0086 ; 6560
006562   0130     movlb	0x30               
006564   fd0c     dw	0xfd0c  ;unknown opcode 
006566   0086     dw	0x86  ;unknown opcode 
006568   0130     movlb	0x30                   data 0x0130, 0x770C, 0x23DD, 0x23FD ; 6568
00656a   770c     btg	0xc, 0x3, 0x1        
00656c   23dd     addwfc	0xdd, 0x1, 0x1    
00656e   23fd     addwfc	0xfd, 0x1, 0x1    
006570   7923     btg	0x23, 0x4, 0x1           data 0x7923, 0x000E, 0xE910, 0xA93A ; 6570
006572   000e     tblwt	*-                 
006574   e910     dw	0xe910  ;unknown opcode 
006576   a93a     btfss	0x3a, 0x4, 0x1     
006578   e607     bn	0x6588                    data 0xE607, 0xB1FC, 0x2B2B, 0x2B2B ; 6578
00657a   b1fc     btfsc	0xfc, 0, 0x1       
00657c   2b2b     incf	0x2b, 0x1, 0x1      
00657e   2b2b     incf	0x2b, 0x1, 0x1      
006580   edcd     call	0x40d9a, 0x1            data 0xEDCD, 0x3206, 0x07A9, 0xE1FD ; 6580
006582   3206
006584   07a9     decf	0xa9, 0x1, 0x1      
006586   e1fd     bnz	0x6582               
006588   e1dd     bnz	0x6544                   data 0xE1DD, 0xF1C1, 0xC9E1, 0x21E5 ; 6588
00658a   f1c1     dw	0xf1c1  ;unknown opcode 
00658c   c9e1     movff	0x9e1, 0x1e5       
00658e   21e5
006590   079d     decf	0x9d, 0x1, 0x1          data 0x079D, 0x0A18, 0x21E5, 0x07A1 ; 6590
006592   0a18     xorlw	0x18               
006594   21e5     addwfc	0xe5, 0, 0x1      
006596   07a1     decf	0xa1, 0x1, 0x1      
006598   0418     decf	0x18, 0, 0              data 0x0418, 0x21E5, 0x0799, 0xC5F5 ; 6598
00659a   21e5     addwfc	0xe5, 0, 0x1      
00659c   0799     decf	0x99, 0x1, 0x1      
00659e   c5f5     movff	0x5f5, 0x5dd       
0065a0   e5dd
0065a0   e5dd     bnov	0x655c                  data 0xE5DD, 0xE5FD, 0x003E, 0x3F37 ; 65A0
0065a2   e5fd     bnov	0x659e              
0065a4   003e     dw	0x3e  ;unknown opcode 
0065a6   3f37     incfsz	0x37, 0x1, 0x1    
0065a8   000e     tblwt	*-                     data 0x000E, 0x0406, 0x21DD, 0x0799 ; 65A8
0065aa   0406     decf	0x6, 0, 0           
0065ac   21dd     addwfc	0xdd, 0, 0x1      
0065ae   0799     decf	0x99, 0x1, 0x1      
0065b0   21fd     addwfc	0xfd, 0, 0x1          data 0x21FD, 0x079D, 0x7EDD, 0xFD00 ; 65B0
0065b2   079d     decf	0x9d, 0x1, 0x1      
0065b4   7edd     btg	0xdd, 0x7, 0         
0065b6   fd00     dw	0xfd00  ;unknown opcode 
0065b8   009e     dw	0x9e  ;unknown opcode     data 0x009E, 0xDD77, 0xFD23, 0x2323 ; 65B8
0065ba   dd77     rcall	0x60aa             
0065bc   fd23     dw	0xfd23  ;unknown opcode 
0065be   2323     addwfc	0x23, 0x1, 0x1    
0065c0   f210     dw	0xf210  ;unknown opcode     data 0xF210, 0x0230, 0x010E, 0xA93A ; 65C0
0065c2   0230     mulwf	0x30, 0            
0065c4   010e     movlb	0xe                
0065c6   a93a     btfss	0x3a, 0x4, 0x1     
0065c8   e607     bn	0x65d8                    data 0xE607, 0xB1FC, 0x2B2B, 0x2B2B ; 65C8
0065ca   b1fc     btfsc	0xfc, 0, 0x1       
0065cc   2b2b     incf	0x2b, 0x1, 0x1      
0065ce   2b2b     incf	0x2b, 0x1, 0x1      
0065d0   edcd     call	0x40d9a, 0x1            data 0xEDCD, 0x3206, 0x07A9, 0xE1FD ; 65D0
0065d2   3206
0065d4   07a9     decf	0xa9, 0x1, 0x1      
0065d6   e1fd     bnz	0x65d2               
0065d8   e1dd     bnz	0x6594                   data 0xE1DD, 0xF1C1, 0xC9E1, 0xD5E5 ; 65D8
0065da   f1c1     dw	0xf1c1  ;unknown opcode 
0065dc   c9e1     movff	0x9e1, 0x5e5       
0065de   d5e5
0065e0   21c5     addwfc	0xc5, 0, 0x1          data 0x21C5, 0x0000, 0xA722, 0x2207 ; 65E0
0065e2   0000     nop                      
0065e4   a722     btfss	0x22, 0x3, 0x1     
0065e6   2207     addwfc	0x7, 0x1, 0       
0065e8   07a3     decf	0xa3, 0x1, 0x1          data 0x07A3, 0xA122, 0x2107, 0x0001 ; 65E8
0065ea   a122     btfss	0x22, 0, 0x1       
0065ec   2107     addwfc	0x7, 0, 0x1       
0065ee   0001     dw	0x1  ;unknown opcode  
0065f0   a522     btfss	0x22, 0x2, 0x1         data 0xA522, 0xAF07, 0xA03A, 0xCB07 ; 65F0
0065f2   af07     btfss	0x7, 0x7, 0x1      
0065f4   a03a     btfss	0x3a, 0, 0         
0065f6   cb07     movff	0xb07, 0x7f        
0065f8   207f
0065f8   207f     addwfc	0x7f, 0, 0            data 0x207F, 0x3A3D, 0x07A5, 0x3217 ; 65F8
0065fa   3a3d     swapf	0x3d, 0x1, 0       
0065fc   07a5     decf	0xa5, 0x1, 0x1      
0065fe   3217     rrcf	0x17, 0x1, 0        
006600   07a5     decf	0xa5, 0x1, 0x1          data 0x07A5, 0xA63A, 0x1707, 0xA632 ; 6600
006602   a63a     btfss	0x3a, 0x3, 0       
006604   1707     andwf	0x7, 0x1, 0x1      
006606   a632     btfss	0x32, 0x3, 0       
006608   3a07     swapf	0x7, 0x1, 0            data 0x3A07, 0x07A7, 0x3217, 0x07A7 ; 6608
00660a   07a7     decf	0xa7, 0x1, 0x1      
00660c   3217     rrcf	0x17, 0x1, 0        
00660e   07a7     decf	0xa7, 0x1, 0x1      
006610   a83a     btfss	0x3a, 0x4, 0           data 0xA83A, 0x1707, 0xA832, 0xDA07 ; 6610
006612   1707     andwf	0x7, 0x1, 0x1      
006614   a832     btfss	0x32, 0x4, 0       
006616   da07     rcall	0x6a26             
006618   06ad     decf	0xad, 0x1, 0            data 0x06AD, 0x9D3A, 0x1707, 0x9D32 ; 6618
00661a   9d3a     bcf	0x3a, 0x6, 0x1       
00661c   1707     andwf	0x7, 0x1, 0x1      
00661e   9d32     bcf	0x32, 0x6, 0x1       
006620   3a07     swapf	0x7, 0x1, 0            data 0x3A07, 0x079E, 0x3217, 0x079E ; 6620
006622   079e     decf	0x9e, 0x1, 0x1      
006624   3217     rrcf	0x17, 0x1, 0        
006626   079e     decf	0x9e, 0x1, 0x1      
006628   9f3a     bcf	0x3a, 0x7, 0x1           data 0x9F3A, 0x1707, 0x9F32, 0x3A07 ; 6628
00662a   1707     andwf	0x7, 0x1, 0x1      
00662c   9f32     bcf	0x32, 0x7, 0x1       
00662e   3a07     swapf	0x7, 0x1, 0        
006630   07a0     decf	0xa0, 0x1, 0x1          data 0x07A0, 0x3217, 0x07A0, 0xBC18 ; 6630
006632   3217     rrcf	0x17, 0x1, 0        
006634   07a0     decf	0xa0, 0x1, 0x1      
006636   bc18     btfsc	0x18, 0x6, 0       
006638   992a     bcf	0x2a, 0x4, 0x1           data 0x992A, 0xED07, 0x9D5B, 0xED07 ; 6638
00663a   ed07     call	0x1ab60e, 0x1       
00663c   9d5b
00663e   ed07     call	0x16a40e, 0x1       
006640   eb52
006640   eb52     dw	0xeb52  ;unknown opcode     data 0xEB52, 0x9B2A, 0xED07, 0x9F4B ; 6640
006642   9b2a     bcf	0x2a, 0x5, 0x1       
006644   ed07     call	0x1e960e, 0x1       
006646   9f4b
006648   ed07     call	0x10840e, 0x1           data 0xED07, 0x3842, 0x221E, 0x079B ; 6648
00664a   3842
00664c   221e     addwfc	0x1e, 0x1, 0      
00664e   079b     decf	0x9b, 0x1, 0x1      
006650   53ed     movf	0xed, 0x1, 0x1          data 0x53ED, 0x0799, 0xA52A, 0xED07 ; 6650
006652   0799     decf	0x99, 0x1, 0x1      
006654   a52a     btfss	0x2a, 0x2, 0x1     
006656   ed07     call	0x2b60e, 0x1        
006658   a15b
006658   a15b     btfss	0x5b, 0, 0x1           data 0xA15B, 0x1907, 0xA122, 0x2A07 ; 6658
00665a   1907     xorwf	0x7, 0, 0x1        
00665c   a122     btfss	0x22, 0, 0x1       
00665e   2a07     incf	0x7, 0x1, 0         
006660   07a7     decf	0xa7, 0x1, 0x1          data 0x07A7, 0x5BED, 0x07A3, 0x5AED ; 6660
006662   5bed     subwfb	0xed, 0x1, 0x1    
006664   07a3     decf	0xa3, 0x1, 0x1      
006666   5aed     subwfb	0xed, 0x1, 0      
006668   a322     btfss	0x22, 0x1, 0x1         data 0xA322, 0xAF07, 0xA83A, 0x1F07 ; 6668
00666a   af07     btfss	0x7, 0x7, 0x1      
00666c   a83a     btfss	0x3a, 0x4, 0       
00666e   1f07     comf	0x7, 0x1, 0x1       
006670   a832     btfss	0x32, 0x4, 0           data 0xA832, 0x3A07, 0x07A7, 0x321F ; 6670
006672   3a07     swapf	0x7, 0x1, 0        
006674   07a7     decf	0xa7, 0x1, 0x1      
006676   321f     rrcf	0x1f, 0x1, 0        
006678   07a7     decf	0xa7, 0x1, 0x1          data 0x07A7, 0xA63A, 0x1F07, 0xA632 ; 6678
00667a   a63a     btfss	0x3a, 0x3, 0       
00667c   1f07     comf	0x7, 0x1, 0x1       
00667e   a632     btfss	0x32, 0x3, 0       
006680   3a07     swapf	0x7, 0x1, 0            data 0x3A07, 0x07A5, 0x321F, 0x07A5 ; 6680
006682   07a5     decf	0xa5, 0x1, 0x1      
006684   321f     rrcf	0x1f, 0x1, 0        
006686   07a5     decf	0xa5, 0x1, 0x1      
006688   1e38     comf	0x38, 0x1, 0            data 0x1E38, 0xA03A, 0x1F07, 0xA032 ; 6688
00668a   a03a     btfss	0x3a, 0, 0         
00668c   1f07     comf	0x7, 0x1, 0x1       
00668e   a032     btfss	0x32, 0, 0         
006690   3a07     swapf	0x7, 0x1, 0            data 0x3A07, 0x079F, 0x321F, 0x079F ; 6690
006692   079f     decf	0x9f, 0x1, 0x1      
006694   321f     rrcf	0x1f, 0x1, 0        
006696   079f     decf	0x9f, 0x1, 0x1      
006698   9e3a     bcf	0x3a, 0x7, 0             data 0x9E3A, 0x1F07, 0x9E32, 0x3A07 ; 6698
00669a   1f07     comf	0x7, 0x1, 0x1       
00669c   9e32     bcf	0x32, 0x7, 0         
00669e   3a07     swapf	0x7, 0x1, 0        
0066a0   079d     decf	0x9d, 0x1, 0x1          data 0x079D, 0x321F, 0x079D, 0x9018 ; 66A0
0066a2   321f     rrcf	0x1f, 0x1, 0        
0066a4   079d     decf	0x9d, 0x1, 0x1      
0066a6   9018     bcf	0x18, 0, 0           
0066a8   d1c1     bra	0x6a2c                   data 0xD1C1, 0xAFE1, 0x3AC9, 0x07A0 ; 66A8
0066aa   afe1     btfss	0xe1, 0x7, 0x1     
0066ac   3ac9     swapf	0xc9, 0x1, 0       
0066ae   07a0     decf	0xa0, 0x1, 0x1      
0066b0   7fcb     btg	0xcb, 0x7, 0x1           data 0x7FCB, 0x1A28, 0x992A, 0x2207 ; 66B0
0066b2   1a28     xorwf	0x28, 0x1, 0       
0066b4   992a     bcf	0x2a, 0x4, 0x1       
0066b6   2207     addwfc	0x7, 0x1, 0       
0066b8   07a1     decf	0xa1, 0x1, 0x1          data 0x07A1, 0x9B2A, 0x2207, 0x07A3 ; 66B8
0066ba   9b2a     bcf	0x2a, 0x5, 0x1       
0066bc   2207     addwfc	0x7, 0x1, 0       
0066be   07a3     decf	0xa3, 0x1, 0x1      
0066c0   0021     dw	0x21  ;unknown opcode     data 0x0021, 0x2200, 0x0799, 0x9B22 ; 66C0
0066c2   2200     addwfc	0, 0x1, 0         
0066c4   0799     decf	0x99, 0x1, 0x1      
0066c6   9b22     bcf	0x22, 0x5, 0x1       
0066c8   c107     movff	0x107, 0x1d1           data 0xC107, 0xE1D1, 0xC9AF, 0xFF21 ; 66C8
0066ca   e1d1
0066cc   c9af     movff	0x9af, 0xf21       
0066ce   ff21
0066d0   22ff     addwfc	0xff, 0x1, 0          data 0x22FF, 0x0799, 0x9B22, 0x2207 ; 66D0
0066d2   0799     decf	0x99, 0x1, 0x1      
0066d4   9b22     bcf	0x22, 0x5, 0x1       
0066d6   2207     addwfc	0x7, 0x1, 0       
0066d8   07a1     decf	0xa1, 0x1, 0x1          data 0x07A1, 0xA322, 0xC107, 0xE1D1 ; 66D8
0066da   a322     btfss	0x22, 0x1, 0x1     
0066dc   c107     movff	0x107, 0x1d1       
0066de   e1d1
0066e0   ff3e     dw	0xff3e  ;unknown opcode     data 0xFF3E, 0xC937, 0xC5F5, 0x0801 ; 66E0
0066e2   c937     movff	0x937, 0x5f5       
0066e4   c5f5
0066e6   0801     sublw	0x1                
0066e8   3e00     incfsz	0, 0x1, 0             data 0x3E00, 0x1800, 0xF507, 0x01C5 ; 66E8
0066ea   1800     xorwf	0, 0, 0            
0066ec   f507     dw	0xf507  ;unknown opcode 
0066ee   01c5     movlb	0xc5               
0066f0   0004     clrwdt                       data 0x0004, 0x003E, 0xA1ED, 0x0820 ; 66F0
0066f2   003e     dw	0x3e  ;unknown opcode 
0066f4   a1ed     btfss	0xed, 0, 0x1       
0066f6   0820     sublw	0x20               
0066f8   f4ea     dw	0xf4ea  ;unknown opcode     data 0xF4EA, 0xC106, 0xF6F1, 0xC902 ; 66F8
0066fa   c106     movff	0x106, 0x6f1       
0066fc   f6f1
0066fe   c902     movff	0x902, 0x1c1       
006700   f1c1
006700   f1c1     dw	0xf1c1  ;unknown opcode     data 0xF1C1, 0xFDE6, 0xC5C9, 0xE5DD ; 6700
006702   fde6     dw	0xfde6  ;unknown opcode 
006704   c5c9     movff	0x5c9, 0x5dd       
006706   e5dd
006708   3e47     incfsz	0x47, 0x1, 0          data 0x3E47, 0x9004, 0xDD4F, 0x9D21 ; 6708
00670a   9004     bcf	0x4, 0, 0            
00670c   dd4f     rcall	0x61ac             
00670e   9d21     bcf	0x21, 0x6, 0x1       
006710   7e07     btg	0x7, 0x7, 0              data 0x7E07, 0x77DD, 0xDD00, 0x2323 ; 6710
006712   77dd     btg	0xdd, 0x3, 0x1       
006714   dd00     rcall	0x6116             
006716   2323     addwfc	0x23, 0x1, 0x1    
006718   f710     dw	0xf710  ;unknown opcode     data 0xF710, 0x003E, 0x28A9, 0x410A ; 6718
00671a   003e     dw	0x3e  ;unknown opcode 
00671c   28a9     incf	0xa9, 0, 0          
00671e   410a     rrncf	0xa, 0, 0x1        
006720   003e     dw	0x3e  ;unknown opcode     data 0x003E, 0x77DD, 0xDD00, 0x1023 ; 6720
006722   77dd     btg	0xdd, 0x3, 0x1       
006724   dd00     rcall	0x6126             
006726   1023     iorwf	0x23, 0, 0         
006728   3ef9     incfsz	0xf9, 0x1, 0          data 0x3EF9, 0x0600, 0xDD08, 0x0077 ; 6728
00672a   0600     decf	0, 0x1, 0           
00672c   dd08     rcall	0x613e             
00672e   0077     dw	0x77  ;unknown opcode 
006730   23dd     addwfc	0xdd, 0x1, 0x1        data 0x23DD, 0xF910, 0x2006, 0x9D21 ; 6730
006732   f910     dw	0xf910  ;unknown opcode 
006734   2006     addwfc	0x6, 0, 0         
006736   9d21     bcf	0x21, 0x6, 0x1       
006738   c507     movff	0x507, 0x6e5           data 0xC507, 0x06E5, 0x7E09, 0x7717 ; 6738
00673a   06e5
00673c   7e09     btg	0x9, 0x7, 0          
00673e   7717     btg	0x17, 0x3, 0x1       
006740   1023     iorwf	0x23, 0, 0             data 0x1023, 0xE1FA, 0xC5C1, 0x78E5 ; 6740
006742   e1fa     bnz	0x6738               
006744   c5c1     movff	0x5c1, 0x8e5       
006746   78e5
006748   01ee     movlb	0xee                   data 0x01EE, 0x91CA, 0x3E07, 0x8504 ; 6748
00674a   91ca     bcf	0xca, 0, 0x1         
00674c   3e07     incfsz	0x7, 0x1, 0       
00674e   8504     bsf	0x4, 0x2, 0x1        
006750   0130     movlb	0x30                   data 0x0130, 0x6F24, 0x0506, 0xE67E ; 6750
006752   6f24     movwf	0x24, 0x1          
006754   0506     decf	0x6, 0, 0x1         
006756   e67e     bn	0x6854                
006758   d60f     bra	0x6378                   data 0xD60F, 0xFA05, 0x0772, 0xC5E5 ; 6758
00675a   fa05     dw	0xfa05  ;unknown opcode 
00675c   0772     decf	0x72, 0x1, 0x1      
00675e   c5e5     movff	0x5e5, 0x33e       
006760   033e
006760   033e     mulwf	0x3e, 0x1              data 0x033E, 0x7786, 0x0A30, 0x0523 ; 6760
006762   7786     btg	0x86, 0x3, 0x1       
006764   0a30     xorlw	0x30               
006766   0523     decf	0x23, 0, 0x1        
006768   0628     decf	0x28, 0x1, 0            data 0x0628, 0xC67E, 0x7701, 0xF418 ; 6768
00676a   c67e     movff	0x67e, 0x701       
00676c   7701
00676e   f418     dw	0xf418  ;unknown opcode 
006770   e1c1     bnz	0x66f4                   data 0xE1C1, 0xE67E, 0xD6F0, 0xFA50 ; 6770
006772   e67e     bn	0x6870                
006774   d6f0     bra	0x6556               
006776   fa50     dw	0xfa50  ;unknown opcode 
006778   078e     decf	0x8e, 0x1, 0x1          data 0x078E, 0xC5E5, 0x303E, 0x7786 ; 6778
00677a   c5e5     movff	0x5e5, 0x3e        
00677c   303e
00677e   7786     btg	0x86, 0x3, 0x1       
006780   0a30     xorlw	0x30                   data 0x0A30, 0x0523, 0x0628, 0xC67E ; 6780
006782   0523     decf	0x23, 0, 0x1        
006784   0628     decf	0x28, 0x1, 0        
006786   c67e     movff	0x67e, 0x701       
006788   7701
006788   7701     btg	0x1, 0x3, 0x1            data 0x7701, 0xF418, 0xE1C1, 0x1023 ; 6788
00678a   f418     dw	0xf418  ;unknown opcode 
00678c   e1c1     bnz	0x6710               
00678e   1023     iorwf	0x23, 0, 0         
006790   e1c5     bnz	0x671c                   data 0xE1C5, 0x10C1, 0xDDA4, 0xC1E1 ; 6790
006792   10c1     iorwf	0xc1, 0, 0         
006794   dda4     rcall	0x62de             
006796   c1e1     movff	0x1e1, 0xc9        
006798   00c9
006798   00c9     dw	0xc9  ;unknown opcode     data 0x00C9, 0x0000, 0x0000, 0x0000 ; 6798
00679a   0000     nop                      
00679c   0000     nop                      
00679e   0000     nop                      
0067a0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 67A0
0067a2   0000     nop                      
0067a4   0000     nop                      
0067a6   0000     nop                      
0067a8   0000     nop                          data 0x0000, 0x213E, 0x82CD, 0xCD01 ; 67A8
0067aa   213e     addwfc	0x3e, 0, 0x1      
0067ac   82cd     bsf	0xcd, 0x1, 0         
0067ae   cd01     movff	0xd01, 0x161       
0067b0   0161
0067b0   0161     movlb	0x61                   data 0x0161, 0x61CD, 0xCB01, 0xC277 ; 67B0
0067b2   61cd     cpfslt	0xcd, 0x1         
0067b4   cb01     movff	0xb01, 0x277       
0067b6   c277
0067b8   0869     sublw	0x69                   data 0x0869, 0x653A, 0xE60A, 0x32FE ; 67B8
0067ba   653a     cpfsgt	0x3a, 0x1         
0067bc   e60a     bn	0x67d2                
0067be   32fe     rrcf	0xfe, 0x1, 0        
0067c0   0a65     xorlw	0x65                   data 0x0A65, 0x61CD, 0xCD01, 0x0161 ; 67C0
0067c2   61cd     cpfslt	0xcd, 0x1         
0067c4   cd01     movff	0xd01, 0x161       
0067c6   0161
0067c8   61cd     cpfslt	0xcd, 0x1             data 0x61CD, 0xCD01, 0x0161, 0x61CD ; 67C8
0067ca   cd01     movff	0xd01, 0x161       
0067cc   0161
0067ce   61cd     cpfslt	0xcd, 0x1         
0067d0   e601     bn	0x67d4                    data 0xE601, 0x320F, 0x0A6B, 0x61CD ; 67D0
0067d2   320f     rrcf	0xf, 0x1, 0         
0067d4   0a6b     xorlw	0x6b               
0067d6   61cd     cpfslt	0xcd, 0x1         
0067d8   e601     bn	0x67dc                    data 0xE601, 0x0703, 0x4F07, 0x61CD ; 67D8
0067da   0703     decf	0x3, 0x1, 0x1       
0067dc   4f07     dcfsnz	0x7, 0x1, 0x1     
0067de   61cd     cpfslt	0xcd, 0x1         
0067e0   0701     decf	0x1, 0x1, 0x1           data 0x0701, 0x0230, 0xC9CB, 0x3007 ; 67E0
0067e2   0230     mulwf	0x30, 0            
0067e4   c9cb     movff	0x9cb, 0x7         
0067e6   3007
0067e8   cb02     movff	0xb02, 0x6c1           data 0xCB02, 0xE6C1, 0x577C, 0x61CD ; 67E8
0067ea   e6c1
0067ec   577c     subfwb	0x7c, 0x1, 0x1    
0067ee   61cd     cpfslt	0xcd, 0x1         
0067f0   e601     bn	0x67f4                    data 0xE601, 0x07C0, 0xB207, 0x6732 ; 67F0
0067f2   07c0     decf	0xc0, 0x1, 0x1      
0067f4   b207     btfsc	0x7, 0x1, 0        
0067f6   6732     tstfsz	0x32, 0x1         
0067f8   790a     btg	0xa, 0x4, 0x1            data 0x790A, 0x6832, 0xCD0A, 0x0161 ; 67F8
0067fa   6832     setf	0x32, 0             
0067fc   cd0a     movff	0xd0a, 0x161       
0067fe   0161
006800   03e6     mulwf	0xe6, 0x1              data 0x03E6, 0x4F07, 0x61CD, 0xE601 ; 6800
006802   4f07     dcfsnz	0x7, 0x1, 0x1     
006804   61cd     cpfslt	0xcd, 0x1         
006806   e601     bn	0x680a                
006808   2880     incf	0x80, 0, 0              data 0x2880, 0xCB02, 0x79C1, 0x02C6 ; 6808
00680a   cb02     movff	0xb02, 0x9c1       
00680c   79c1
00680e   02c6     mulwf	0xc6, 0            
006810   6a32     clrf	0x32, 0                 data 0x6A32, 0x4F0A, 0x673A, 0x320A ; 6810
006812   4f0a     dcfsnz	0xa, 0x1, 0x1     
006814   673a     tstfsz	0x3a, 0x1         
006816   320a     rrcf	0xa, 0x1, 0         
006818   0799     decf	0x99, 0x1, 0x1          data 0x0799, 0x683A, 0x320A, 0x079A ; 6818
00681a   683a     setf	0x3a, 0             
00681c   320a     rrcf	0xa, 0x1, 0         
00681e   079a     decf	0x9a, 0x1, 0x1      
006820   003e     dw	0x3e  ;unknown opcode     data 0x003E, 0x9B32, 0x3207, 0x079C ; 6820
006822   9b32     bcf	0x32, 0x5, 0x1       
006824   3207     rrcf	0x7, 0x1, 0         
006826   079c     decf	0x9c, 0x1, 0x1      
006828   a032     btfss	0x32, 0, 0             data 0xA032, 0x3207, 0x079F, 0x9E32 ; 6828
00682a   3207     rrcf	0x7, 0x1, 0         
00682c   079f     decf	0x9f, 0x1, 0x1      
00682e   9e32     bcf	0x32, 0x7, 0         
006830   3e07     incfsz	0x7, 0x1, 0           data 0x3E07, 0x3201, 0x079D, 0x47CD ; 6830
006832   3201     rrcf	0x1, 0x1, 0         
006834   079d     decf	0x9d, 0x1, 0x1      
006836   47cd     rlncf	0xcd, 0x1, 0x1     
006838   3a05     swapf	0x5, 0x1, 0            data 0x3A05, 0x0A6B, 0xD681, 0xCD09 ; 6838
00683a   0a6b     xorlw	0x6b               
00683c   d681     bra	0x6540               
00683e   cd09     movff	0xd09, 0x525       
006840   0525
006840   0525     decf	0x25, 0, 0x1            data 0x0525, 0x993A, 0x3207, 0x0A67 ; 6840
006842   993a     bcf	0x3a, 0x4, 0x1       
006844   3207     rrcf	0x7, 0x1, 0         
006846   0a67     xorlw	0x67               
006848   9a3a     bcf	0x3a, 0x5, 0             data 0x9A3A, 0x3207, 0x0A68, 0x9B3A ; 6848
00684a   3207     rrcf	0x7, 0x1, 0         
00684c   0a68     xorlw	0x68               
00684e   9b3a     bcf	0x3a, 0x5, 0x1       
006850   3207     rrcf	0x7, 0x1, 0             data 0x3207, 0x0A69, 0x003E, 0x6A32 ; 6850
006852   0a69     xorlw	0x69               
006854   003e     dw	0x3e  ;unknown opcode 
006856   6a32     clrf	0x32, 0             
006858   cd0a     movff	0xd0a, 0x161           data 0xCD0A, 0x0161, 0x61CD, 0xCD01 ; 6858
00685a   0161
00685c   61cd     cpfslt	0xcd, 0x1         
00685e   cd01     movff	0xd01, 0x161       
006860   0161
006860   0161     movlb	0x61                   data 0x0161, 0x61CD, 0xCD01, 0x0161 ; 6860
006862   61cd     cpfslt	0xcd, 0x1         
006864   cd01     movff	0xd01, 0x161       
006866   0161
006868   3ac9     swapf	0xc9, 0x1, 0           data 0x3AC9, 0x0A65, 0x01F6, 0x6532 ; 6868
00686a   0a65     xorlw	0x65               
00686c   01f6     movlb	0xf6               
00686e   6532     cpfsgt	0x32, 0x1         
006870   cd0a     movff	0xd0a, 0x161           data 0xCD0A, 0x0161, 0x61CD, 0xCD01 ; 6870
006872   0161
006874   61cd     cpfslt	0xcd, 0x1         
006876   cd01     movff	0xd01, 0x161       
006878   0161
006878   0161     movlb	0x61                   data 0x0161, 0x61CD, 0xCD01, 0x0161 ; 6878
00687a   61cd     cpfslt	0xcd, 0x1         
00687c   cd01     movff	0xd01, 0x161       
00687e   0161
006880   0fe6     addlw	0xe6                   data 0x0FE6, 0x6B32, 0xCD0A, 0x0161 ; 6880
006882   6b32     clrf	0x32, 0x1           
006884   cd0a     movff	0xd0a, 0x161       
006886   0161
006888   61cd     cpfslt	0xcd, 0x1             data 0x61CD, 0xE601, 0x323F, 0x079B ; 6888
00688a   e601     bn	0x688e                
00688c   323f     rrcf	0x3f, 0x1, 0        
00688e   079b     decf	0x9b, 0x1, 0x1      
006890   61cd     cpfslt	0xcd, 0x1             data 0x61CD, 0x3201, 0x079A, 0x61CD ; 6890
006892   3201     rrcf	0x1, 0x1, 0         
006894   079a     decf	0x9a, 0x1, 0x1      
006896   61cd     cpfslt	0xcd, 0x1         
006898   3201     rrcf	0x1, 0x1, 0             data 0x3201, 0x0799, 0x003E, 0x9C32 ; 6898
00689a   0799     decf	0x99, 0x1, 0x1      
00689c   003e     dw	0x3e  ;unknown opcode 
00689e   9c32     bcf	0x32, 0x6, 0         
0068a0   3207     rrcf	0x7, 0x1, 0             data 0x3207, 0x07A0, 0x9F32, 0x3207 ; 68A0
0068a2   07a0     decf	0xa0, 0x1, 0x1      
0068a4   9f32     bcf	0x32, 0x7, 0x1       
0068a6   3207     rrcf	0x7, 0x1, 0         
0068a8   079e     decf	0x9e, 0x1, 0x1          data 0x079E, 0x013E, 0x9D32, 0xCD07 ; 68A8
0068aa   013e     movlb	0x3e               
0068ac   9d32     bcf	0x32, 0x6, 0x1       
0068ae   cd07     movff	0xd07, 0x547       
0068b0   0547
0068b0   0547     decf	0x47, 0, 0x1            data 0x0547, 0x023E, 0x25CD, 0x3E05 ; 68B0
0068b2   023e     mulwf	0x3e, 0            
0068b4   25cd     addwf	0xcd, 0, 0x1       
0068b6   3e05     incfsz	0x5, 0x1, 0       
0068b8   3200     rrcf	0, 0x1, 0               data 0x3200, 0x0A67, 0x993A, 0x3207 ; 68B8
0068ba   0a67     xorlw	0x67               
0068bc   993a     bcf	0x3a, 0x4, 0x1       
0068be   3207     rrcf	0x7, 0x1, 0         
0068c0   0a68     xorlw	0x68                   data 0x0A68, 0x9A3A, 0x3207, 0x0A69 ; 68C0
0068c2   9a3a     bcf	0x3a, 0x5, 0         
0068c4   3207     rrcf	0x7, 0x1, 0         
0068c6   0a69     xorlw	0x69               
0068c8   9b3a     bcf	0x3a, 0x5, 0x1           data 0x9B3A, 0x3207, 0x0A6A, 0x61CD ; 68C8
0068ca   3207     rrcf	0x7, 0x1, 0         
0068cc   0a6a     xorlw	0x6a               
0068ce   61cd     cpfslt	0xcd, 0x1         
0068d0   cd01     movff	0xd01, 0x161           data 0xCD01, 0x0161, 0x61CD, 0xCD01 ; 68D0
0068d2   0161
0068d4   61cd     cpfslt	0xcd, 0x1         
0068d6   cd01     movff	0xd01, 0x161       
0068d8   0161
0068d8   0161     movlb	0x61                   data 0x0161, 0x61CD, 0xCD01, 0x0161 ; 68D8
0068da   61cd     cpfslt	0xcd, 0x1         
0068dc   cd01     movff	0xd01, 0x161       
0068de   0161
0068e0   f5c9     dw	0xf5c9  ;unknown opcode     data 0xF5C9, 0xE5C5, 0x6C21, 0x3A0A ; 68E0
0068e2   e5c5     bnov	0x686e              
0068e4   6c21     negf	0x21, 0             
0068e6   3a0a     swapf	0xa, 0x1, 0        
0068e8   0a65     xorlw	0x65                   data 0x0A65, 0x01E6, 0x1E20, 0x32AF ; 68E8
0068ea   01e6     movlb	0xe6               
0068ec   1e20     comf	0x20, 0x1, 0        
0068ee   32af     rrcf	0xaf, 0x1, 0        
0068f0   0a70     xorlw	0x70                   data 0x0A70, 0x3F37, 0x6C3A, 0x170A ; 68F0
0068f2   3f37     incfsz	0x37, 0x1, 0x1    
0068f4   6c3a     negf	0x3a, 0             
0068f6   170a     andwf	0xa, 0x1, 0x1      
0068f8   7132     btg	0x32, 0, 0x1             data 0x7132, 0x3A0A, 0x0A6D, 0x3217 ; 68F8
0068fa   3a0a     swapf	0xa, 0x1, 0        
0068fc   0a6d     xorlw	0x6d               
0068fe   3217     rrcf	0x17, 0x1, 0        
006900   0a72     xorlw	0x72                   data 0x0A72, 0x6E3A, 0x170A, 0x7332 ; 6900
006902   6e3a     movwf	0x3a, 0            
006904   170a     andwf	0xa, 0x1, 0x1      
006906   7332     btg	0x32, 0x1, 0x1       
006908   210a     addwfc	0xa, 0, 0x1           data 0x210A, 0x0A70, 0x223E, 0x82CD ; 6908
00690a   0a70     xorlw	0x70               
00690c   223e     addwfc	0x3e, 0x1, 0      
00690e   82cd     bsf	0xcd, 0x1, 0         
006910   0601     decf	0x1, 0x1, 0             data 0x0601, 0x7E04, 0x82CD, 0x2301 ; 6910
006912   7e04     btg	0x4, 0x7, 0          
006914   82cd     bsf	0xcd, 0x1, 0         
006916   2301     addwfc	0x1, 0x1, 0x1     
006918   f910     dw	0xf910  ;unknown opcode     data 0xF910, 0x61CD, 0x3201, 0x0A66 ; 6918
00691a   61cd     cpfslt	0xcd, 0x1         
00691c   3201     rrcf	0x1, 0x1, 0         
00691e   0a66     xorlw	0x66               
006920   0001     dw	0x1  ;unknown opcode      data 0x0001, 0xE102, 0x7ECD, 0xCD09 ; 6920
006922   e102     bnz	0x6928               
006924   7ecd     btg	0xcd, 0x7, 0         
006926   cd09     movff	0xd09, 0x161       
006928   0161
006928   0161     movlb	0x61                   data 0x0161, 0x61CD, 0x3A01, 0x0A66 ; 6928
00692a   61cd     cpfslt	0xcd, 0x1         
00692c   3a01     swapf	0x1, 0x1, 0        
00692e   0a66     xorlw	0x66               
006930   4ffe     dcfsnz	0xfe, 0x1, 0x1        data 0x4FFE, 0x0428, 0xF1C1, 0xC937 ; 6930
006932   0428     decf	0x28, 0, 0          
006934   f1c1     dw	0xf1c1  ;unknown opcode 
006936   c937     movff	0x937, 0x1c1       
006938   f1c1
006938   f1c1     dw	0xf1c1  ;unknown opcode     data 0xF1C1, 0x3F37, 0x21C9, 0x0A56 ; 6938
00693a   3f37     incfsz	0x37, 0x1, 0x1    
00693c   21c9     addwfc	0xc9, 0, 0x1      
00693e   0a56     xorlw	0x56               
006940   e9cd     dw	0xe9cd  ;unknown opcode     data 0xE9CD, 0x2101, 0x0A6C, 0x083E ; 6940
006942   2101     addwfc	0x1, 0, 0x1       
006944   0a6c     xorlw	0x6c               
006946   083e     sublw	0x3e               
006948   0fcd     addlw	0xcd                   data 0x0FCD, 0x3E02, 0xD30A, 0x2105 ; 6948
00694a   3e02     incfsz	0x2, 0x1, 0       
00694c   d30a     bra	0x6f62               
00694e   2105     addwfc	0x5, 0, 0x1       
006950   7e00     btg	0, 0x7, 0                data 0x7E00, 0x663A, 0xFE0A, 0xCA45 ; 6950
006952   663a     tstfsz	0x3a, 0           
006954   fe0a     dw	0xfe0a  ;unknown opcode 
006956   ca45     movff	0xa45, 0x9a1       
006958   09a1
006958   09a1     iorlw	0xa1                   data 0x09A1, 0x54FE, 0xC2CA, 0x0109 ; 6958
00695a   54fe     subfwb	0xfe, 0, 0        
00695c   c2ca     movff	0x2ca, 0x109       
00695e   0109
006960   0200     mulwf	0, 0                   data 0x0200, 0x023E, 0x0FCD, 0x3E02 ; 6960
006962   023e     mulwf	0x3e, 0            
006964   0fcd     addlw	0xcd               
006966   3e02     incfsz	0x2, 0x1, 0       
006968   d320     bra	0x6faa                   data 0xD320, 0x2305, 0x3E0B, 0xA11F ; 6968
00696a   2305     addwfc	0x5, 0x1, 0x1     
00696c   3e0b     incfsz	0xb, 0x1, 0       
00696e   a11f     btfss	0x1f, 0, 0x1       
006970   0420     decf	0x20, 0, 0              data 0x0420, 0x0A3E, 0x05D3, 0xA8AF ; 6970
006972   0a3e     xorlw	0x3e               
006974   05d3     decf	0xd3, 0, 0x1        
006976   a8af     btfss	0xaf, 0x4, 0       
006978   e820     dw	0xe820  ;unknown opcode     data 0xE820, 0x20A9, 0xC9E5, 0x61CD ; 6978
00697a   20a9     addwfc	0xa9, 0, 0        
00697c   c9e5     movff	0x9e5, 0x1cd       
00697e   61cd
006980   7701     btg	0x1, 0x3, 0x1            data 0x7701, 0x0B23, 0x11E5, 0x8000 ; 6980
006982   0b23     andlw	0x23               
006984   11e5     iorwf	0xe5, 0, 0x1       
006986   8000     bsf	0, 0, 0              
006988   edaf     call	0x2a55e, 0x1            data 0xEDAF, 0xE152, 0x0B30, 0x20A8 ; 6988
00698a   e152
00698c   0b30     andlw	0x30               
00698e   20a8     addwfc	0xa8, 0, 0        
006990   a9ed     btfss	0xed, 0x4, 0x1         data 0xA9ED, 0xEA20, 0xCDC9, 0x0161 ; 6990
006992   ea20     dw	0xea20  ;unknown opcode 
006994   cdc9     movff	0xdc9, 0x161       
006996   0161
006998   af0b     btfss	0xb, 0x7, 0x1          data 0xAF0B, 0x20A8, 0xA9F8, 0xF520 ; 6998
00699a   20a8     addwfc	0xa8, 0, 0        
00699c   a9f8     btfss	0xf8, 0x4, 0x1     
00699e   f520     dw	0xf520  ;unknown opcode 
0069a0   21c9     addwfc	0xc9, 0, 0x1          data 0x21C9, 0x09EA, 0xE9CD, 0x2101 ; 69A0
0069a2   09ea     iorlw	0xea               
0069a4   e9cd     dw	0xe9cd  ;unknown opcode 
0069a6   2101     addwfc	0x1, 0, 0x1       
0069a8   7e01     btg	0x1, 0x7, 0              data 0x7E01, 0x023E, 0x0FCD, 0x2102 ; 69A8
0069aa   023e     mulwf	0x3e, 0            
0069ac   0fcd     addlw	0xcd               
0069ae   2102     addwfc	0x2, 0, 0x1       
0069b0   0a07     xorlw	0x7                    data 0x0A07, 0xE9CD, 0x2101, 0x7E02 ; 69B0
0069b2   e9cd     dw	0xe9cd  ;unknown opcode 
0069b4   2101     addwfc	0x1, 0, 0x1       
0069b6   7e02     btg	0x2, 0x7, 0          
0069b8   023e     mulwf	0x3e, 0                data 0x023E, 0x0FCD, 0x3E02, 0xD30A ; 69B8
0069ba   0fcd     addlw	0xcd               
0069bc   3e02     incfsz	0x2, 0x1, 0       
0069be   d30a     bra	0x6fd4               
0069c0   c905     movff	0x905, 0x321           data 0xC905, 0x1321, 0xCD0A, 0x01E9 ; 69C0
0069c2   1321
0069c4   cd0a     movff	0xd0a, 0x1e9       
0069c6   01e9
0069c8   0121     movlb	0x21                   data 0x0121, 0x3E7E, 0xCD02, 0x020F ; 69C8
0069ca   3e7e     incfsz	0x7e, 0x1, 0      
0069cc   cd02     movff	0xd02, 0x20f       
0069ce   020f
0069d0   3121     rrcf	0x21, 0, 0x1            data 0x3121, 0xCD0A, 0x01E9, 0x0221 ; 69D0
0069d2   cd0a     movff	0xd0a, 0x1e9       
0069d4   01e9
0069d6   0221     mulwf	0x21, 0            
0069d8   3e7e     incfsz	0x7e, 0x1, 0          data 0x3E7E, 0xCD02, 0x020F, 0x0A3E ; 69D8
0069da   cd02     movff	0xd02, 0x20f       
0069dc   020f
0069de   0a3e     xorlw	0x3e               
0069e0   05d3     decf	0xd3, 0, 0x1            data 0x05D3, 0x21C9, 0x0A42, 0xE9CD ; 69E0
0069e2   21c9     addwfc	0xc9, 0, 0x1      
0069e4   0a42     xorlw	0x42               
0069e6   e9cd     dw	0xe9cd  ;unknown opcode 
0069e8   c901     movff	0x901, 0x944           data 0xC901, 0x6944, 0x6B73, 0x6320 ; 69E8
0069ea   6944
0069ec   6b73     clrf	0x73, 0x1           
0069ee   6320     cpfseq	0x20, 0x1         
0069f0   6d6f     negf	0x6f, 0x1               data 0x6D6F, 0x616D, 0x646E, 0x6520 ; 69F0
0069f2   616d     cpfslt	0x6d, 0x1         
0069f4   646e     cpfsgt	0x6e, 0           
0069f6   6520     cpfsgt	0x20, 0x1         
0069f8   7272     btg	0x72, 0x1, 0             data 0x7272, 0x726F, 0x202C, 0x6F43 ; 69F8
0069fa   726f     btg	0x6f, 0x1, 0         
0069fc   202c     addwfc	0x2c, 0, 0        
0069fe   6f43     movwf	0x43, 0x1          
006a00   6d6d     negf	0x6d, 0x1               data 0x6D6D, 0x6E61, 0x2064, 0x2C00 ; 6A00
006a02   6e61     movwf	0x61, 0            
006a04   2064     addwfc	0x64, 0, 0        
006a06   2c00     decfsz	0, 0, 0           
006a08   5220     movf	0x20, 0x1, 0            data 0x5220, 0x7365, 0x6F70, 0x736E ; 6A08
006a0a   7365     btg	0x65, 0x1, 0x1       
006a0c   6f70     movwf	0x70, 0x1          
006a0e   736e     btg	0x6e, 0x1, 0x1       
006a10   2065     addwfc	0x65, 0, 0            data 0x2065, 0x4400, 0x7369, 0x206B ; 6A10
006a12   4400     rlncf	0, 0, 0            
006a14   7369     btg	0x69, 0x1, 0x1       
006a16   206b     addwfc	0x6b, 0, 0        
006a18   6361     cpfseq	0x61, 0x1             data 0x6361, 0x6563, 0x7373, 0x7420 ; 6A18
006a1a   6563     cpfsgt	0x63, 0x1         
006a1c   7373     btg	0x73, 0x1, 0x1       
006a1e   7420     btg	0x20, 0x2, 0         
006a20   6d69     negf	0x69, 0x1               data 0x6D69, 0x6F65, 0x7475, 0x202C ; 6A20
006a22   6f65     movwf	0x65, 0x1          
006a24   7475     btg	0x75, 0x2, 0         
006a26   202c     addwfc	0x2c, 0, 0        
006a28   6f43     movwf	0x43, 0x1              data 0x6F43, 0x6D6D, 0x6E61, 0x2064 ; 6A28
006a2a   6d6d     negf	0x6d, 0x1           
006a2c   6e61     movwf	0x61, 0            
006a2e   2064     addwfc	0x64, 0, 0        
006a30   2c00     decfsz	0, 0, 0               data 0x2C00, 0x4C20, 0x7361, 0x2074 ; 6A30
006a32   4c20     dcfsnz	0x20, 0, 0        
006a34   7361     btg	0x61, 0x1, 0x1       
006a36   2074     addwfc	0x74, 0, 0        
006a38   6552     cpfsgt	0x52, 0x1             data 0x6552, 0x7073, 0x6E6F, 0x6573 ; 6A38
006a3a   7073     btg	0x73, 0, 0           
006a3c   6e6f     movwf	0x6f, 0            
006a3e   6573     cpfsgt	0x73, 0x1         
006a40   0020     dw	0x20  ;unknown opcode     data 0x0020, 0x6E55, 0x6E6B, 0x776F ; 6A40
006a42   6e55     movwf	0x55, 0            
006a44   6e6b     movwf	0x6b, 0            
006a46   776f     btg	0x6f, 0x3, 0x1       
006a48   206e     addwfc	0x6e, 0, 0            data 0x206E, 0x6964, 0x6B73, 0x6520 ; 6A48
006a4a   6964     setf	0x64, 0x1           
006a4c   6b73     clrf	0x73, 0x1           
006a4e   6520     cpfsgt	0x20, 0x1         
006a50   7272     btg	0x72, 0x1, 0             data 0x7272, 0x726F, 0x000A, 0x6F4C ; 6A50
006a52   726f     btg	0x6f, 0x1, 0         
006a54   000a     tblrd	*-                 
006a56   6f4c     movwf	0x4c, 0x1          
006a58   6461     cpfsgt	0x61, 0               data 0x6461, 0x6E69, 0x2067, 0x6C62 ; 6A58
006a5a   6e69     movwf	0x69, 0            
006a5c   2067     addwfc	0x67, 0, 0        
006a5e   6c62     negf	0x62, 0             
006a60   636f     cpfseq	0x6f, 0x1             data 0x636F, 0x206B, 0x0000, 0x0000 ; 6A60
006a62   206b     addwfc	0x6b, 0, 0        
006a64   0000     nop                      
006a66   0000     nop                      
006a68   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6A68
006a6a   0000     nop                      
006a6c   0000     nop                      
006a6e   0000     nop                      
006a70   0000     nop                          data 0x0000, 0x0000, 0xD5E5, 0xF5C5 ; 6A70
006a72   0000     nop                      
006a74   d5e5     bra	0x6640               
006a76   f5c5     dw	0xf5c5  ;unknown opcode 
006a78   0021     dw	0x21  ;unknown opcode     data 0x0021, 0xCD7E, 0x08E1, 0x04DA ; 6A78
006a7a   cd7e     movff	0xd7e, 0x8e1       
006a7c   08e1
006a7e   04da     decf	0xda, 0, 0          
006a80   3a0c     swapf	0xc, 0x1, 0            data 0x3A0C, 0x7E0D, 0x0B32, 0x2A0E ; 6A80
006a82   7e0d     btg	0xd, 0x7, 0          
006a84   0b32     andlw	0x32               
006a86   2a0e     incf	0xe, 0x1, 0         
006a88   7e0e     btg	0xe, 0x7, 0              data 0x7E0E, 0x1622, 0x3A0E, 0x7E10 ; 6A88
006a8a   1622     andwf	0x22, 0x1, 0       
006a8c   3a0e     swapf	0xe, 0x1, 0        
006a8e   7e10     btg	0x10, 0x7, 0         
006a90   1132     iorwf	0x32, 0, 0x1           data 0x1132, 0x2A0E, 0x7E11, 0x0F7C ; 6A90
006a92   2a0e     incf	0xe, 0x1, 0         
006a94   7e11     btg	0x11, 0x7, 0         
006a96   0f7c     addlw	0x7c               
006a98   0f0f     addlw	0xf                    data 0x0F0F, 0x570F, 0xF0E6, 0x7A5F ; 6A98
006a9a   570f     subfwb	0xf, 0x1, 0x1     
006a9c   f0e6     dw	0xf0e6  ;unknown opcode 
006a9e   7a5f     btg	0x5f, 0x5, 0         
006aa0   0fe6     addlw	0xe6                   data 0x0FE6, 0x7D57, 0xF0E6, 0x0F0F ; 6AA0
006aa2   7d57     btg	0x57, 0x6, 0x1       
006aa4   f0e6     dw	0xf0e6  ;unknown opcode 
006aa6   0f0f     addlw	0xf                
006aa8   0f0f     addlw	0xf                    data 0x0F0F, 0x5FB3, 0xE67D, 0x280F ; 6AA8
006aaa   5fb3     subwf	0xb3, 0x1, 0x1     
006aac   e67d     bn	0x6ba8                
006aae   280f     incf	0xf, 0, 0           
006ab0   1301     iorwf	0x1, 0x1, 0x1          data 0x1301, 0x53ED, 0x0DFF, 0x0011 ; 6AB0
006ab2   53ed     movf	0xed, 0x1, 0x1      
006ab4   0dff     mullw	0xff               
006ab6   0011     retfie	0x1               
006ab8   ed00     call	0x2a600, 0x1            data 0xED00, 0x0153, 0x2A0E, 0x7E13 ; 6AB8
006aba   0153
006abc   2a0e     incf	0xe, 0x1, 0         
006abe   7e13     btg	0x13, 0x7, 0         
006ac0   1822     xorwf	0x22, 0, 0             data 0x1822, 0x210E, 0x0000, 0x1A22 ; 6AC0
006ac2   210e     addwfc	0xe, 0, 0x1       
006ac4   0000     nop                      
006ac6   1a22     xorwf	0x22, 0x1, 0       
006ac8   2a0e     incf	0xe, 0x1, 0             data 0x2A0E, 0x7E16, 0x1222, 0x210E ; 6AC8
006aca   7e16     btg	0x16, 0x7, 0         
006acc   1222     iorwf	0x22, 0x1, 0       
006ace   210e     addwfc	0xe, 0, 0x1       
006ad0   0000     nop                          data 0x0000, 0x1422, 0x210E, 0x0E18 ; 6AD0
006ad2   1422     andwf	0x22, 0, 0         
006ad4   210e     addwfc	0xe, 0, 0x1       
006ad6   0e18     movlw	0x18               
006ad8   003e     dw	0x3e  ;unknown opcode     data 0x003E, 0xA1ED, 0x1020, 0xA1ED ; 6AD8
006ada   a1ed     btfss	0xed, 0, 0x1       
006adc   1020     iorwf	0x20, 0, 0         
006ade   a1ed     btfss	0xed, 0, 0x1       
006ae0   0c20     retlw	0x20                   data 0x0C20, 0x202A, 0x227E, 0x0E18 ; 6AE0
006ae2   202a     addwfc	0x2a, 0, 0        
006ae4   227e     addwfc	0x7e, 0x1, 0      
006ae6   0e18     movlw	0x18               
006ae8   222a     addwfc	0x2a, 0x1, 0          data 0x222A, 0x227E, 0x0E1A, 0x0121 ; 6AE8
006aea   227e     addwfc	0x7e, 0x1, 0      
006aec   0e1a     movlw	0x1a               
006aee   0121     movlb	0x21               
006af0   2200     addwfc	0, 0x1, 0             data 0x2200, 0x0E0C, 0x0021, 0x3200 ; 6AF0
006af2   0e0c     movlw	0xc                
006af4   0021     dw	0x21  ;unknown opcode 
006af6   3200     rrcf	0, 0x1, 0           
006af8   0e0e     movlw	0xe                    data 0x0E0E, 0x003E, 0x1032, 0x3A0E ; 6AF8
006afa   003e     dw	0x3e  ;unknown opcode 
006afc   1032     iorwf	0x32, 0, 0         
006afe   3a0e     swapf	0xe, 0x1, 0        
006b00   0116     movlb	0x16                   data 0x0116, 0x06EE, 0x27CA, 0x2A0B ; 6B00
006b02   06ee     decf	0xee, 0x1, 0        
006b04   27ca     addwf	0xca, 0x1, 0x1     
006b06   2a0b     incf	0xb, 0x1, 0         
006b08   7e24     btg	0x24, 0x7, 0             data 0x7E24, 0x1222, 0x2A0E, 0x7E26 ; 6B08
006b0a   1222     iorwf	0x22, 0x1, 0       
006b0c   2a0e     incf	0xe, 0x1, 0         
006b0e   7e26     btg	0x26, 0x7, 0         
006b10   1422     andwf	0x22, 0, 0             data 0x1422, 0x3A0E, 0x7E28, 0x0FE6 ; 6B10
006b12   3a0e     swapf	0xe, 0x1, 0        
006b14   7e28     btg	0x28, 0x7, 0         
006b16   0fe6     addlw	0xe6               
006b18   1032     iorwf	0x32, 0, 0             data 0x1032, 0x2A0E, 0x7E2C, 0x0C22 ; 6B18
006b1a   2a0e     incf	0xe, 0x1, 0         
006b1c   7e2c     btg	0x2c, 0x7, 0         
006b1e   0c22     retlw	0x22               
006b20   2a0e     incf	0xe, 0x1, 0             data 0x2A0E, 0x7E2E, 0x0E22, 0x2A0E ; 6B20
006b22   7e2e     btg	0x2e, 0x7, 0         
006b24   0e22     movlw	0x22               
006b26   2a0e     incf	0xe, 0x1, 0         
006b28   0e16     movlw	0x16                   data 0x0E16, 0x9922, 0x2107, 0x0000 ; 6B28
006b2a   9922     bcf	0x22, 0x4, 0x1       
006b2c   2107     addwfc	0x7, 0, 0x1       
006b2e   0000     nop                      
006b30   9b22     bcf	0x22, 0x5, 0x1           data 0x9B22, 0x2A07, 0x0A6C, 0x9D22 ; 6B30
006b32   2a07     incf	0x7, 0x1, 0         
006b34   0a6c     xorlw	0x6c               
006b36   9d22     bcf	0x22, 0x6, 0x1       
006b38   2a07     incf	0x7, 0x1, 0             data 0x2A07, 0x0A6E, 0x9F22, 0xCD07 ; 6B38
006b3a   0a6e     xorlw	0x6e               
006b3c   9f22     bcf	0x22, 0x7, 0x1       
006b3e   cd07     movff	0xd07, 0x547       
006b40   0547
006b40   0547     decf	0x47, 0, 0x1            data 0x0547, 0x122A, 0x220E, 0x079D ; 6B40
006b42   122a     iorwf	0x2a, 0x1, 0       
006b44   220e     addwfc	0xe, 0x1, 0       
006b46   079d     decf	0x9d, 0x1, 0x1      
006b48   142a     andwf	0x2a, 0, 0             data 0x142A, 0x220E, 0x079F, 0x103A ; 6B48
006b4a   220e     addwfc	0xe, 0x1, 0       
006b4c   079f     decf	0x9f, 0x1, 0x1      
006b4e   103a     iorwf	0x3a, 0, 0         
006b50   fe0e     dw	0xfe0e  ;unknown opcode     data 0xFE0E, 0x2800, 0x4706, 0x47CD ; 6B50
006b52   2800     incf	0, 0, 0             
006b54   4706     rlncf	0x6, 0x1, 0x1      
006b56   47cd     rlncf	0xcd, 0x1, 0x1     
006b58   1005     iorwf	0x5, 0, 0              data 0x1005, 0x2AFB, 0x0799, 0xFB22 ; 6B58
006b5a   2afb     incf	0xfb, 0x1, 0        
006b5c   0799     decf	0x99, 0x1, 0x1      
006b5e   fb22     dw	0xfb22  ;unknown opcode 
006b60   2a0d     incf	0xd, 0x1, 0             data 0x2A0D, 0x079B, 0xFD22, 0x3A0D ; 6B60
006b62   079b     decf	0x9b, 0x1, 0x1      
006b64   fd22     dw	0xfd22  ;unknown opcode 
006b66   3a0d     swapf	0xd, 0x1, 0        
006b68   0e10     movlw	0x10                   data 0x0E10, 0x3A47, 0x0E11, 0x4790 ; 6B68
006b6a   3a47     swapf	0x47, 0x1, 0       
006b6c   0e11     movlw	0x11               
006b6e   4790     rlncf	0x90, 0x1, 0x1     
006b70   47cd     rlncf	0xcd, 0x1, 0x1         data 0x47CD, 0x1005, 0x3AFB, 0x0116 ; 6B70
006b72   1005     iorwf	0x5, 0, 0          
006b74   3afb     swapf	0xfb, 0x1, 0       
006b76   0116     movlb	0x16               
006b78   06fe     decf	0xfe, 0x1, 0            data 0x06FE, 0x1B20, 0x992A, 0x2207 ; 6B78
006b7a   1b20     xorwf	0x20, 0x1, 0x1     
006b7c   992a     bcf	0x2a, 0x4, 0x1       
006b7e   2207     addwfc	0x7, 0x1, 0       
006b80   0e03     movlw	0x3                    data 0x0E03, 0x9B2A, 0x2207, 0x0E05 ; 6B80
006b82   9b2a     bcf	0x2a, 0x5, 0x1       
006b84   2207     addwfc	0x7, 0x1, 0       
006b86   0e05     movlw	0x5                
006b88   ff2a     dw	0xff2a  ;unknown opcode     data 0xFF2A, 0x220D, 0x079D, 0x012A ; 6B88
006b8a   220d     addwfc	0xd, 0x1, 0       
006b8c   079d     decf	0x9d, 0x1, 0x1      
006b8e   012a     movlb	0x2a               
006b90   220e     addwfc	0xe, 0x1, 0           data 0x220E, 0x079F, 0x47CD, 0x3A05 ; 6B90
006b92   079f     decf	0x9f, 0x1, 0x1      
006b94   47cd     rlncf	0xcd, 0x1, 0x1     
006b96   3a05     swapf	0x5, 0x1, 0        
006b98   0e0b     movlw	0xb                    data 0x0E0B, 0x266F, 0x2900, 0x5BED ; 6B98
006b9a   266f     addwf	0x6f, 0x1, 0       
006b9c   2900     incf	0, 0, 0x1           
006b9e   5bed     subwfb	0xed, 0x1, 0x1    
006ba0   0799     decf	0x99, 0x1, 0x1          data 0x0799, 0x37EB, 0xED3F, 0x2252 ; 6BA0
006ba2   37eb     rlcf	0xeb, 0x1, 0x1      
006ba4   ed3f     call	0x4a47e, 0x1        
006ba6   2252
006ba8   0e07     movlw	0x7                    data 0x0E07, 0x0011, 0x2A00, 0x079B ; 6BA8
006baa   0011     retfie	0x1               
006bac   2a00     incf	0, 0x1, 0           
006bae   079b     decf	0x9b, 0x1, 0x1      
006bb0   52ed     movf	0xed, 0x1, 0            data 0x52ED, 0x0922, 0x2A0E, 0x0E07 ; 6BB0
006bb2   0922     iorlw	0x22               
006bb4   2a0e     incf	0xe, 0x1, 0         
006bb6   0e07     movlw	0x7                
006bb8   9922     bcf	0x22, 0x4, 0x1           data 0x9922, 0x2A07, 0x0E09, 0x9B22 ; 6BB8
006bba   2a07     incf	0x7, 0x1, 0         
006bbc   0e09     movlw	0x9                
006bbe   9b22     bcf	0x22, 0x5, 0x1       
006bc0   2a07     incf	0x7, 0x1, 0             data 0x2A07, 0x0A6C, 0x9D22, 0x2A07 ; 6BC0
006bc2   0a6c     xorlw	0x6c               
006bc4   9d22     bcf	0x22, 0x6, 0x1       
006bc6   2a07     incf	0x7, 0x1, 0         
006bc8   0a6e     xorlw	0x6e                   data 0x0A6E, 0x9F22, 0xCD07, 0x058E ; 6BC8
006bca   9f22     bcf	0x22, 0x7, 0x1       
006bcc   cd07     movff	0xd07, 0x58e       
006bce   058e
006bd0   182a     xorwf	0x2a, 0, 0             data 0x182A, 0x220E, 0x0799, 0x1A2A ; 6BD0
006bd2   220e     addwfc	0xe, 0x1, 0       
006bd4   0799     decf	0x99, 0x1, 0x1      
006bd6   1a2a     xorwf	0x2a, 0x1, 0       
006bd8   220e     addwfc	0xe, 0x1, 0           data 0x220E, 0x079B, 0x9ACD, 0x3A05 ; 6BD8
006bda   079b     decf	0x9b, 0x1, 0x1      
006bdc   9acd     bcf	0xcd, 0x5, 0         
006bde   3a05     swapf	0x5, 0x1, 0        
006be0   0e0b     movlw	0xb                    data 0x0E0B, 0x266F, 0x2200, 0x079D ; 6BE0
006be2   266f     addwf	0x6f, 0x1, 0       
006be4   2200     addwfc	0, 0x1, 0         
006be6   079d     decf	0x9d, 0x1, 0x1      
006be8   0021     dw	0x21  ;unknown opcode     data 0x0021, 0x2200, 0x079F, 0xDECD ; 6BE8
006bea   2200     addwfc	0, 0x1, 0         
006bec   079f     decf	0x9f, 0x1, 0x1      
006bee   decd     rcall	0x698a             
006bf0   2a05     incf	0x5, 0x1, 0             data 0x2A05, 0x07A1, 0xF722, 0x2A0D ; 6BF0
006bf2   07a1     decf	0xa1, 0x1, 0x1      
006bf4   f722     dw	0xf722  ;unknown opcode 
006bf6   2a0d     incf	0xd, 0x1, 0         
006bf8   07a3     decf	0xa3, 0x1, 0x1          data 0x07A3, 0xF922, 0xF10D, 0xD1C1 ; 6BF8
006bfa   f922     dw	0xf922  ;unknown opcode 
006bfc   f10d     dw	0xf10d  ;unknown opcode 
006bfe   d1c1     bra	0x6f82               
006c00   37e1     rlcf	0xe1, 0x1, 0x1          data 0x37E1, 0xC93F, 0xC1F1, 0xE1D1 ; 6C00
006c02   c93f     movff	0x93f, 0x1f1       
006c04   c1f1
006c06   e1d1     bnz	0x6baa               
006c08   c937     movff	0x937, 0x5e5           data 0xC937, 0xD5E5, 0xF5C5, 0x163A ; 6C08
006c0a   d5e5
006c0c   f5c5     dw	0xf5c5  ;unknown opcode 
006c0e   163a     andwf	0x3a, 0x1, 0       
006c10   ee01     lfsr	0, 0x106                data 0xEE01, 0x2806, 0x3E42, 0x2100 ; 6C10
006c12   2806
006c14   3e42     incfsz	0x42, 0x1, 0      
006c16   2100     addwfc	0, 0, 0x1         
006c18   0dec     mullw	0xec                   data 0x0DEC, 0x0301, 0xED00, 0x20A1 ; 6C18
006c1a   0301     mulwf	0x1, 0x1           
006c1c   ed00     call	0x14200, 0x1        
006c1e   20a1
006c20   ea10     dw	0xea10  ;unknown opcode     data 0xEA10, 0x0C1D, 0xEB3A, 0xFE0D ; 6C20
006c22   0c1d     retlw	0x1d               
006c24   eb3a     dw	0xeb3a  ;unknown opcode 
006c26   fe0d     dw	0xfe0d  ;unknown opcode 
006c28   ca00     movff	0xa00, 0xce9           data 0xCA00, 0x0CE9, 0x01FE, 0xE9CA ; 6C28
006c2a   0ce9
006c2c   01fe     movlb	0xfe               
006c2e   e9ca     dw	0xe9ca  ;unknown opcode 
006c30   2a0c     incf	0xc, 0x1, 0             data 0x2A0C, 0x0DEB, 0x9D22, 0x2A07 ; 6C30
006c32   0deb     mullw	0xeb               
006c34   9d22     bcf	0x22, 0x6, 0x1       
006c36   2a07     incf	0x7, 0x1, 0         
006c38   0ded     mullw	0xed                   data 0x0DED, 0x9F22, 0x2A07, 0x0DF7 ; 6C38
006c3a   9f22     bcf	0x22, 0x7, 0x1       
006c3c   2a07     incf	0x7, 0x1, 0         
006c3e   0df7     mullw	0xf7               
006c40   9922     bcf	0x22, 0x4, 0x1           data 0x9922, 0x2A07, 0x0DF9, 0x9B22 ; 6C40
006c42   2a07     incf	0x7, 0x1, 0         
006c44   0df9     mullw	0xf9               
006c46   9b22     bcf	0x22, 0x5, 0x1       
006c48   cd07     movff	0xd07, 0x59a           data 0xCD07, 0x059A, 0xA93A, 0xCB07 ; 6C48
006c4a   059a
006c4c   a93a     btfss	0x3a, 0x4, 0x1     
006c4e   cb07     movff	0xb07, 0x247       
006c50   c247
006c50   c247     movff	0x247, 0xce9           data 0xC247, 0x0CE9, 0x96C3, 0xAF0C ; 6C50
006c52   0ce9
006c54   96c3     bcf	0xc3, 0x3, 0         
006c56   af0c     btfss	0xc, 0x7, 0x1      
006c58   ec21     call	0x1a1a42, 0             data 0xEC21, 0xED0D, 0x20A9, 0xBE09 ; 6C58
006c5a   ed0d
006c5c   20a9     addwfc	0xa9, 0, 0        
006c5e   be09     btfsc	0x9, 0x7, 0        
006c60   e9ca     dw	0xe9ca  ;unknown opcode     data 0xE9CA, 0x3E0C, 0xBE01, 0x0E28 ; 6C60
006c62   3e0c     incfsz	0xc, 0x1, 0       
006c64   be01     btfsc	0x1, 0x7, 0        
006c66   0e28     movlw	0x28               
006c68   5bed     subwfb	0xed, 0x1, 0x1        data 0x5BED, 0x0DEB, 0xF72A, 0xED0D ; 6C68
006c6a   0deb     mullw	0xeb               
006c6c   f72a     dw	0xf72a  ;unknown opcode 
006c6e   ed0d     call	0x10a41a, 0x1       
006c70   3852
006c70   3852     swapf	0x52, 0, 0             data 0x3852, 0xC376, 0x0C96, 0x032A ; 6C70
006c72   c376     movff	0x376, 0xc96       
006c74   0c96
006c76   032a     mulwf	0x2a, 0x1          
006c78   220e     addwfc	0xe, 0x1, 0           data 0x220E, 0x0DEF, 0x5BED, 0x0DFF ; 6C78
006c7a   0def     mullw	0xef               
006c7c   5bed     subwfb	0xed, 0x1, 0x1    
006c7e   0dff     mullw	0xff               
006c80   2219     addwfc	0x19, 0x1, 0          data 0x2219, 0x0DF3, 0x052A, 0x220E ; 6C80
006c82   0df3     mullw	0xf3               
006c84   052a     decf	0x2a, 0, 0x1        
006c86   220e     addwfc	0xe, 0x1, 0       
006c88   0df1     mullw	0xf1                   data 0x0DF1, 0x5BED, 0x0E01, 0x5AED ; 6C88
006c8a   5bed     subwfb	0xed, 0x1, 0x1    
006c8c   0e01     movlw	0x1                
006c8e   5aed     subwfb	0xed, 0x1, 0      
006c90   f522     dw	0xf522  ;unknown opcode     data 0xF522, 0xC30D, 0x0CD5, 0xEB2A ; 6C90
006c92   c30d     movff	0x30d, 0xcd5       
006c94   0cd5
006c96   eb2a     dw	0xeb2a  ;unknown opcode 
006c98   220d     addwfc	0xd, 0x1, 0           data 0x220D, 0x079D, 0xED2A, 0x220D ; 6C98
006c9a   079d     decf	0x9d, 0x1, 0x1      
006c9c   ed2a     call	0x41a54, 0x1        
006c9e   220d
006ca0   079f     decf	0x9f, 0x1, 0x1          data 0x079F, 0x072A, 0x220E, 0x0799 ; 6CA0
006ca2   072a     decf	0x2a, 0x1, 0x1      
006ca4   220e     addwfc	0xe, 0x1, 0       
006ca6   0799     decf	0x99, 0x1, 0x1      
006ca8   092a     iorlw	0x2a                   data 0x092A, 0x220E, 0x079B, 0x0B3A ; 6CA8
006caa   220e     addwfc	0xe, 0x1, 0       
006cac   079b     decf	0x9b, 0x1, 0x1      
006cae   0b3a     andlw	0x3a               
006cb0   470e     rlncf	0xe, 0x1, 0x1          data 0x470E, 0x47CD, 0x1005, 0x2AFB ; 6CB0
006cb2   47cd     rlncf	0xcd, 0x1, 0x1     
006cb4   1005     iorwf	0x5, 0, 0          
006cb6   2afb     incf	0xfb, 0x1, 0        
006cb8   0799     decf	0x99, 0x1, 0x1          data 0x0799, 0xEF22, 0x3A0D, 0x0E0B ; 6CB8
006cba   ef22     goto	0x141a44            
006cbc   3a0d
006cbe   0e0b     movlw	0xb                
006cc0   165f     andwf	0x5f, 0x1, 0           data 0x165F, 0x1B00, 0x2219, 0x0DF3 ; 6CC0
006cc2   1b00     xorwf	0, 0x1, 0x1        
006cc4   2219     addwfc	0x19, 0x1, 0      
006cc6   0df3     mullw	0xf3               
006cc8   9b2a     bcf	0x2a, 0x5, 0x1           data 0x9B2A, 0x2207, 0x0DF1, 0x001E ; 6CC8
006cca   2207     addwfc	0x7, 0x1, 0       
006ccc   0df1     mullw	0xf1               
006cce   001e     dw	0x1e  ;unknown opcode 
006cd0   5aed     subwfb	0xed, 0x1, 0          data 0x5AED, 0xF322, 0x2A0D, 0x0DEF ; 6CD0
006cd2   f322     dw	0xf322  ;unknown opcode 
006cd4   2a0d     incf	0xd, 0x1, 0         
006cd6   0def     mullw	0xef               
006cd8   6c22     negf	0x22, 0                 data 0x6C22, 0x2A0A, 0x0DF1, 0x6E22 ; 6CD8
006cda   2a0a     incf	0xa, 0x1, 0         
006cdc   0df1     mullw	0xf1               
006cde   6e22     movwf	0x22, 0            
006ce0   f10a     dw	0xf10a  ;unknown opcode     data 0xF10A, 0xD1C1, 0xCDE1, 0x08E1 ; 6CE0
006ce2   d1c1     bra	0x7066               
006ce4   cde1     movff	0xde1, 0x8e1       
006ce6   08e1
006ce8   afc9     btfss	0xc9, 0x7, 0x1         data 0xAFC9, 0x6632, 0xF10A, 0xD1C1 ; 6CE8
006cea   6632     tstfsz	0x32, 0           
006cec   f10a     dw	0xf10a  ;unknown opcode 
006cee   d1c1     bra	0x7072               
006cf0   37e1     rlcf	0xe1, 0x1, 0x1          data 0x37E1, 0xE5C9, 0xC5D5, 0x11F5 ; 6CF0
006cf2   e5c9     bnov	0x6c86              
006cf4   c5d5     movff	0x5d5, 0x1f5       
006cf6   11f5
006cf8   0000     nop                          data 0x0000, 0x2A37, 0x0DEF, 0x5AED ; 6CF8
006cfa   2a37     incf	0x37, 0x1, 0        
006cfc   0def     mullw	0xef               
006cfe   5aed     subwfb	0xed, 0x1, 0      
006d00   ef22     goto	0x141a44                data 0xEF22, 0x2A0D, 0x0DF1, 0x5AED ; 6D00
006d02   2a0d
006d04   0df1     mullw	0xf1               
006d06   5aed     subwfb	0xed, 0x1, 0      
006d08   f122     dw	0xf122  ;unknown opcode     data 0xF122, 0x370D, 0xED3F, 0xEF5B ; 6D08
006d0a   370d     rlcf	0xd, 0x1, 0x1       
006d0c   ed3f     call	0x1eb67e, 0x1       
006d0e   ef5b
006d10   2a0d     incf	0xd, 0x1, 0             data 0x2A0D, 0x0DF3, 0x52ED, 0x5BED ; 6D10
006d12   0df3     mullw	0xf3               
006d14   52ed     movf	0xed, 0x1, 0        
006d16   5bed     subwfb	0xed, 0x1, 0x1    
006d18   0df1     mullw	0xf1                   data 0x0DF1, 0xF52A, 0xED0D, 0xDA52 ; 6D18
006d1a   f52a     dw	0xf52a  ;unknown opcode 
006d1c   ed0d     call	0x14a41a, 0x1       
006d1e   da52
006d20   0d3a     mullw	0x3a                   data 0x0D3A, 0xEF2A, 0x220D, 0x0A6C ; 6D20
006d22   ef2a     goto	0x41a54             
006d24   220d
006d26   0a6c     xorlw	0x6c               
006d28   f12a     dw	0xf12a  ;unknown opcode     data 0xF12A, 0x220D, 0x0A6E, 0xC1F1 ; 6D28
006d2a   220d     addwfc	0xd, 0x1, 0       
006d2c   0a6e     xorlw	0x6e               
006d2e   c1f1     movff	0x1f1, 0x1d1       
006d30   e1d1
006d30   e1d1     bnz	0x6cd4                   data 0xE1D1, 0xE1CD, 0xC908, 0xD5E5 ; 6D30
006d32   e1cd     bnz	0x6cce               
006d34   c908     movff	0x908, 0x5e5       
006d36   d5e5
006d38   f5c5     dw	0xf5c5  ;unknown opcode     data 0xF5C5, 0x163A, 0xEE01, 0x2806 ; 6D38
006d3a   163a     andwf	0x3a, 0x1, 0       
006d3c   ee01     lfsr	0, 0x106            
006d3e   2806
006d40   2a58     incf	0x58, 0x1, 0            data 0x2A58, 0x0DFB, 0x9D22, 0x2A07 ; 6D40
006d42   0dfb     mullw	0xfb               
006d44   9d22     bcf	0x22, 0x6, 0x1       
006d46   2a07     incf	0x7, 0x1, 0         
006d48   0dfd     mullw	0xfd                   data 0x0DFD, 0x9D22, 0x2A07, 0x0DEB ; 6D48
006d4a   9d22     bcf	0x22, 0x6, 0x1       
006d4c   2a07     incf	0x7, 0x1, 0         
006d4e   0deb     mullw	0xeb               
006d50   9922     bcf	0x22, 0x4, 0x1           data 0x9922, 0x2A07, 0x0DED, 0x9B22 ; 6D50
006d52   2a07     incf	0x7, 0x1, 0         
006d54   0ded     mullw	0xed               
006d56   9b22     bcf	0x22, 0x5, 0x1       
006d58   3e07     incfsz	0x7, 0x1, 0           data 0x3E07, 0xCD07, 0x0503, 0x47CD ; 6D58
006d5a   cd07     movff	0xd07, 0x503       
006d5c   0503
006d5e   47cd     rlncf	0xcd, 0x1, 0x1     
006d60   2a05     incf	0x5, 0x1, 0             data 0x2A05, 0x0799, 0x6C22, 0x2A0A ; 6D60
006d62   0799     decf	0x99, 0x1, 0x1      
006d64   6c22     negf	0x22, 0             
006d66   2a0a     incf	0xa, 0x1, 0         
006d68   079b     decf	0x9b, 0x1, 0x1          data 0x079B, 0x6E22, 0x210A, 0x7E00 ; 6D68
006d6a   6e22     movwf	0x22, 0            
006d6c   210a     addwfc	0xa, 0, 0x1       
006d6e   7e00     btg	0, 0x7, 0            
006d70   e1cd     bnz	0x6d0c                   data 0xE1CD, 0x2108, 0x7E00, 0xEB3A ; 6D70
006d72   2108     addwfc	0x8, 0, 0x1       
006d74   7e00     btg	0, 0x7, 0            
006d76   eb3a     dw	0xeb3a  ;unknown opcode 
006d78   e60d     bn	0x6d94                    data 0xE60D, 0x077F, 0x5F17, 0x003E ; 6D78
006d7a   077f     decf	0x7f, 0x1, 0x1      
006d7c   5f17     subwf	0x17, 0x1, 0x1     
006d7e   003e     dw	0x3e  ;unknown opcode 
006d80   5717     subfwb	0x17, 0x1, 0x1        data 0x5717, 0x7E19, 0xEB32, 0x230D ; 6D80
006d82   7e19     btg	0x19, 0x7, 0         
006d84   eb32     dw	0xeb32  ;unknown opcode 
006d86   230d     addwfc	0xd, 0x1, 0x1     
006d88   327e     rrcf	0x7e, 0x1, 0            data 0x327E, 0x0DEC, 0x7E23, 0xED32 ; 6D88
006d8a   0dec     mullw	0xec               
006d8c   7e23     btg	0x23, 0x7, 0         
006d8e   ed32     call	0x61a64, 0x1        
006d90   230d
006d90   230d     addwfc	0xd, 0x1, 0x1         data 0x230D, 0x327E, 0x0DEE, 0x0EC3 ; 6D90
006d92   327e     rrcf	0x7e, 0x1, 0        
006d94   0dee     mullw	0xee               
006d96   0ec3     movlw	0xc3               
006d98   2a0c     incf	0xc, 0x1, 0             data 0x2A0C, 0x0DFB, 0x9D22, 0x2A07 ; 6D98
006d9a   0dfb     mullw	0xfb               
006d9c   9d22     bcf	0x22, 0x6, 0x1       
006d9e   2a07     incf	0x7, 0x1, 0         
006da0   0dfd     mullw	0xfd                   data 0x0DFD, 0x9D22, 0x2A07, 0x0DEC ; 6DA0
006da2   9d22     bcf	0x22, 0x6, 0x1       
006da4   2a07     incf	0x7, 0x1, 0         
006da6   0dec     mullw	0xec               
006da8   9922     bcf	0x22, 0x4, 0x1           data 0x9922, 0x2607, 0x3A00, 0x0DEE ; 6DA8
006daa   2607     addwf	0x7, 0x1, 0        
006dac   3a00     swapf	0, 0x1, 0          
006dae   0dee     mullw	0xee               
006db0   226f     addwfc	0x6f, 0x1, 0          data 0x226F, 0x0799, 0x47CD, 0x2A05 ; 6DB0
006db2   0799     decf	0x99, 0x1, 0x1      
006db4   47cd     rlncf	0xcd, 0x1, 0x1     
006db6   2a05     incf	0x5, 0x1, 0         
006db8   0799     decf	0x99, 0x1, 0x1          data 0x0799, 0x6C22, 0x2A0A, 0x079B ; 6DB8
006dba   6c22     negf	0x22, 0             
006dbc   2a0a     incf	0xa, 0x1, 0         
006dbe   079b     decf	0x9b, 0x1, 0x1      
006dc0   6e22     movwf	0x22, 0                data 0x6E22, 0x210A, 0x7E00, 0xE1CD ; 6DC0
006dc2   210a     addwfc	0xa, 0, 0x1       
006dc4   7e00     btg	0, 0x7, 0            
006dc6   e1cd     bnz	0x6d62               
006dc8   2108     addwfc	0x8, 0, 0x1           data 0x2108, 0x7E00, 0xEB3A, 0x370D ; 6DC8
006dca   7e00     btg	0, 0x7, 0            
006dcc   eb3a     dw	0xeb3a  ;unknown opcode 
006dce   370d     rlcf	0xd, 0x1, 0x1       
006dd0   173f     andwf	0x3f, 0x1, 0x1         data 0x173F, 0x3E5F, 0x1700, 0x1957 ; 6DD0
006dd2   3e5f     incfsz	0x5f, 0x1, 0      
006dd4   1700     andwf	0, 0x1, 0x1        
006dd6   1957     xorwf	0x57, 0, 0x1       
006dd8   32af     rrcf	0xaf, 0x1, 0            data 0x32AF, 0x0DEE, 0xED32, 0x7E0D ; 6DD8
006dda   0dee     mullw	0xee               
006ddc   ed32     call	0x1c1a64, 0x1       
006dde   7e0d
006de0   ec32     call	0x61a64, 0              data 0xEC32, 0x230D, 0x327E, 0x0DEB ; 6DE0
006de2   230d
006de4   327e     rrcf	0x7e, 0x1, 0        
006de6   0deb     mullw	0xeb               
006de8   0ec3     movlw	0xc3                   data 0x0EC3, 0x000C, 0x0000, 0x0000 ; 6DE8
006dea   000c     tblwt	*                  
006dec   0000     nop                      
006dee   0000     nop                      
006df0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6DF0
006df2   0000     nop                      
006df4   0000     nop                      
006df6   0000     nop                      
006df8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6DF8
006dfa   0000     nop                      
006dfc   0000     nop                      
006dfe   0000     nop                      
006e00   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6E00
006e02   0000     nop                      
006e04   0000     nop                      
006e06   0000     nop                      
006e08   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6E08
006e0a   0000     nop                      
006e0c   0000     nop                      
006e0e   0000     nop                      
006e10   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6E10
006e12   0000     nop                      
006e14   0000     nop                      
006e16   0000     nop                      
006e18   0000     nop                          data 0x0000, 0x0000, 0x08DB, 0x7FCB ; 6E18
006e1a   0000     nop                      
006e1c   08db     sublw	0xdb               
006e1e   7fcb     btg	0xcb, 0x7, 0x1       
006e20   fa20     dw	0xfa20  ;unknown opcode     data 0xFA20, 0x07DB, 0xF5C9, 0x08DB ; 6E20
006e22   07db     decf	0xdb, 0x1, 0x1      
006e24   f5c9     dw	0xf5c9  ;unknown opcode 
006e26   08db     sublw	0xdb               
006e28   7fcb     btg	0xcb, 0x7, 0x1           data 0x7FCB, 0x0828, 0x77CB, 0xF620 ; 6E28
006e2a   0828     sublw	0x28               
006e2c   77cb     btg	0xcb, 0x3, 0x1       
006e2e   f620     dw	0xf620  ;unknown opcode 
006e30   d3f1     bra	0x7614                   data 0xD3F1, 0xC907, 0x07DB, 0xEE18 ; 6E30
006e32   c907     movff	0x907, 0x7db       
006e34   07db
006e36   ee18     lfsr	0x1, 0x800          
006e38   0000
006e38   0000     nop                          data 0x0000, 0x0000, 0x2001, 0x4F42 ; 6E38
006e3a   0000     nop                      
006e3c   2001     addwfc	0x1, 0, 0         
006e3e   4f42     dcfsnz	0x42, 0x1, 0x1    
006e40   544f     subfwb	0x4f, 0, 0            data 0x544F, 0x5A2E, 0x4238, 0x0B0D ; 6E40
006e42   5a2e     subwfb	0x2e, 0x1, 0      
006e44   4238     rrncf	0x38, 0x1, 0       
006e46   0b0d     andlw	0xd                
006e48   0020     dw	0x20  ;unknown opcode     data 0x0020, 0x0000, 0x0D03, 0x200E ; 6E48
006e4a   0000     nop                      
006e4c   0d03     mullw	0x3                
006e4e   200e     addwfc	0xe, 0, 0         
006e50   4f42     dcfsnz	0x42, 0x1, 0x1        data 0x4F42, 0x544F, 0x5A2E, 0x4238 ; 6E50
006e52   544f     subfwb	0x4f, 0, 0        
006e54   5a2e     subwfb	0x2e, 0x1, 0      
006e56   4238     rrncf	0x38, 0x1, 0       
006e58   280d     incf	0xd, 0, 0               data 0x280D, 0x0020, 0x0000, 0x0D00 ; 6E58
006e5a   0020     dw	0x20  ;unknown opcode 
006e5c   0000     nop                      
006e5e   0d00     mullw	0                  
006e60   0001     dw	0x1  ;unknown opcode      data 0x0001, 0x2120, 0xFFFF, 0x777C ; 6E60
006e62   2120     addwfc	0x20, 0, 0x1      
006e64   ffff     dw	0xffff  ;unknown opcode 
006e66   777c     btg	0x7c, 0x3, 0x1       
006e68   3f37     incfsz	0x37, 0x1, 0x1        data 0x3F37, 0x42ED, 0x1F3E, 0xCAAC ; 6E68
006e6a   42ed     rrncf	0xed, 0x1, 0       
006e6c   1f3e     comf	0x3e, 0x1, 0x1      
006e6e   caac     movff	0xaac, 0xe75       
006e70   0e75
006e70   0e75     movlw	0x75                   data 0x0E75, 0x66C3, 0x210E, 0xFFFF ; 6E70
006e72   66c3     tstfsz	0xc3, 0           
006e74   210e     addwfc	0xe, 0, 0x1       
006e76   ffff     dw	0xffff  ;unknown opcode 
006e78   ac7e     btfss	0x7e, 0x6, 0           data 0xAC7E, 0x8ACA, 0x370E, 0xED3F ; 6E78
006e7a   8aca     bsf	0xca, 0x5, 0         
006e7c   370e     rlcf	0xe, 0x1, 0x1       
006e7e   ed3f     call	0x1c847e, 0x1       
006e80   3e42
006e80   3e42     incfsz	0x42, 0x1, 0          data 0x3E42, 0xAC1F, 0x8ACA, 0xC30E ; 6E80
006e82   ac1f     btfss	0x1f, 0x6, 0       
006e84   8aca     bsf	0xca, 0x5, 0         
006e86   c30e     movff	0x30e, 0xe78       
006e88   0e78
006e88   0e78     movlw	0x78                   data 0x0E78, 0x0022, 0x2101, 0x0000 ; 6E88
006e8a   0022     dw	0x22  ;unknown opcode 
006e8c   2101     addwfc	0x1, 0, 0x1       
006e8e   0000     nop                      
006e90   0222     mulwf	0x22, 0                data 0x0222, 0x2101, 0x3FFF, 0xCDF9 ; 6E90
006e92   2101     addwfc	0x1, 0, 0x1       
006e94   3fff     incfsz	0xff, 0x1, 0x1    
006e96   cdf9     movff	0xdf9, 0x25c       
006e98   025c
006e98   025c     mulwf	0x5c, 0                data 0x025C, 0x0106, 0x54CD, 0xE601 ; 6E98
006e9a   0106     movlb	0x6                
006e9c   54cd     subfwb	0xcd, 0, 0        
006e9e   e601     bn	0x6ea2                
006ea0   3203     rrcf	0x3, 0x1, 0             data 0x3203, 0x0104, 0x0006, 0x54CD ; 6EA0
006ea2   0104     movlb	0x4                
006ea4   0006     pop                      
006ea6   54cd     subfwb	0xcd, 0, 0        
006ea8   e601     bn	0x6eac                    data 0xE601, 0x3203, 0x0115, 0x08DB ; 6EA8
006eaa   3203     rrcf	0x3, 0x1, 0         
006eac   0115     movlb	0x15               
006eae   08db     sublw	0xdb               
006eb0   6fcb     movwf	0xcb, 0x1              data 0x6FCB, 0xFA20, 0x94CD, 0x2101 ; 6EB0
006eb2   fa20     dw	0xfa20  ;unknown opcode 
006eb4   94cd     bcf	0xcd, 0x2, 0         
006eb6   2101     addwfc	0x1, 0, 0x1       
006eb8   12a2     iorwf	0xa2, 0x1, 0           data 0x12A2, 0xE9CD, 0x2A01, 0x0100 ; 6EB8
006eba   e9cd     dw	0xe9cd  ;unknown opcode 
006ebc   2a01     incf	0x1, 0x1, 0         
006ebe   0100     movlb	0                  
006ec0   2223     addwfc	0x23, 0x1, 0          data 0x2223, 0x0252, 0x5221, 0x3E02 ; 6EC0
006ec2   0252     mulwf	0x52, 0            
006ec4   5221     movf	0x21, 0x1, 0        
006ec6   3e02     incfsz	0x2, 0x1, 0       
006ec8   0602     decf	0x2, 0x1, 0             data 0x0602, 0xCD05, 0x01F3, 0xC321 ; 6EC8
006eca   cd05     movff	0xd05, 0x1f3       
006ecc   01f3
006ece   c321     movff	0x321, 0x212       
006ed0   2212
006ed0   2212     addwfc	0x12, 0x1, 0          data 0x2212, 0x0252, 0xE9CD, 0xCD01 ; 6ED0
006ed2   0252     mulwf	0x52, 0            
006ed4   e9cd     dw	0xe9cd  ;unknown opcode 
006ed6   cd01     movff	0xd01, 0x275       
006ed8   0275
006ed8   0275     mulwf	0x75, 0                data 0x0275, 0xFE3E, 0x1ECD, 0xED01 ; 6ED8
006eda   fe3e     dw	0xfe3e  ;unknown opcode 
006edc   1ecd     comf	0xcd, 0x1, 0        
006ede   ed01     call	0x16ac02, 0x1       
006ee0   fb56
006ee0   fb56     dw	0xfb56  ;unknown opcode     data 0xFB56, 0x7F21, 0xDB12, 0xCB08 ; 6EE0
006ee2   7f21     btg	0x21, 0x7, 0x1       
006ee4   db12     rcall	0x750a             
006ee6   cb08     movff	0xb08, 0x25f       
006ee8   c25f
006ee8   c25f     movff	0x25f, 0x119           data 0xC25F, 0x0119, 0x7A3A, 0xC604 ; 6EE8
006eea   0119
006eec   7a3a     btg	0x3a, 0x5, 0         
006eee   c604     movff	0x604, 0xf02       
006ef0   4f02
006ef0   4f02     dcfsnz	0x2, 0x1, 0x1         data 0x4F02, 0x5F21, 0x3A12, 0x047A ; 6EF0
006ef2   5f21     subwf	0x21, 0x1, 0x1     
006ef4   3a12     swapf	0x12, 0x1, 0       
006ef6   047a     decf	0x7a, 0, 0          
006ef8   caa9     movff	0xaa9, 0x119           data 0xCAA9, 0x0119, 0x08DB, 0x67CB ; 6EF8
006efa   0119
006efc   08db     sublw	0xdb               
006efe   67cb     tstfsz	0xcb, 0x1         
006f00   f320     dw	0xf320  ;unknown opcode     data 0xF320, 0xE03E, 0x03D3, 0x7A3A ; 6F00
006f02   e03e     bz	0x6f80                
006f04   03d3     mulwf	0xd3, 0x1          
006f06   7a3a     btg	0x3a, 0x5, 0         
006f08   c604     movff	0x604, 0xf06           data 0xC604, 0x4F06, 0x7A3A, 0xA904 ; 6F08
006f0a   4f06
006f0c   7a3a     btg	0x3a, 0x5, 0         
006f0e   a904     btfss	0x4, 0x4, 0x1      
006f10   2228     addwfc	0x28, 0x1, 0          data 0x2228, 0x3EF3, 0xD300, 0xDB06 ; 6F10
006f12   3ef3     incfsz	0xf3, 0x1, 0      
006f14   d300     bra	0x7516               
006f16   db06     rcall	0x7524             
006f18   cb06     movff	0xb06, 0x84f           data 0xCB06, 0x284F, 0x3A08, 0x0118 ; 6F18
006f1a   284f
006f1c   3a08     swapf	0x8, 0x1, 0        
006f1e   0118     movlb	0x18               
006f20   06d3     decf	0xd3, 0x1, 0            data 0x06D3, 0x18FB, 0xDBE7, 0xEE03 ; 6F20
006f22   18fb     xorwf	0xfb, 0, 0         
006f24   dbe7     rcall	0x76f4             
006f26   ee03     lfsr	0, 0x37f            
006f28   207f
006f28   207f     addwfc	0x7f, 0, 0            data 0x207F, 0x3AF2, 0x0118, 0x06D3 ; 6F28
006f2a   3af2     swapf	0xf2, 0x1, 0       
006f2c   0118     movlb	0x18               
006f2e   06d3     decf	0xd3, 0x1, 0        
006f30   c3fb     movff	0x3fb, 0x3e9           data 0xC3FB, 0x13E9, 0x153A, 0xFE01 ; 6F30
006f32   13e9
006f34   153a     andwf	0x3a, 0, 0x1       
006f36   fe01     dw	0xfe01  ;unknown opcode 
006f38   2802     incf	0x2, 0, 0               data 0x2802, 0xFE0F, 0x2803, 0xFE1A ; 6F38
006f3a   fe0f     dw	0xfe0f  ;unknown opcode 
006f3c   2803     incf	0x3, 0, 0           
006f3e   fe1a     dw	0xfe1a  ;unknown opcode 
006f40   2800     incf	0, 0, 0                 data 0x2800, 0xFE10, 0x2801, 0xC31B ; 6F40
006f42   fe10     dw	0xfe10  ;unknown opcode 
006f44   2801     incf	0x1, 0, 0           
006f46   c31b     movff	0x31b, 0xf68       
006f48   0f68
006f48   0f68     addlw	0x68                   data 0x0F68, 0x6ECD, 0xCD0F, 0x10C4 ; 6F48
006f4a   6ecd     movwf	0xcd, 0            
006f4c   cd0f     movff	0xd0f, 0xc4        
006f4e   10c4
006f50   68c3     setf	0xc3, 0                 data 0x68C3, 0xCD0F, 0x0F6E, 0x68C3 ; 6F50
006f52   cd0f     movff	0xd0f, 0xf6e       
006f54   0f6e
006f56   68c3     setf	0xc3, 0             
006f58   cd0f     movff	0xd0f, 0xc4            data 0xCD0F, 0x10C4, 0x6ECD, 0xC30F ; 6F58
006f5a   10c4
006f5c   6ecd     movwf	0xcd, 0            
006f5e   c30f     movff	0x30f, 0xf68       
006f60   0f68
006f60   0f68     addlw	0x68                   data 0x0F68, 0xC4CD, 0xC310, 0x0F68 ; 6F60
006f62   c4cd     movff	0x4cd, 0x310       
006f64   c310
006f66   0f68     addlw	0x68               
006f68   1b21     xorwf	0x21, 0x1, 0x1         data 0x1B21, 0xC313, 0x0119, 0x08DB ; 6F68
006f6a   c313     movff	0x313, 0x119       
006f6c   0119
006f6e   08db     sublw	0xdb               
006f70   57cb     subfwb	0xcb, 0x1, 0x1        data 0x57CB, 0xA9C2, 0xCD0F, 0x07AA ; 6F70
006f72   a9c2     btfss	0xc2, 0x4, 0x1     
006f74   cd0f     movff	0xd0f, 0x7aa       
006f76   07aa
006f78   32af     rrcf	0xaf, 0x1, 0            data 0x32AF, 0x0A6C, 0x6D32, 0x320A ; 6F78
006f7a   0a6c     xorlw	0x6c               
006f7c   6d32     negf	0x32, 0x1           
006f7e   320a     rrcf	0xa, 0x1, 0         
006f80   0a6e     xorlw	0x6e                   data 0x0A6E, 0x6F32, 0x210A, 0x7E00 ; 6F80
006f82   6f32     movwf	0x32, 0x1          
006f84   210a     addwfc	0xa, 0, 0x1       
006f86   7e00     btg	0, 0x7, 0            
006f88   e1cd     bnz	0x6f24                   data 0xE1CD, 0xDA08, 0x1028, 0x0406 ; 6F88
006f8a   da08     rcall	0x739c             
006f8c   1028     iorwf	0x28, 0, 0         
006f8e   0406     decf	0x6, 0, 0           
006f90   c221     movff	0x221, 0xe7f           data 0xC221, 0x7E7F, 0x06FE, 0x1828 ; 6F90
006f92   7e7f
006f94   06fe     decf	0xfe, 0x1, 0        
006f96   1828     xorwf	0x28, 0, 0         
006f98   0bfe     andlw	0xfe                   data 0x0BFE, 0x1428, 0x1011, 0x1900 ; 6F98
006f9a   1428     andwf	0x28, 0, 0         
006f9c   1011     iorwf	0x11, 0, 0         
006f9e   1900     xorwf	0, 0, 0x1          
006fa0   f110     dw	0xf110  ;unknown opcode     data 0xF110, 0xE821, 0xCD12, 0x01E9 ; 6FA0
006fa2   e821     dw	0xe821  ;unknown opcode 
006fa4   cd12     movff	0xd12, 0x1e9       
006fa6   01e9
006fa8   21c9     addwfc	0xc9, 0, 0x1          data 0x21C9, 0x1306, 0xE9CD, 0xC901 ; 6FA8
006faa   1306     iorwf	0x6, 0x1, 0x1      
006fac   e9cd     dw	0xe9cd  ;unknown opcode 
006fae   c901     movff	0x901, 0x632       
006fb0   1632
006fb0   1632     andwf	0x32, 0x1, 0           data 0x1632, 0x0101, 0x0004, 0x1109 ; 6FB0
006fb2   0101     movlb	0x1                
006fb4   0004     clrwdt                   
006fb6   1109     iorwf	0x9, 0, 0x1        
006fb8   0a6c     xorlw	0x6c                   data 0x0A6C, 0xB0ED, 0x74CD, 0xDA0A ; 6FB8
006fba   b0ed     btfsc	0xed, 0, 0         
006fbc   74cd     btg	0xcd, 0x2, 0         
006fbe   da0a     rcall	0x73d4             
006fc0   1028     iorwf	0x28, 0, 0             data 0x1028, 0x0C2A, 0x220E, 0x0DEB ; 6FC0
006fc2   0c2a     retlw	0x2a               
006fc4   220e     addwfc	0xe, 0x1, 0       
006fc6   0deb     mullw	0xeb               
006fc8   0e2a     movlw	0x2a                   data 0x0E2A, 0x220E, 0x0DED, 0x0021 ; 6FC8
006fca   220e     addwfc	0xe, 0x1, 0       
006fcc   0ded     mullw	0xed               
006fce   0021     dw	0x21  ;unknown opcode 
006fd0   cd7e     movff	0xd7e, 0xc0a           data 0xCD7E, 0x0C0A, 0x28DA, 0x2110 ; 6FD0
006fd2   0c0a
006fd4   28da     incf	0xda, 0, 0          
006fd6   2110     addwfc	0x10, 0, 0x1      
006fd8   7e00     btg	0, 0x7, 0                data 0x7E00, 0xFDE5, 0x7EE1, 0xE5FE ; 6FD8
006fda   fde5     dw	0xfde5  ;unknown opcode 
006fdc   7ee1     btg	0xe1, 0x7, 0         
006fde   e5fe     bnov	0x6fdc              
006fe0   03ca     mulwf	0xca, 0x1              data 0x03CA, 0xFE10, 0xCA00, 0x1021 ; 6FE0
006fe2   fe10     dw	0xfe10  ;unknown opcode 
006fe4   ca00     movff	0xa00, 0x21        
006fe6   1021
006fe8   21dd     addwfc	0xdd, 0, 0x1          data 0x21DD, 0x1368, 0x0B01, 0xDD00 ; 6FE8
006fea   1368     iorwf	0x68, 0x1, 0x1     
006fec   0b01     andlw	0x1                
006fee   dd00     rcall	0x69f0             
006ff0   dd23     rcall	0x6a38                 data 0xDD23, 0x007E, 0xA1ED, 0x0B20 ; 6FF0
006ff2   007e     dw	0x7e  ;unknown opcode 
006ff4   a1ed     btfss	0xed, 0, 0x1       
006ff6   0b20     andlw	0x20               
006ff8   efea     goto	0x1c1fd4                data 0xEFEA, 0x3E0F, 0xBE0F, 0x0328 ; 6FF8
006ffa   3e0f
006ffc   be0f     btfsc	0xf, 0x7, 0        
006ffe   0328     mulwf	0x28, 0x1          
007000   3bc3     swapf	0xc3, 0x1, 0x1         data 0x3BC3, 0xFD10, 0xE1E5, 0x2011 ; 7000
007002   fd10     dw	0xfd10  ;unknown opcode 
007004   e1e5     bnz	0x6fd0               
007006   2011     addwfc	0x11, 0, 0        
007008   1900     xorwf	0, 0, 0x1              data 0x1900, 0x21EB, 0x8000, 0xEDAF ; 7008
00700a   21eb     addwfc	0xeb, 0, 0x1      
00700c   8000     bsf	0, 0, 0              
00700e   edaf     call	0x16a55e, 0x1       
007010   eb52
007010   eb52     dw	0xeb52  ;unknown opcode     data 0xEB52, 0xC620, 0x0021, 0xCD7E ; 7010
007012   c620     movff	0x620, 0x21        
007014   0021
007016   cd7e     movff	0xd7e, 0xcf3       
007018   0cf3
007018   0cf3     retlw	0xf3                   data 0x0CF3, 0x0538, 0x0021, 0x187E ; 7018
00701a   0538     decf	0x38, 0, 0x1        
00701c   0021     dw	0x21  ;unknown opcode 
00701e   187e     xorwf	0x7e, 0, 0         
007020   21b9     addwfc	0xb9, 0, 0x1          data 0x21B9, 0x1374, 0xE9CD, 0xC901 ; 7020
007022   1374     iorwf	0x74, 0x1, 0x1     
007024   e9cd     dw	0xe9cd  ;unknown opcode 
007026   c901     movff	0x901, 0xc21       
007028   4c21
007028   4c21     dcfsnz	0x21, 0, 0            data 0x4C21, 0xCD13, 0x01E9, 0x6621 ; 7028
00702a   cd13     movff	0xd13, 0x1e9       
00702c   01e9
00702e   6621     tstfsz	0x21, 0           
007030   3e0a     incfsz	0xa, 0x1, 0           data 0x3E0A, 0xCD02, 0x020F, 0x0A3E ; 7030
007032   cd02     movff	0xd02, 0x20f       
007034   020f
007036   0a3e     xorlw	0x3e               
007038   05d3     decf	0xd3, 0, 0x1            data 0x05D3, 0x21C9, 0x0000, 0xED22 ; 7038
00703a   21c9     addwfc	0xc9, 0, 0x1      
00703c   0000     nop                      
00703e   ed22     call	0x1a1a44, 0x1       
007040   fd0d
007040   fd0d     dw	0xfd0d  ;unknown opcode     data 0xFD0D, 0x1A7E, 0xEB32, 0xFD0D ; 7040
007042   1a7e     xorwf	0x7e, 0x1, 0       
007044   eb32     dw	0xeb32  ;unknown opcode 
007046   fd0d     dw	0xfd0d  ;unknown opcode 
007048   1b7e     xorwf	0x7e, 0x1, 0x1         data 0x1B7E, 0xEC32, 0x3A0D, 0x0116 ; 7048
00704a   ec32     call	0x141a64, 0         
00704c   3a0d
00704e   0116     movlb	0x16               
007050   06fe     decf	0xfe, 0x1, 0            data 0x06FE, 0x0C28, 0x7EFD, 0x3214 ; 7050
007052   0c28     retlw	0x28               
007054   7efd     btg	0xfd, 0x7, 0         
007056   3214     rrcf	0x14, 0x1, 0        
007058   0ded     mullw	0xed                   data 0x0DED, 0x7EFD, 0x3215, 0x0DEE ; 7058
00705a   7efd     btg	0xfd, 0x7, 0         
00705c   3215     rrcf	0x15, 0x1, 0        
00705e   0dee     mullw	0xee               
007060   0021     dw	0x21  ;unknown opcode     data 0x0021, 0xCD7E, 0x0C0A, 0x28DA ; 7060
007062   cd7e     movff	0xd7e, 0xc0a       
007064   0c0a
007066   28da     incf	0xda, 0, 0          
007068   3a10     swapf	0x10, 0x1, 0           data 0x3A10, 0x7E00, 0x02FE, 0xBDC2 ; 7068
00706a   7e00     btg	0, 0x7, 0            
00706c   02fe     mulwf	0xfe, 0            
00706e   bdc2     btfsc	0xc2, 0x6, 0x1     
007070   cd10     movff	0xd10, 0x199           data 0xCD10, 0x0199, 0xDD21, 0xCD13 ; 7070
007072   0199
007074   dd21     rcall	0x6ab8             
007076   cd13     movff	0xd13, 0x1e9       
007078   01e9
007078   01e9     movlb	0xe9                   data 0x01E9, 0x012A, 0xAF7E, 0x0001 ; 7078
00707a   012a     movlb	0x2a               
00707c   af7e     btfss	0x7e, 0x7, 0x1     
00707e   0001     dw	0x1  ;unknown opcode  
007080   ed02     call	0x108404, 0x1           data 0xED02, 0x3842, 0xCD05, 0x0CF3 ; 7080
007082   3842
007084   cd05     movff	0xd05, 0xcf3       
007086   0cf3
007088   f718     dw	0xf718  ;unknown opcode     data 0xF718, 0xAF09, 0x21EB, 0x0200 ; 7088
00708a   af09     btfss	0x9, 0x7, 0x1      
00708c   21eb     addwfc	0xeb, 0, 0x1      
00708e   0200     mulwf	0, 0               
007090   52ed     movf	0xed, 0x1, 0            data 0x52ED, 0xC1E5, 0x0021, 0x197E ; 7090
007092   c1e5     movff	0x1e5, 0x21        
007094   0021
007096   197e     xorwf	0x7e, 0, 0x1       
007098   0011     retfie	0x1                   data 0x0011, 0xF300, 0xB0ED, 0xCDEB ; 7098
00709a   f300     dw	0xf300  ;unknown opcode 
00709c   b0ed     btfsc	0xed, 0, 0         
00709e   cdeb     movff	0xdeb, 0xcf3       
0070a0   0cf3
0070a0   0cf3     retlw	0xf3                   data 0x0CF3, 0x21EB, 0x7FFF, 0xEDAF ; 70A0
0070a2   21eb     addwfc	0xeb, 0, 0x1      
0070a4   7fff     btg	0xff, 0x7, 0x1       
0070a6   edaf     call	0x10a55e, 0x1       
0070a8   2852
0070a8   2852     incf	0x52, 0, 0              data 0x2852, 0xEB0F, 0x663A, 0xFE0A ; 70A8
0070aa   eb0f     dw	0xeb0f  ;unknown opcode 
0070ac   663a     tstfsz	0x3a, 0           
0070ae   fe0a     dw	0xfe0a  ;unknown opcode 
0070b0   2800     incf	0, 0, 0                 data 0x2800, 0xFE07, 0x284F, 0xC3E8 ; 70B0
0070b2   fe07     dw	0xfe07  ;unknown opcode 
0070b4   284f     incf	0x4f, 0, 0          
0070b6   c3e8     movff	0x3e8, 0x28        
0070b8   1028
0070b8   1028     iorwf	0x28, 0, 0             data 0x1028, 0x00C3, 0x2100, 0x139F ; 70B8
0070ba   00c3     dw	0xc3  ;unknown opcode 
0070bc   2100     addwfc	0, 0, 0x1         
0070be   139f     iorwf	0x9f, 0x1, 0x1     
0070c0   e9cd     dw	0xe9cd  ;unknown opcode     data 0xE9CD, 0xC901, 0x7A3A, 0xC604 ; 70C0
0070c2   c901     movff	0x901, 0xa3a       
0070c4   7a3a
0070c6   c604     movff	0x604, 0x703       
0070c8   4703
0070c8   4703     rlncf	0x3, 0x1, 0x1          data 0x4703, 0x7A3A, 0xB804, 0x0B28 ; 70C8
0070ca   7a3a     btg	0x3a, 0x5, 0         
0070cc   b804     btfsc	0x4, 0x4, 0        
0070ce   0b28     andlw	0x28               
0070d0   08db     sublw	0xdb                   data 0x08DB, 0x7FCB, 0xCAC2, 0xDB10 ; 70D0
0070d2   7fcb     btg	0xcb, 0x7, 0x1       
0070d4   cac2     movff	0xac2, 0xb10       
0070d6   db10
0070d8   1807     xorwf	0x7, 0, 0              data 0x1807, 0x3EEF, 0xCD53, 0x0E25 ; 70D8
0070da   3eef     incfsz	0xef, 0x1, 0      
0070dc   cd53     movff	0xd53, 0xe25       
0070de   0e25
0070e0   433e     rrncf	0x3e, 0x1, 0x1         data 0x433E, 0x25CD, 0x3E0E, 0xCD53 ; 70E0
0070e2   25cd     addwf	0xcd, 0, 0x1       
0070e4   3e0e     incfsz	0xe, 0x1, 0       
0070e6   cd53     movff	0xd53, 0xe25       
0070e8   0e25
0070e8   0e25     movlw	0x25                   data 0x0E25, 0x0D3E, 0x25CD, 0xCD0E ; 70E8
0070ea   0d3e     mullw	0x3e               
0070ec   25cd     addwf	0xcd, 0, 0x1       
0070ee   cd0e     movff	0xd0e, 0xe1c       
0070f0   0e1c
0070f0   0e1c     movlw	0x1c                   data 0x0E1C, 0x3EFE, 0x54C2, 0xCD12 ; 70F0
0070f2   3efe     incfsz	0xfe, 0x1, 0      
0070f4   54c2     subfwb	0xc2, 0, 0        
0070f6   cd12     movff	0xd12, 0xe1c       
0070f8   0e1c
0070f8   0e1c     movlw	0x1c                   data 0x0E1C, 0x0DFE, 0x54C2, 0x3E12 ; 70F8
0070fa   0dfe     mullw	0xfe               
0070fc   54c2     subfwb	0xc2, 0, 0        
0070fe   3e12     incfsz	0x12, 0x1, 0      
007100   cd91     movff	0xd91, 0xe25           data 0xCD91, 0x0E25, 0x0D3E, 0x25CD ; 7100
007102   0e25
007104   0d3e     mullw	0x3e               
007106   25cd     addwf	0xcd, 0, 0x1       
007108   cd0e     movff	0xd0e, 0xe1c           data 0xCD0E, 0x0E1C, 0x3EFE, 0x54C2 ; 7108
00710a   0e1c
00710c   3efe     incfsz	0xfe, 0x1, 0      
00710e   54c2     subfwb	0xc2, 0, 0        
007110   cd12     movff	0xd12, 0xe1c           data 0xCD12, 0x0E1C, 0x0DFE, 0x54C2 ; 7110
007112   0e1c
007114   0dfe     mullw	0xfe               
007116   54c2     subfwb	0xc2, 0, 0        
007118   0612     decf	0x12, 0x1, 0            data 0x0612, 0x210B, 0x0E3C, 0x237E ; 7118
00711a   210b     addwfc	0xb, 0, 0x1       
00711c   0e3c     movlw	0x3c               
00711e   237e     addwfc	0x7e, 0x1, 0x1    
007120   25cd     addwf	0xcd, 0, 0x1           data 0x25CD, 0x100E, 0xCDF9, 0x0E1C ; 7120
007122   100e     iorwf	0xe, 0, 0          
007124   cdf9     movff	0xdf9, 0xe1c       
007126   0e1c
007128   0dfe     mullw	0xfe                   data 0x0DFE, 0x54C2, 0xCD12, 0x0E1C ; 7128
00712a   54c2     subfwb	0xc2, 0, 0        
00712c   cd12     movff	0xd12, 0xe1c       
00712e   0e1c
007130   42fe     rrncf	0xfe, 0x1, 0           data 0x42FE, 0x54C2, 0xCD12, 0x0E1C ; 7130
007132   54c2     subfwb	0xc2, 0, 0        
007134   cd12     movff	0xd12, 0xe1c       
007136   0e1c
007138   4ffe     dcfsnz	0xfe, 0x1, 0x1        data 0x4FFE, 0x54C2, 0xCD12, 0x0E1C ; 7138
00713a   54c2     subfwb	0xc2, 0, 0        
00713c   cd12     movff	0xd12, 0xe1c       
00713e   0e1c
007140   4ffe     dcfsnz	0xfe, 0x1, 0x1        data 0x4FFE, 0x54C2, 0xCD12, 0x0E1C ; 7140
007142   54c2     subfwb	0xc2, 0, 0        
007144   cd12     movff	0xd12, 0xe1c       
007146   0e1c
007148   54fe     subfwb	0xfe, 0, 0            data 0x54FE, 0x54C2, 0xCD12, 0x0E1C ; 7148
00714a   54c2     subfwb	0xc2, 0, 0        
00714c   cd12     movff	0xd12, 0xe1c       
00714e   0e1c
007150   2efe     decfsz	0xfe, 0x1, 0          data 0x2EFE, 0x54C2, 0xCD12, 0x0E1C ; 7150
007152   54c2     subfwb	0xc2, 0, 0        
007154   cd12     movff	0xd12, 0xe1c       
007156   0e1c
007158   5afe     subwfb	0xfe, 0x1, 0          data 0x5AFE, 0x54C2, 0xCD12, 0x0E1C ; 7158
00715a   54c2     subfwb	0xc2, 0, 0        
00715c   cd12     movff	0xd12, 0xe1c       
00715e   0e1c
007160   38fe     swapf	0xfe, 0, 0             data 0x38FE, 0x54C2, 0xCD12, 0x0E1C ; 7160
007162   54c2     subfwb	0xc2, 0, 0        
007164   cd12     movff	0xd12, 0xe1c       
007166   0e1c
007168   42fe     rrncf	0xfe, 0x1, 0           data 0x42FE, 0x54C2, 0xCD12, 0x0E1C ; 7168
00716a   54c2     subfwb	0xc2, 0, 0        
00716c   cd12     movff	0xd12, 0xe1c       
00716e   0e1c
007170   20fe     addwfc	0xfe, 0, 0            data 0x20FE, 0x54C2, 0xCD12, 0x0E1C ; 7170
007172   54c2     subfwb	0xc2, 0, 0        
007174   cd12     movff	0xd12, 0xe1c       
007176   0e1c
007178   3832     swapf	0x32, 0, 0             data 0x3832, 0xCD0E, 0x0E1C, 0x3932 ; 7178
00717a   cd0e     movff	0xd0e, 0xe1c       
00717c   0e1c
00717e   3932     swapf	0x32, 0, 0x1       
007180   cd0e     movff	0xd0e, 0xe1c           data 0xCD0E, 0x0E1C, 0x3A32, 0xCD0E ; 7180
007182   0e1c
007184   3a32     swapf	0x32, 0x1, 0       
007186   cd0e     movff	0xd0e, 0xe1c       
007188   0e1c
007188   0e1c     movlw	0x1c                   data 0x0E1C, 0x3B32, 0xCD0E, 0x0E1C ; 7188
00718a   3b32     swapf	0x32, 0x1, 0x1     
00718c   cd0e     movff	0xd0e, 0xe1c       
00718e   0e1c
007190   1ccd     comf	0xcd, 0, 0              data 0x1CCD, 0xCD0E, 0x0E1C, 0x4E21 ; 7190
007192   cd0e     movff	0xd0e, 0xe1c       
007194   0e1c
007196   4e21     dcfsnz	0x21, 0x1, 0      
007198   060e     decf	0xe, 0x1, 0             data 0x060E, 0x7E0B, 0x25CD, 0x230E ; 7198
00719a   7e0b     btg	0xb, 0x7, 0          
00719c   25cd     addwf	0xcd, 0, 0x1       
00719e   230e     addwfc	0xe, 0x1, 0x1     
0071a0   f910     dw	0xf910  ;unknown opcode     data 0xF910, 0x1CCD, 0xFE0E, 0xC23E ; 71A0
0071a2   1ccd     comf	0xcd, 0, 0          
0071a4   fe0e     dw	0xfe0e  ;unknown opcode 
0071a6   c23e     movff	0x23e, 0x254       
0071a8   1254
0071a8   1254     iorwf	0x54, 0x1, 0           data 0x1254, 0x1CCD, 0xFE0E, 0xC20D ; 71A8
0071aa   1ccd     comf	0xcd, 0, 0          
0071ac   fe0e     dw	0xfe0e  ;unknown opcode 
0071ae   c20d     movff	0x20d, 0x254       
0071b0   1254
0071b0   1254     iorwf	0x54, 0x1, 0           data 0x1254, 0x4721, 0x060E, 0x7E07 ; 71B0
0071b2   4721     rlncf	0x21, 0x1, 0x1     
0071b4   060e     decf	0xe, 0x1, 0         
0071b6   7e07     btg	0x7, 0x7, 0          
0071b8   25cd     addwf	0xcd, 0, 0x1           data 0x25CD, 0x230E, 0xF910, 0x1CCD ; 71B8
0071ba   230e     addwfc	0xe, 0x1, 0x1     
0071bc   f910     dw	0xf910  ;unknown opcode 
0071be   1ccd     comf	0xcd, 0, 0          
0071c0   fe0e     dw	0xfe0e  ;unknown opcode     data 0xFE0E, 0xC202, 0x10BD, 0x99CD ; 71C0
0071c2   c202     movff	0x202, 0xbd        
0071c4   10bd
0071c6   99cd     bcf	0xcd, 0x4, 0x1       
0071c8   2101     addwfc	0x1, 0, 0x1           data 0x2101, 0x13DD, 0xE9CD, 0xCD01 ; 71C8
0071ca   13dd     iorwf	0xdd, 0x1, 0x1     
0071cc   e9cd     dw	0xe9cd  ;unknown opcode 
0071ce   cd01     movff	0xd01, 0xe1c       
0071d0   0e1c
0071d0   0e1c     movlw	0x1c                   data 0x0E1C, 0x325F, 0x0E5E, 0x1CCD ; 71D0
0071d2   325f     rrcf	0x5f, 0x1, 0        
0071d4   0e5e     movlw	0x5e               
0071d6   1ccd     comf	0xcd, 0, 0          
0071d8   570e     subfwb	0xe, 0x1, 0x1         data 0x570E, 0x5D32, 0xED0E, 0x9D53 ; 71D8
0071da   5d32     subwf	0x32, 0, 0x1       
0071dc   ed0e     call	0x1aa61c, 0x1       
0071de   9d53
0071e0   2107     addwfc	0x7, 0, 0x1           data 0x2107, 0x0000, 0x9F22, 0x2A07 ; 71E0
0071e2   0000     nop                      
0071e4   9f22     bcf	0x22, 0x7, 0x1       
0071e6   2a07     incf	0x7, 0x1, 0         
0071e8   0e38     movlw	0x38                   data 0x0E38, 0x9922, 0x2A07, 0x0E3A ; 71E8
0071ea   9922     bcf	0x22, 0x4, 0x1       
0071ec   2a07     incf	0x7, 0x1, 0         
0071ee   0e3a     movlw	0x3a               
0071f0   9b22     bcf	0x22, 0x5, 0x1           data 0x9B22, 0xCD07, 0x059A, 0x4BED ; 71F0
0071f2   cd07     movff	0xd07, 0x59a       
0071f4   059a
0071f6   4bed     infsnz	0xed, 0x1, 0x1    
0071f8   0799     decf	0x99, 0x1, 0x1          data 0x0799, 0x0021, 0x2280, 0x079D ; 71F8
0071fa   0021     dw	0x21  ;unknown opcode 
0071fc   2280     addwfc	0x80, 0x1, 0      
0071fe   079d     decf	0x9d, 0x1, 0x1      
007200   9acd     bcf	0xcd, 0x5, 0             data 0x9ACD, 0x3A05, 0x07A9, 0x47CB ; 7200
007202   3a05     swapf	0x5, 0x1, 0        
007204   07a9     decf	0xa9, 0x1, 0x1      
007206   47cb     rlncf	0xcb, 0x1, 0x1     
007208   0ec2     movlw	0xc2                   data 0x0EC2, 0x0112, 0x8000, 0x3279 ; 7208
00720a   0112     movlb	0x12               
00720c   8000     bsf	0, 0, 0              
00720e   3279     rrcf	0x79, 0x1, 0        
007210   0e4c     movlw	0x4c                   data 0x0E4C, 0x3278, 0x0E4B, 0x21C5 ; 7210
007212   3278     rrcf	0x78, 0x1, 0        
007214   0e4b     movlw	0x4b               
007216   21c5     addwfc	0xc5, 0, 0x1      
007218   0e59     movlw	0x59                   data 0x0E59, 0x0706, 0xCD7E, 0x0E25 ; 7218
00721a   0706     decf	0x6, 0x1, 0x1       
00721c   cd7e     movff	0xd7e, 0xe25       
00721e   0e25
007220   1023     iorwf	0x23, 0, 0             data 0x1023, 0xCDF9, 0x0E1C, 0x3EFE ; 7220
007222   cdf9     movff	0xdf9, 0xe1c       
007224   0e1c
007226   3efe     incfsz	0xfe, 0x1, 0      
007228   54c2     subfwb	0xc2, 0, 0            data 0x54C2, 0xCD12, 0x0E1C, 0x0DFE ; 7228
00722a   cd12     movff	0xd12, 0xe1c       
00722c   0e1c
00722e   0dfe     mullw	0xfe               
007230   54c2     subfwb	0xc2, 0, 0            data 0x54C2, 0xF312, 0x4721, 0x060E ; 7230
007232   f312     dw	0xf312  ;unknown opcode 
007234   4721     rlncf	0x21, 0x1, 0x1     
007236   060e     decf	0xe, 0x1, 0         
007238   7e07     btg	0x7, 0x7, 0              data 0x7E07, 0x25CD, 0x230E, 0xF910 ; 7238
00723a   25cd     addwf	0xcd, 0, 0x1       
00723c   230e     addwfc	0xe, 0x1, 0x1     
00723e   f910     dw	0xf910  ;unknown opcode 
007240   21c1     addwfc	0xc1, 0, 0x1          data 0x21C1, 0x0000, 0x1CCD, 0x770E ; 7240
007242   0000     nop                      
007244   1ccd     comf	0xcd, 0, 0          
007246   770e     btg	0xe, 0x3, 0x1        
007248   0b23     andlw	0x23                   data 0x0B23, 0x80AF, 0xF620, 0x2081 ; 7248
00724a   80af     bsf	0xaf, 0, 0           
00724c   f620     dw	0xf620  ;unknown opcode 
00724e   2081     addwfc	0x81, 0, 0        
007250   c3f3     movff	0x3f3, 0               data 0xC3F3, 0x0000, 0x05D3, 0x08DB ; 7250
007252   0000
007254   05d3     decf	0xd3, 0, 0x1        
007256   08db     sublw	0xdb               
007258   7fcb     btg	0xcb, 0x7, 0x1           data 0x7FCB, 0xDBC0, 0x1807, 0x0AF5 ; 7258
00725a   dbc0     rcall	0x79dc             
00725c   1807     xorwf	0x7, 0, 0          
00725e   0af5     xorlw	0xf5               
007260   5245     movf	0x45, 0x1, 0            data 0x5245, 0x4F52, 0x3A52, 0x4B20 ; 7260
007262   4f52     dcfsnz	0x52, 0x1, 0x1    
007264   3a52     swapf	0x52, 0x1, 0       
007266   4b20     infsnz	0x20, 0x1, 0x1    
007268   7965     btg	0x65, 0x4, 0x1           data 0x7965, 0x6F62, 0x7261, 0x2064 ; 7268
00726a   6f62     movwf	0x62, 0x1          
00726c   7261     btg	0x61, 0x1, 0         
00726e   2064     addwfc	0x64, 0, 0        
007270   6f4e     movwf	0x4e, 0x1              data 0x6F4E, 0x2074, 0x6544, 0x6574 ; 7270
007272   2074     addwfc	0x74, 0, 0        
007274   6544     cpfsgt	0x44, 0x1         
007276   6574     cpfsgt	0x74, 0x1         
007278   7463     btg	0x63, 0x2, 0             data 0x7463, 0x6465, 0x0A2E, 0x0A00 ; 7278
00727a   6465     cpfsgt	0x65, 0           
00727c   0a2e     xorlw	0x2e               
00727e   0a00     xorlw	0                  
007280   5245     movf	0x45, 0x1, 0            data 0x5245, 0x4F52, 0x3A52, 0x4B20 ; 7280
007282   4f52     dcfsnz	0x52, 0x1, 0x1    
007284   3a52     swapf	0x52, 0x1, 0       
007286   4b20     infsnz	0x20, 0x1, 0x1    
007288   7965     btg	0x65, 0x4, 0x1           data 0x7965, 0x6F62, 0x7261, 0x2064 ; 7288
00728a   6f62     movwf	0x62, 0x1          
00728c   7261     btg	0x61, 0x1, 0         
00728e   2064     addwfc	0x64, 0, 0        
007290   6f63     movwf	0x63, 0x1              data 0x6F63, 0x746E, 0x6F72, 0x6C6C ; 7290
007292   746e     btg	0x6e, 0x2, 0         
007294   6f72     movwf	0x72, 0x1          
007296   6c6c     negf	0x6c, 0             
007298   7265     btg	0x65, 0x1, 0             data 0x7265, 0x6520, 0x7272, 0x726F ; 7298
00729a   6520     cpfsgt	0x20, 0x1         
00729c   7272     btg	0x72, 0x1, 0         
00729e   726f     btg	0x6f, 0x1, 0         
0072a0   000a     tblrd	*-                     data 0x000A, 0x385A, 0x2030, 0x7250 ; 72A0
0072a2   385a     swapf	0x5a, 0, 0         
0072a4   2030     addwfc	0x30, 0, 0        
0072a6   7250     btg	0x50, 0x1, 0         
0072a8   6a6f     clrf	0x6f, 0                 data 0x6A6F, 0x6365, 0x2074, 0x614D ; 72A8
0072aa   6365     cpfseq	0x65, 0x1         
0072ac   2074     addwfc	0x74, 0, 0        
0072ae   614d     cpfslt	0x4d, 0x1         
0072b0   6b72     clrf	0x72, 0x1               data 0x6B72, 0x3220, 0x203A, 0x6F42 ; 72B0
0072b2   3220     rrcf	0x20, 0x1, 0        
0072b4   203a     addwfc	0x3a, 0, 0        
0072b6   6f42     movwf	0x42, 0x1          
0072b8   746f     btg	0x6f, 0x2, 0             data 0x746F, 0x6E69, 0x0A67, 0x4152 ; 72B8
0072ba   6e69     movwf	0x69, 0            
0072bc   0a67     xorlw	0x67               
0072be   4152     rrncf	0x52, 0, 0x1       
0072c0   204d     addwfc	0x4d, 0, 0            data 0x204D, 0x2000, 0x7962, 0x6574 ; 72C0
0072c2   2000     addwfc	0, 0, 0           
0072c4   7962     btg	0x62, 0x4, 0x1       
0072c6   6574     cpfsgt	0x74, 0x1         
0072c8   0a73     xorlw	0x73                   data 0x0A73, 0x500A, 0x6572, 0x7373 ; 72C8
0072ca   500a     movf	0xa, 0, 0           
0072cc   6572     cpfsgt	0x72, 0x1         
0072ce   7373     btg	0x73, 0x1, 0x1       
0072d0   4420     rlncf	0x20, 0, 0             data 0x4420, 0x4C45, 0x5445, 0x2045 ; 72D0
0072d2   4c45     dcfsnz	0x45, 0, 0        
0072d4   5445     subfwb	0x45, 0, 0        
0072d6   2045     addwfc	0x45, 0, 0        
0072d8   6f74     movwf	0x74, 0x1              data 0x6F74, 0x6520, 0x746E, 0x7265 ; 72D8
0072da   6520     cpfsgt	0x20, 0x1         
0072dc   746e     btg	0x6e, 0x2, 0         
0072de   7265     btg	0x65, 0x1, 0         
0072e0   7320     btg	0x20, 0x1, 0x1           data 0x7320, 0x7465, 0x7075, 0x000A ; 72E0
0072e2   7465     btg	0x65, 0x2, 0         
0072e4   7075     btg	0x75, 0, 0           
0072e6   000a     tblrd	*-                 
0072e8   6f4e     movwf	0x4e, 0x1              data 0x6F4E, 0x6220, 0x6F6F, 0x6174 ; 72E8
0072ea   6220     cpfseq	0x20, 0           
0072ec   6f6f     movwf	0x6f, 0x1          
0072ee   6174     cpfslt	0x74, 0x1         
0072f0   6c62     negf	0x62, 0                 data 0x6C62, 0x2065, 0x6170, 0x7472 ; 72F0
0072f2   2065     addwfc	0x65, 0, 0        
0072f4   6170     cpfslt	0x70, 0x1         
0072f6   7472     btg	0x72, 0x2, 0         
0072f8   7469     btg	0x69, 0x2, 0             data 0x7469, 0x6F69, 0x736E, 0x6F20 ; 72F8
0072fa   6f69     movwf	0x69, 0x1          
0072fc   736e     btg	0x6e, 0x1, 0x1       
0072fe   6f20     movwf	0x20, 0x1          
007300   206e     addwfc	0x6e, 0, 0            data 0x206E, 0x4453, 0x000A, 0x6F4E ; 7300
007302   4453     rlncf	0x53, 0, 0         
007304   000a     tblrd	*-                 
007306   6f4e     movwf	0x4e, 0x1          
007308   5320     movf	0x20, 0x1, 0x1          data 0x5320, 0x2044, 0x6163, 0x6472 ; 7308
00730a   2044     addwfc	0x44, 0, 0        
00730c   6163     cpfslt	0x63, 0x1         
00730e   6472     cpfsgt	0x72, 0           
007310   6920     setf	0x20, 0x1               data 0x6920, 0x736E, 0x7265, 0x6574 ; 7310
007312   736e     btg	0x6e, 0x1, 0x1       
007314   7265     btg	0x65, 0x1, 0         
007316   6574     cpfsgt	0x74, 0x1         
007318   0a64     xorlw	0x64                   data 0x0A64, 0x4E00, 0x206F, 0x534F ; 7318
00731a   4e00     dcfsnz	0, 0x1, 0         
00731c   206f     addwfc	0x6f, 0, 0        
00731e   534f     movf	0x4f, 0x1, 0x1      
007320   6620     tstfsz	0x20, 0               data 0x6620, 0x756F, 0x646E, 0x202C ; 7320
007322   756f     btg	0x6f, 0x2, 0x1       
007324   646e     cpfsgt	0x6e, 0           
007326   202c     addwfc	0x2c, 0, 0        
007328   6e69     movwf	0x69, 0                data 0x6E69, 0x6573, 0x7472, 0x7320 ; 7328
00732a   6573     cpfsgt	0x73, 0x1         
00732c   7472     btg	0x72, 0x2, 0         
00732e   7320     btg	0x20, 0x1, 0x1       
007330   7379     btg	0x79, 0x1, 0x1           data 0x7379, 0x6574, 0x206D, 0x6964 ; 7330
007332   6574     cpfsgt	0x74, 0x1         
007334   206d     addwfc	0x6d, 0, 0        
007336   6964     setf	0x64, 0x1           
007338   6b73     clrf	0x73, 0x1               data 0x6B73, 0x6120, 0x646E, 0x7020 ; 7338
00733a   6120     cpfslt	0x20, 0x1         
00733c   646e     cpfsgt	0x6e, 0           
00733e   7020     btg	0x20, 0, 0           
007340   6572     cpfsgt	0x72, 0x1             data 0x6572, 0x7373, 0x5220, 0x5345 ; 7340
007342   7373     btg	0x73, 0x1, 0x1       
007344   5220     movf	0x20, 0x1, 0        
007346   5345     movf	0x45, 0x1, 0x1      
007348   5445     subfwb	0x45, 0, 0            data 0x5445, 0x000A, 0x6E55, 0x6E6B ; 7348
00734a   000a     tblrd	*-                 
00734c   6e55     movwf	0x55, 0            
00734e   6e6b     movwf	0x6b, 0            
007350   776f     btg	0x6f, 0x3, 0x1           data 0x776F, 0x206E, 0x7265, 0x6F72 ; 7350
007352   206e     addwfc	0x6e, 0, 0        
007354   7265     btg	0x65, 0x1, 0         
007356   6f72     movwf	0x72, 0x1          
007358   2072     addwfc	0x72, 0, 0            data 0x2072, 0x6E69, 0x4620, 0x5441 ; 7358
00735a   6e69     movwf	0x69, 0            
00735c   4620     rlncf	0x20, 0x1, 0       
00735e   5441     subfwb	0x41, 0, 0        
007360   6420     cpfsgt	0x20, 0               data 0x6420, 0x6972, 0x6576, 0x2072 ; 7360
007362   6972     setf	0x72, 0x1           
007364   6576     cpfsgt	0x76, 0x1         
007366   2072     addwfc	0x72, 0, 0        
007368   4200     rrncf	0, 0x1, 0              data 0x4200, 0x4F4F, 0x2054, 0x2020 ; 7368
00736a   4f4f     dcfsnz	0x4f, 0x1, 0x1    
00736c   2054     addwfc	0x54, 0, 0        
00736e   2020     addwfc	0x20, 0, 0        
007370   5a20     subwfb	0x20, 0x1, 0          data 0x5A20, 0x4238, 0x6F4E, 0x4B20 ; 7370
007372   4238     rrncf	0x38, 0x1, 0       
007374   6f4e     movwf	0x4e, 0x1          
007376   4b20     infsnz	0x20, 0x1, 0x1    
007378   7265     btg	0x65, 0x1, 0             data 0x7265, 0x656E, 0x206C, 0x6F66 ; 7378
00737a   656e     cpfsgt	0x6e, 0x1         
00737c   206c     addwfc	0x6c, 0, 0        
00737e   6f66     movwf	0x66, 0x1          
007380   6e75     movwf	0x75, 0                data 0x6E75, 0x2E64, 0x000A, 0x6F46 ; 7380
007382   2e64     decfsz	0x64, 0x1, 0      
007384   000a     tblrd	*-                 
007386   6f46     movwf	0x46, 0x1          
007388   6e75     movwf	0x75, 0                data 0x6E75, 0x2064, 0x2061, 0x6F62 ; 7388
00738a   2064     addwfc	0x64, 0, 0        
00738c   2061     addwfc	0x61, 0, 0        
00738e   6f62     movwf	0x62, 0x1          
007390   746f     btg	0x6f, 0x2, 0             data 0x746F, 0x6261, 0x656C, 0x4B20 ; 7390
007392   6261     cpfseq	0x61, 0           
007394   656c     cpfsgt	0x6c, 0x1         
007396   4b20     infsnz	0x20, 0x1, 0x1    
007398   7265     btg	0x65, 0x1, 0             data 0x7265, 0x656E, 0x0A6C, 0x5400 ; 7398
00739a   656e     cpfsgt	0x6e, 0x1         
00739c   0a6c     xorlw	0x6c               
00739e   5400     subfwb	0, 0, 0           
0073a0   6568     cpfsgt	0x68, 0x1             data 0x6568, 0x6B20, 0x7265, 0x656E ; 73A0
0073a2   6b20     clrf	0x20, 0x1           
0073a4   7265     btg	0x65, 0x1, 0         
0073a6   656e     cpfsgt	0x6e, 0x1         
0073a8   206c     addwfc	0x6c, 0, 0            data 0x206C, 0x6E6F, 0x7420, 0x6968 ; 73A8
0073aa   6e6f     movwf	0x6f, 0            
0073ac   7420     btg	0x20, 0x2, 0         
0073ae   6968     setf	0x68, 0x1           
0073b0   2073     addwfc	0x73, 0, 0            data 0x2073, 0x6964, 0x6B73, 0x6920 ; 73B0
0073b2   6964     setf	0x64, 0x1           
0073b4   6b73     clrf	0x73, 0x1           
0073b6   6920     setf	0x20, 0x1           
0073b8   2073     addwfc	0x73, 0, 0            data 0x2073, 0x6F6E, 0x2074, 0x6F63 ; 73B8
0073ba   6f6e     movwf	0x6e, 0x1          
0073bc   2074     addwfc	0x74, 0, 0        
0073be   6f63     movwf	0x63, 0x1          
0073c0   706d     btg	0x6d, 0, 0               data 0x706D, 0x7461, 0x6269, 0x656C ; 73C0
0073c2   7461     btg	0x61, 0x2, 0         
0073c4   6269     cpfseq	0x69, 0           
0073c6   656c     cpfsgt	0x6c, 0x1         
0073c8   7720     btg	0x20, 0x3, 0x1           data 0x7720, 0x7469, 0x2068, 0x6874 ; 73C8
0073ca   7469     btg	0x69, 0x2, 0         
0073cc   2068     addwfc	0x68, 0, 0        
0073ce   6874     setf	0x74, 0             
0073d0   2065     addwfc	0x65, 0, 0            data 0x2065, 0x6168, 0x6472, 0x6177 ; 73D0
0073d2   6168     cpfslt	0x68, 0x1         
0073d4   6472     cpfsgt	0x72, 0           
0073d6   6177     cpfslt	0x77, 0x1         
0073d8   6572     cpfsgt	0x72, 0x1             data 0x6572, 0x0A2E, 0x4200, 0x6F6F ; 73D8
0073da   0a2e     xorlw	0x2e               
0073dc   4200     rrncf	0, 0x1, 0          
0073de   6f6f     movwf	0x6f, 0x1          
0073e0   6974     setf	0x74, 0x1               data 0x6974, 0x676E, 0x2E2E, 0x0A2E ; 73E0
0073e2   676e     tstfsz	0x6e, 0x1         
0073e4   2e2e     decfsz	0x2e, 0x1, 0      
0073e6   0a2e     xorlw	0x2e               
0073e8   cd00     movff	0xd00, 0x199           data 0xCD00, 0x0199, 0x8F21, 0xCD16 ; 73E8
0073ea   0199
0073ec   8f21     bsf	0x21, 0x7, 0x1       
0073ee   cd16     movff	0xd16, 0x1e9       
0073f0   01e9
0073f0   01e9     movlb	0xe9                   data 0x01E9, 0x5BCD, 0xCD15, 0x158C ; 73F0
0073f2   5bcd     subwfb	0xcd, 0x1, 0x1    
0073f4   cd15     movff	0xd15, 0x58c       
0073f6   158c
0073f8   43cd     rrncf	0xcd, 0x1, 0x1         data 0x43CD, 0x3A16, 0x17EF, 0xA5EE ; 73F8
0073fa   3a16     swapf	0x16, 0x1, 0       
0073fc   17ef     andwf	0xef, 0x1, 0x1     
0073fe   a5ee     btfss	0xee, 0x2, 0x1     
007400   2f28     decfsz	0x28, 0x1, 0x1        data 0x2F28, 0xEF3A, 0xEE17, 0x28A4 ; 7400
007402   ef3a     goto	0x1c2e74            
007404   ee17
007406   28a4     incf	0xa4, 0, 0          
007408   3a3d     swapf	0x3d, 0x1, 0           data 0x3A3D, 0x17EF, 0xA6EE, 0x5028 ; 7408
00740a   17ef     andwf	0xef, 0x1, 0x1     
00740c   a6ee     btfss	0xee, 0x3, 0       
00740e   5028     movf	0x28, 0, 0          
007410   ef3a     goto	0x1c2e74                data 0xEF3A, 0xEE17, 0x28A7, 0x3A53 ; 7410
007412   ee17
007414   28a7     incf	0xa7, 0, 0          
007416   3a53     swapf	0x53, 0x1, 0       
007418   17ef     andwf	0xef, 0x1, 0x1         data 0x17EF, 0x8BEE, 0x61CA, 0x3A16 ; 7418
00741a   8bee     bsf	0xee, 0x5, 0x1       
00741c   61ca     cpfslt	0xca, 0x1         
00741e   3a16     swapf	0x16, 0x1, 0       
007420   17ef     andwf	0xef, 0x1, 0x1         data 0x17EF, 0x8AEE, 0x79CA, 0x3A16 ; 7420
007422   8aee     bsf	0xee, 0x5, 0         
007424   79ca     btg	0xca, 0x4, 0x1       
007426   3a16     swapf	0x16, 0x1, 0       
007428   17ef     andwf	0xef, 0x1, 0x1         data 0x17EF, 0x80EE, 0x8CCA, 0x1816 ; 7428
00742a   80ee     bsf	0xee, 0, 0           
00742c   8cca     bsf	0xca, 0x6, 0         
00742e   1816     xorwf	0x16, 0, 0         
007430   3e50     incfsz	0x50, 0x1, 0          data 0x3E50, 0x3200, 0x17EF, 0x8E3A ; 7430
007432   3200     rrcf	0, 0x1, 0           
007434   17ef     andwf	0xef, 0x1, 0x1     
007436   8e3a     bsf	0x3a, 0x7, 0         
007438   3c17     incfsz	0x17, 0, 0            data 0x3C17, 0x8E32, 0xEE17, 0x2008 ; 7438
00743a   8e32     bsf	0x32, 0x7, 0         
00743c   ee17     lfsr	0x1, 0x708          
00743e   2008
007440   3240     rrcf	0x40, 0x1, 0            data 0x3240, 0x178E, 0x3B18, 0x003E ; 7440
007442   178e     andwf	0x8e, 0x1, 0x1     
007444   3b18     swapf	0x18, 0x1, 0x1     
007446   003e     dw	0x3e  ;unknown opcode 
007448   ef32     goto	0x142e64                data 0xEF32, 0x3A17, 0x178E, 0x00EE ; 7448
00744a   3a17
00744c   178e     andwf	0x8e, 0x1, 0x1     
00744e   00ee     dw	0xee  ;unknown opcode 
007450   0628     decf	0x28, 0x1, 0            data 0x0628, 0x323D, 0x178E, 0x2918 ; 7450
007452   323d     rrcf	0x3d, 0x1, 0        
007454   178e     andwf	0x8e, 0x1, 0x1     
007456   2918     incf	0x18, 0, 0x1        
007458   083e     sublw	0x3e                   data 0x083E, 0x323D, 0x178E, 0x2118 ; 7458
00745a   323d     rrcf	0x3d, 0x1, 0        
00745c   178e     andwf	0x8e, 0x1, 0x1     
00745e   2118     addwfc	0x18, 0, 0x1      
007460   003e     dw	0x3e  ;unknown opcode     data 0x003E, 0xEF32, 0x2117, 0x17A7 ; 7460
007462   ef32     goto	0x22e64             
007464   2117
007466   17a7     andwf	0xa7, 0x1, 0x1     
007468   0818     sublw	0x18                   data 0x0818, 0x003E, 0xEF32, 0x2117 ; 7468
00746a   003e     dw	0x3e  ;unknown opcode 
00746c   ef32     goto	0x22e64             
00746e   2117
007470   17b7     andwf	0xb7, 0x1, 0x1         data 0x17B7, 0x8E3A, 0xCB17, 0x8527 ; 7470
007472   8e3a     bsf	0x3a, 0x7, 0         
007474   cb17     movff	0xb17, 0x527       
007476   8527
007478   0130     movlb	0x30                   data 0x0130, 0x6F24, 0x235E, 0xEB56 ; 7478
00747a   6f24     movwf	0x24, 0x1          
00747c   235e     addwfc	0x5e, 0x1, 0x1    
00747e   eb56     dw	0xeb56  ;unknown opcode 
007480   cde9     movff	0xde9, 0x4b6           data 0xCDE9, 0x14B6, 0x8F21, 0x0E17 ; 7480
007482   14b6
007484   8f21     bsf	0x21, 0x7, 0x1       
007486   0e17     movlw	0x17               
007488   7e00     btg	0, 0x7, 0                data 0x7E00, 0xC0CD, 0x2301, 0xCD7E ; 7488
00748a   c0cd     movff	0xcd, 0x301        
00748c   2301
00748e   cd7e     movff	0xd7e, 0x1ae       
007490   01ae
007490   01ae     movlb	0xae                   data 0x01AE, 0x4623, 0x3A23, 0x178E ; 7490
007492   4623     rlncf	0x23, 0x1, 0       
007494   3a23     swapf	0x23, 0x1, 0       
007496   178e     andwf	0x8e, 0x1, 0x1     
007498   28b9     incf	0xb9, 0, 0              data 0x28B9, 0xDB0A, 0xE605, 0xD37F ; 7498
00749a   db0a     rcall	0x7ab0             
00749c   e605     bn	0x74a8                
00749e   d37f     bra	0x7b9e               
0074a0   1005     iorwf	0x5, 0, 0              data 0x1005, 0x18F8, 0xDB08, 0xF605 ; 74A0
0074a2   18f8     xorwf	0xf8, 0, 0         
0074a4   db08     rcall	0x7ab6             
0074a6   f605     dw	0xf605  ;unknown opcode 
0074a8   d380     bra	0x7baa                   data 0xD380, 0x1005, 0x0CF8, 0x083E ; 74A8
0074aa   1005     iorwf	0x5, 0, 0          
0074ac   0cf8     retlw	0xf8               
0074ae   083e     sublw	0x3e               
0074b0   20a9     addwfc	0xa9, 0, 0            data 0x20A9, 0xC3D6, 0x13F8, 0x033E ; 74B0
0074b2   c3d6     movff	0x3d6, 0x3f8       
0074b4   13f8
0074b6   033e     mulwf	0x3e, 0x1          
0074b8   aecd     btfss	0xcd, 0x7, 0           data 0xAECD, 0x3E01, 0xCD04, 0x01C0 ; 74B8
0074ba   3e01     incfsz	0x1, 0x1, 0       
0074bc   cd04     movff	0xd04, 0x1c0       
0074be   01c0
0074c0   003e     dw	0x3e  ;unknown opcode     data 0x003E, 0x5BCD, 0xCD04, 0x01E9 ; 74C0
0074c2   5bcd     subwfb	0xcd, 0x1, 0x1    
0074c4   cd04     movff	0xd04, 0x1e9       
0074c6   01e9
0074c8   083e     sublw	0x3e                   data 0x083E, 0xAECD, 0x2101, 0x0477 ; 74C8
0074ca   aecd     btfss	0xcd, 0x7, 0       
0074cc   2101     addwfc	0x1, 0, 0x1       
0074ce   0477     decf	0x77, 0, 0          
0074d0   8e3a     bsf	0x3a, 0x7, 0             data 0x8E3A, 0xEE17, 0x2000, 0x3E07 ; 74D0
0074d2   ee17     lfsr	0x1, 0x700          
0074d4   2000
0074d6   3e07     incfsz	0x7, 0x1, 0       
0074d8   cd04     movff	0xd04, 0x208           data 0xCD04, 0x0208, 0x0518, 0x043E ; 74D8
0074da   0208
0074dc   0518     decf	0x18, 0, 0x1        
0074de   043e     decf	0x3e, 0, 0          
0074e0   0fcd     addlw	0xcd                   data 0x0FCD, 0x3E02, 0xD32D, 0x2B05 ; 74E0
0074e2   3e02     incfsz	0x2, 0x1, 0       
0074e4   d32d     bra	0x7b40               
0074e6   2b05     incf	0x5, 0x1, 0x1       
0074e8   8e3a     bsf	0x3a, 0x7, 0             data 0x8E3A, 0xEE17, 0x2001, 0x3E07 ; 74E8
0074ea   ee17     lfsr	0x1, 0x701          
0074ec   2001
0074ee   3e07     incfsz	0x7, 0x1, 0       
0074f0   cd02     movff	0xd02, 0x208           data 0xCD02, 0x0208, 0x0518, 0x023E ; 74F0
0074f2   0208
0074f4   0518     decf	0x18, 0, 0x1        
0074f6   023e     mulwf	0x3e, 0            
0074f8   0fcd     addlw	0xcd                   data 0x0FCD, 0x3E02, 0xD32D, 0x2B05 ; 74F8
0074fa   3e02     incfsz	0x2, 0x1, 0       
0074fc   d32d     bra	0x7b58               
0074fe   2b05     incf	0x5, 0x1, 0x1       
007500   8e3a     bsf	0x3a, 0x7, 0             data 0x8E3A, 0xEE17, 0x2002, 0x3E07 ; 7500
007502   ee17     lfsr	0x1, 0x702          
007504   2002
007506   3e07     incfsz	0x7, 0x1, 0       
007508   cd02     movff	0xd02, 0x208           data 0xCD02, 0x0208, 0x0518, 0x023E ; 7508
00750a   0208
00750c   0518     decf	0x18, 0, 0x1        
00750e   023e     mulwf	0x3e, 0            
007510   0fcd     addlw	0xcd                   data 0x0FCD, 0x3E02, 0xD320, 0x2B05 ; 7510
007512   3e02     incfsz	0x2, 0x1, 0       
007514   d320     bra	0x7b56               
007516   2b05     incf	0x5, 0x1, 0x1       
007518   8e3a     bsf	0x3a, 0x7, 0             data 0x8E3A, 0xEE17, 0x2003, 0x3E07 ; 7518
00751a   ee17     lfsr	0x1, 0x703          
00751c   2003
00751e   3e07     incfsz	0x7, 0x1, 0       
007520   cd02     movff	0xd02, 0x208           data 0xCD02, 0x0208, 0x0518, 0x023E ; 7520
007522   0208
007524   0518     decf	0x18, 0, 0x1        
007526   023e     mulwf	0x3e, 0            
007528   0fcd     addlw	0xcd                   data 0x0FCD, 0x3E02, 0xD33A, 0x2B05 ; 7528
00752a   3e02     incfsz	0x2, 0x1, 0       
00752c   d33a     bra	0x7ba2               
00752e   2b05     incf	0x5, 0x1, 0x1       
007530   8e3a     bsf	0x3a, 0x7, 0             data 0x8E3A, 0xEE17, 0x2004, 0x3E07 ; 7530
007532   ee17     lfsr	0x1, 0x704          
007534   2004
007536   3e07     incfsz	0x7, 0x1, 0       
007538   cd02     movff	0xd02, 0x208           data 0xCD02, 0x0208, 0x0518, 0x023E ; 7538
00753a   0208
00753c   0518     decf	0x18, 0, 0x1        
00753e   023e     mulwf	0x3e, 0            
007540   0fcd     addlw	0xcd                   data 0x0FCD, 0x3E02, 0xD33A, 0x2B05 ; 7540
007542   3e02     incfsz	0x2, 0x1, 0       
007544   d33a     bra	0x7bba               
007546   2b05     incf	0x5, 0x1, 0x1       
007548   8e3a     bsf	0x3a, 0x7, 0             data 0x8E3A, 0xEE17, 0x2005, 0x3E06 ; 7548
00754a   ee17     lfsr	0x1, 0x705          
00754c   2005
00754e   3e06     incfsz	0x6, 0x1, 0       
007550   cd02     movff	0xd02, 0x208           data 0xCD02, 0x0208, 0x3EC9, 0xCD02 ; 7550
007552   0208
007554   3ec9     incfsz	0xc9, 0x1, 0      
007556   cd02     movff	0xd02, 0x20f       
007558   020f
007558   020f     mulwf	0xf, 0                 data 0x020F, 0x3EC9, 0xCD0F, 0x01AE ; 7558
00755a   3ec9     incfsz	0xc9, 0x1, 0      
00755c   cd0f     movff	0xd0f, 0x1ae       
00755e   01ae
007560   063e     decf	0x3e, 0x1, 0            data 0x063E, 0xC0CD, 0x3A01, 0x0104 ; 7560
007562   c0cd     movff	0xcd, 0xa01        
007564   3a01
007566   0104     movlb	0x4                
007568   1717     andwf	0x17, 0x1, 0x1         data 0x1717, 0x0521, 0x8501, 0x0130 ; 7568
00756a   0521     decf	0x21, 0, 0x1        
00756c   8501     bsf	0x1, 0x2, 0x1        
00756e   0130     movlb	0x30               
007570   6f24     movwf	0x24, 0x1              data 0x6F24, 0x043E, 0x05CD, 0x2107 ; 7570
007572   043e     decf	0x3e, 0, 0          
007574   05cd     decf	0xcd, 0, 0x1        
007576   2107     addwfc	0x7, 0, 0x1       
007578   07a4     decf	0xa4, 0x1, 0x1          data 0x07A4, 0x023E, 0x0FCD, 0x3E02 ; 7578
00757a   023e     mulwf	0x3e, 0            
00757c   0fcd     addlw	0xcd               
00757e   3e02     incfsz	0x2, 0x1, 0       
007580   d32e     bra	0x7bde                   data 0xD32E, 0x2105, 0x07A3, 0x023E ; 7580
007582   2105     addwfc	0x5, 0, 0x1       
007584   07a3     decf	0xa3, 0x1, 0x1      
007586   023e     mulwf	0x3e, 0            
007588   0fcd     addlw	0xcd                   data 0x0FCD, 0xC902, 0x083E, 0xC0CD ; 7588
00758a   c902     movff	0x902, 0x83e       
00758c   083e
00758e   c0cd     movff	0xcd, 0xe01        
007590   3e01
007590   3e01     incfsz	0x1, 0x1, 0           data 0x3E01, 0xCD0F, 0x01AE, 0x153A ; 7590
007592   cd0f     movff	0xd0f, 0x1ae       
007594   01ae
007596   153a     andwf	0x3a, 0, 0x1       
007598   2101     addwfc	0x1, 0, 0x1           data 0x2101, 0x17C7, 0x27CB, 0x3085 ; 7598
00759a   17c7     andwf	0xc7, 0x1, 0x1     
00759c   27cb     addwf	0xcb, 0x1, 0x1     
00759e   3085     rrcf	0x85, 0, 0          
0075a0   2401     addwf	0x1, 0, 0              data 0x2401, 0x5E6F, 0x5623, 0xCDEB ; 75A0
0075a2   5e6f     subwf	0x6f, 0x1, 0       
0075a4   5623     subfwb	0x23, 0x1, 0      
0075a6   cdeb     movff	0xdeb, 0x1e9       
0075a8   01e9
0075a8   01e9     movlb	0xe9                   data 0x01E9, 0xCDC9, 0x02DD, 0x81C3 ; 75A8
0075aa   cdc9     movff	0xdc9, 0x2dd       
0075ac   02dd
0075ae   81c3     bsf	0xc3, 0, 0x1         
0075b0   cd14     movff	0xd14, 0x30b           data 0xCD14, 0x030B, 0x81C3, 0xCD14 ; 75B0
0075b2   030b
0075b4   81c3     bsf	0xc3, 0, 0x1         
0075b6   cd14     movff	0xd14, 0x33a       
0075b8   033a
0075b8   033a     mulwf	0x3a, 0x1              data 0x033A, 0x81C3, 0xCD14, 0x038A ; 75B8
0075ba   81c3     bsf	0xc3, 0, 0x1         
0075bc   cd14     movff	0xd14, 0x38a       
0075be   038a
0075c0   81c3     bsf	0xc3, 0, 0x1             data 0x81C3, 0xCD14, 0x03B4, 0x81C3 ; 75C0
0075c2   cd14     movff	0xd14, 0x3b4       
0075c4   03b4
0075c6   81c3     bsf	0xc3, 0, 0x1         
0075c8   cd14     movff	0xd14, 0x3de           data 0xCD14, 0x03DE, 0x81C3, 0x3A14 ; 75C8
0075ca   03de
0075cc   81c3     bsf	0xc3, 0, 0x1         
0075ce   3a14     swapf	0x14, 0x1, 0       
0075d0   0104     movlb	0x4                    data 0x0104, 0xEE3C, 0x2004, 0x3E02 ; 75D0
0075d2   ee3c     lfsr	0x3, 0xc04          
0075d4   2004
0075d6   3e02     incfsz	0x2, 0x1, 0       
0075d8   ee04     lfsr	0, 0x404                data 0xEE04, 0x3204, 0x0104, 0x5BCD ; 75D8
0075da   3204
0075dc   0104     movlb	0x4                
0075de   5bcd     subwfb	0xcd, 0x1, 0x1    
0075e0   c315     movff	0x315, 0x481           data 0xC315, 0x1481, 0x153A, 0x3C01 ; 75E0
0075e2   1481
0075e4   153a     andwf	0x3a, 0, 0x1       
0075e6   3c01     incfsz	0x1, 0, 0         
0075e8   04ee     decf	0xee, 0, 0              data 0x04EE, 0x0220, 0x043E, 0x04EE ; 75E8
0075ea   0220     mulwf	0x20, 0            
0075ec   043e     decf	0x3e, 0, 0          
0075ee   04ee     decf	0xee, 0, 0          
0075f0   1532     andwf	0x32, 0, 0x1           data 0x1532, 0xCD01, 0x158C, 0x81C3 ; 75F0
0075f2   cd01     movff	0xd01, 0x58c       
0075f4   158c
0075f6   81c3     bsf	0xc3, 0, 0x1         
0075f8   cd14     movff	0xd14, 0x2f4           data 0xCD14, 0x02F4, 0x81C3, 0xCD14 ; 75F8
0075fa   02f4
0075fc   81c3     bsf	0xc3, 0, 0x1         
0075fe   cd14     movff	0xd14, 0x314       
007600   0314
007600   0314     mulwf	0x14, 0x1              data 0x0314, 0x81C3, 0xCD14, 0x0343 ; 7600
007602   81c3     bsf	0xc3, 0, 0x1         
007604   cd14     movff	0xd14, 0x343       
007606   0343
007608   81c3     bsf	0xc3, 0, 0x1             data 0x81C3, 0xCD14, 0x0393, 0x81C3 ; 7608
00760a   cd14     movff	0xd14, 0x393       
00760c   0393
00760e   81c3     bsf	0xc3, 0, 0x1         
007610   cd14     movff	0xd14, 0x3bd           data 0xCD14, 0x03BD, 0x81C3, 0xCD14 ; 7610
007612   03bd
007614   81c3     bsf	0xc3, 0, 0x1         
007616   cd14     movff	0xd14, 0x3e7       
007618   03e7
007618   03e7     mulwf	0xe7, 0x1              data 0x03E7, 0x81C3, 0x3A14, 0x0104 ; 7618
00761a   81c3     bsf	0xc3, 0, 0x1         
00761c   3a14     swapf	0x14, 0x1, 0       
00761e   0104     movlb	0x4                
007620   00ee     dw	0xee  ;unknown opcode     data 0x00EE, 0x0220, 0x043E, 0x323D ; 7620
007622   0220     mulwf	0x20, 0            
007624   043e     decf	0x3e, 0, 0          
007626   323d     rrcf	0x3d, 0x1, 0        
007628   0104     movlb	0x4                    data 0x0104, 0x5BCD, 0xC315, 0x1481 ; 7628
00762a   5bcd     subwfb	0xcd, 0x1, 0x1    
00762c   c315     movff	0x315, 0x481       
00762e   1481
007630   153a     andwf	0x3a, 0, 0x1           data 0x153A, 0xEE01, 0x2000, 0x3E02 ; 7630
007632   ee01     lfsr	0, 0x100            
007634   2000
007636   3e02     incfsz	0x2, 0x1, 0       
007638   3d04     incfsz	0x4, 0, 0x1           data 0x3D04, 0x1532, 0xCD01, 0x158C ; 7638
00763a   1532     andwf	0x32, 0, 0x1       
00763c   cd01     movff	0xd01, 0x58c       
00763e   158c
007640   81c3     bsf	0xc3, 0, 0x1             data 0x81C3, 0xF314, 0x003E, 0x06D3 ; 7640
007642   f314     dw	0xf314  ;unknown opcode 
007644   003e     dw	0x3e  ;unknown opcode 
007646   06d3     decf	0xd3, 0x1, 0        
007648   06db     decf	0xdb, 0x1, 0            data 0x06DB, 0x4FCB, 0x0720, 0x03DB ; 7648
00764a   4fcb     dcfsnz	0xcb, 0x1, 0x1    
00764c   0720     decf	0x20, 0x1, 0x1      
00764e   03db     mulwf	0xdb, 0x1          
007650   ef32     goto	0x102e64                data 0xEF32, 0x1817, 0x3E05, 0x3200 ; 7650
007652   1817
007654   3e05     incfsz	0x5, 0x1, 0       
007656   3200     rrcf	0, 0x1, 0           
007658   17ef     andwf	0xef, 0x1, 0x1         data 0x17EF, 0x183A, 0xD301, 0xFB06 ; 7658
00765a   183a     xorwf	0x3a, 0, 0         
00765c   d301     bra	0x7c60               
00765e   fb06     dw	0xfb06  ;unknown opcode 
007660   3ec9     incfsz	0xc9, 0x1, 0          data 0x3EC9, 0x3200, 0x17EF, 0x033E ; 7660
007662   3200     rrcf	0, 0x1, 0           
007664   17ef     andwf	0xef, 0x1, 0x1     
007666   033e     mulwf	0x3e, 0x1          
007668   0432     decf	0x32, 0, 0              data 0x0432, 0xCD01, 0x155B, 0x003E ; 7668
00766a   cd01     movff	0xd01, 0x55b       
00766c   155b
00766e   003e     dw	0x3e  ;unknown opcode 
007670   1532     andwf	0x32, 0, 0x1           data 0x1532, 0xCD01, 0x158C, 0x81C3 ; 7670
007672   cd01     movff	0xd01, 0x58c       
007674   158c
007676   81c3     bsf	0xc3, 0, 0x1         
007678   3a14     swapf	0x14, 0x1, 0           data 0x3A14, 0x0104, 0x0106, 0x45CD ; 7678
00767a   0104     movlb	0x4                
00767c   0106     movlb	0x6                
00767e   45cd     rlncf	0xcd, 0, 0x1       
007680   3a01     swapf	0x1, 0x1, 0            data 0x3A01, 0x0115, 0x0006, 0x45CD ; 7680
007682   0115     movlb	0x15               
007684   0006     pop                      
007686   45cd     rlncf	0xcd, 0, 0x1       
007688   c301     movff	0x301, 0x68c           data 0xC301, 0x168C, 0x8DC3, 0x0A01 ; 7688
00768a   168c
00768c   8dc3     bsf	0xc3, 0x6, 0x1       
00768e   0a01     xorlw	0x1                
007690   2020     addwfc	0x20, 0, 0            data 0x2020, 0x385A, 0x2030, 0x7250 ; 7690
007692   385a     swapf	0x5a, 0, 0         
007694   2030     addwfc	0x30, 0, 0        
007696   7250     btg	0x50, 0x1, 0         
007698   6a6f     clrf	0x6f, 0                 data 0x6A6F, 0x6365, 0x2074, 0x614D ; 7698
00769a   6365     cpfseq	0x65, 0x1         
00769c   2074     addwfc	0x74, 0, 0        
00769e   614d     cpfslt	0x4d, 0x1         
0076a0   6b72     clrf	0x72, 0x1               data 0x6B72, 0x3220, 0x203A, 0x4942 ; 76A0
0076a2   3220     rrcf	0x20, 0x1, 0        
0076a4   203a     addwfc	0x3a, 0, 0        
0076a6   4942     infsnz	0x42, 0, 0x1      
0076a8   534f     movf	0x4f, 0x1, 0x1          data 0x534F, 0x0A0A, 0x2020, 0x6954 ; 76A8
0076aa   0a0a     xorlw	0xa                
0076ac   2020     addwfc	0x20, 0, 0        
0076ae   6954     setf	0x54, 0x1           
0076b0   656d     cpfsgt	0x6d, 0x1             data 0x656D, 0x0A3A, 0x2020, 0x4420 ; 76B0
0076b2   0a3a     xorlw	0x3a               
0076b4   2020     addwfc	0x20, 0, 0        
0076b6   4420     rlncf	0x20, 0, 0         
0076b8   776f     btg	0x6f, 0x3, 0x1           data 0x776F, 0x202C, 0x7979, 0x7979 ; 76B8
0076ba   202c     addwfc	0x2c, 0, 0        
0076bc   7979     btg	0x79, 0x4, 0x1       
0076be   7979     btg	0x79, 0x4, 0x1       
0076c0   6d2d     negf	0x2d, 0x1               data 0x6D2D, 0x2D6D, 0x6464, 0x4820 ; 76C0
0076c2   2d6d     decfsz	0x6d, 0, 0x1      
0076c4   6464     cpfsgt	0x64, 0           
0076c6   4820     infsnz	0x20, 0, 0        
0076c8   3a48     swapf	0x48, 0x1, 0           data 0x3A48, 0x4D4D, 0x533A, 0x0A53 ; 76C8
0076ca   4d4d     dcfsnz	0x4d, 0, 0x1      
0076cc   533a     movf	0x3a, 0x1, 0x1      
0076ce   0a53     xorlw	0x53               
0076d0   200a     addwfc	0xa, 0, 0             data 0x200A, 0x4320, 0x6F6C, 0x6B63 ; 76D0
0076d2   4320     rrncf	0x20, 0x1, 0x1     
0076d4   6f6c     movwf	0x6c, 0x1          
0076d6   6b63     clrf	0x63, 0x1           
0076d8   5320     movf	0x20, 0x1, 0x1          data 0x5320, 0x6570, 0x6465, 0x203A ; 76D8
0076da   6570     cpfsgt	0x70, 0x1         
0076dc   6465     cpfsgt	0x65, 0           
0076de   203a     addwfc	0x3a, 0, 0        
0076e0   3030     rrcf	0x30, 0, 0              data 0x3030, 0x302E, 0x2030, 0x484D ; 76E0
0076e2   302e     rrcf	0x2e, 0, 0          
0076e4   2030     addwfc	0x30, 0, 0        
0076e6   484d     infsnz	0x4d, 0, 0        
0076e8   0a7a     xorlw	0x7a                   data 0x0A7A, 0x200A, 0x4220, 0x6F6F ; 76E8
0076ea   200a     addwfc	0xa, 0, 0         
0076ec   4220     rrncf	0x20, 0x1, 0       
0076ee   6f6f     movwf	0x6f, 0x1          
0076f0   2074     addwfc	0x74, 0, 0            data 0x2074, 0x724F, 0x6564, 0x3A72 ; 76F0
0076f2   724f     btg	0x4f, 0x1, 0         
0076f4   6564     cpfsgt	0x64, 0x1         
0076f6   3a72     swapf	0x72, 0x1, 0       
0076f8   2020     addwfc	0x20, 0, 0            data 0x2020, 0x4453, 0x202C, 0x5355 ; 76F8
0076fa   4453     rlncf	0x53, 0, 0         
0076fc   202c     addwfc	0x2c, 0, 0        
0076fe   5355     movf	0x55, 0x1, 0x1      
007700   0a42     xorlw	0x42                   data 0x0A42, 0x2D0A, 0x2D2D, 0x2D2D ; 7700
007702   2d0a     decfsz	0xa, 0, 0x1       
007704   2d2d     decfsz	0x2d, 0, 0x1      
007706   2d2d     decfsz	0x2d, 0, 0x1      
007708   2d2d     decfsz	0x2d, 0, 0x1          data 0x2D2D, 0x2D2D, 0x2D2D, 0x2D2D ; 7708
00770a   2d2d     decfsz	0x2d, 0, 0x1      
00770c   2d2d     decfsz	0x2d, 0, 0x1      
00770e   2d2d     decfsz	0x2d, 0, 0x1      
007710   2d2d     decfsz	0x2d, 0, 0x1          data 0x2D2D, 0x2D2D, 0x2D2D, 0x2D2D ; 7710
007712   2d2d     decfsz	0x2d, 0, 0x1      
007714   2d2d     decfsz	0x2d, 0, 0x1      
007716   2d2d     decfsz	0x2d, 0, 0x1      
007718   2d2d     decfsz	0x2d, 0, 0x1          data 0x2D2D, 0x2D2D, 0x2D2D, 0x2D2D ; 7718
00771a   2d2d     decfsz	0x2d, 0, 0x1      
00771c   2d2d     decfsz	0x2d, 0, 0x1      
00771e   2d2d     decfsz	0x2d, 0, 0x1      
007720   2d2d     decfsz	0x2d, 0, 0x1          data 0x2D2D, 0x200A, 0x3146, 0x3D30 ; 7720
007722   200a     addwfc	0xa, 0, 0         
007724   3146     rrcf	0x46, 0, 0x1        
007726   3d30     incfsz	0x30, 0, 0x1      
007728   6153     cpfslt	0x53, 0x1             data 0x6153, 0x6576, 0x2620, 0x5120 ; 7728
00772a   6576     cpfsgt	0x76, 0x1         
00772c   2620     addwf	0x20, 0x1, 0       
00772e   5120     movf	0x20, 0, 0x1        
007730   6975     setf	0x75, 0x1               data 0x6975, 0x2074, 0x2020, 0x3146 ; 7730
007732   2074     addwfc	0x74, 0, 0        
007734   2020     addwfc	0x20, 0, 0        
007736   3146     rrcf	0x46, 0, 0x1        
007738   3d31     incfsz	0x31, 0, 0x1          data 0x3D31, 0x6F4C, 0x6461, 0x4420 ; 7738
00773a   6f4c     movwf	0x4c, 0x1          
00773c   6461     cpfsgt	0x61, 0           
00773e   4420     rlncf	0x20, 0, 0         
007740   6665     tstfsz	0x65, 0               data 0x6665, 0x7561, 0x746C, 0x2073 ; 7740
007742   7561     btg	0x61, 0x2, 0x1       
007744   746c     btg	0x6c, 0x2, 0         
007746   2073     addwfc	0x73, 0, 0        
007748   2020     addwfc	0x20, 0, 0            data 0x2020, 0x5345, 0x3D43, 0x6143 ; 7748
00774a   5345     movf	0x45, 0x1, 0x1      
00774c   3d43     incfsz	0x43, 0, 0x1      
00774e   6143     cpfslt	0x43, 0x1         
007750   636e     cpfseq	0x6e, 0x1             data 0x636E, 0x6C65, 0x200A, 0x654C ; 7750
007752   6c65     negf	0x65, 0             
007754   200a     addwfc	0xa, 0, 0         
007756   654c     cpfsgt	0x4c, 0x1         
007758   7466     btg	0x66, 0x2, 0             data 0x7466, 0x522F, 0x6769, 0x7468 ; 7758
00775a   522f     movf	0x2f, 0x1, 0        
00775c   6769     tstfsz	0x69, 0x1         
00775e   7468     btg	0x68, 0x2, 0         
007760   4120     rrncf	0x20, 0, 0x1           data 0x4120, 0x7272, 0x776F, 0x6B20 ; 7760
007762   7272     btg	0x72, 0x1, 0         
007764   776f     btg	0x6f, 0x3, 0x1       
007766   6b20     clrf	0x20, 0x1           
007768   7965     btg	0x65, 0x4, 0x1           data 0x7965, 0x2073, 0x203D, 0x6573 ; 7768
00776a   2073     addwfc	0x73, 0, 0        
00776c   203d     addwfc	0x3d, 0, 0        
00776e   6573     cpfsgt	0x73, 0x1         
007770   656c     cpfsgt	0x6c, 0x1             data 0x656C, 0x7463, 0x6620, 0x6569 ; 7770
007772   7463     btg	0x63, 0x2, 0         
007774   6620     tstfsz	0x20, 0           
007776   6569     cpfsgt	0x69, 0x1         
007778   646c     cpfsgt	0x6c, 0               data 0x646C, 0x202C, 0x7055, 0x442F ; 7778
00777a   202c     addwfc	0x2c, 0, 0        
00777c   7055     btg	0x55, 0, 0           
00777e   442f     rlncf	0x2f, 0, 0         
007780   776f     btg	0x6f, 0x3, 0x1           data 0x776F, 0x206E, 0x203D, 0x6863 ; 7780
007782   206e     addwfc	0x6e, 0, 0        
007784   203d     addwfc	0x3d, 0, 0        
007786   6863     setf	0x63, 0             
007788   6e61     movwf	0x61, 0                data 0x6E61, 0x6567, 0x000A, 0x0400 ; 7788
00778a   6567     cpfsgt	0x67, 0x1         
00778c   000a     tblrd	*-                 
00778e   0400     decf	0, 0, 0             
007790   0408     decf	0x8, 0, 0               data 0x0408, 0x0D04, 0x0402, 0x0210 ; 7790
007792   0d04     mullw	0x4                
007794   0402     decf	0x2, 0, 0           
007796   0210     mulwf	0x10, 0            
007798   1304     iorwf	0x4, 0x1, 0x1          data 0x1304, 0x0402, 0x0216, 0x1904 ; 7798
00779a   0402     decf	0x2, 0, 0           
00779c   0216     mulwf	0x16, 0            
00779e   1904     xorwf	0x4, 0, 0x1        
0077a0   0602     decf	0x2, 0x1, 0             data 0x0602, 0x050F, 0x0F08, 0xAB07 ; 77A0
0077a2   050f     decf	0xf, 0, 0x1         
0077a4   0f08     addlw	0x8                
0077a6   ab07     btfss	0x7, 0x5, 0x1      
0077a8   b115     btfsc	0x15, 0, 0x1           data 0xB115, 0xB715, 0xBD15, 0xC315 ; 77A8
0077aa   b715     btfsc	0x15, 0x3, 0x1     
0077ac   bd15     btfsc	0x15, 0x6, 0x1     
0077ae   c315     movff	0x315, 0x915       
0077b0   c915
0077b0   c915     movff	0x915, 0xf15           data 0xC915, 0xCF15, 0xE415, 0xF915 ; 77B0
0077b2   cf15
0077b4   e415     bov	0x77e0               
0077b6   f915     dw	0xf915  ;unknown opcode 
0077b8   ff15     dw	0xff15  ;unknown opcode     data 0xFF15, 0x0515, 0x0B16, 0x1116 ; 77B8
0077ba   0515     decf	0x15, 0, 0x1        
0077bc   0b16     andlw	0x16               
0077be   1116     iorwf	0x16, 0, 0x1       
0077c0   1716     andwf	0x16, 0x1, 0x1         data 0x1716, 0x1D16, 0x3016, 0xCF16 ; 77C0
0077c2   1d16     comf	0x16, 0, 0x1        
0077c4   3016     rrcf	0x16, 0, 0          
0077c6   cf16     movff	0xf16, 0x717       
0077c8   d717
0077c8   d717     bra	0x75f8                   data 0xD717, 0xDF17, 0xE717, 0x5317 ; 77C8
0077ca   df17     rcall	0x75fa             
0077cc   e717     bnn	0x77fc               
0077ce   5317     movf	0x17, 0x1, 0x1      
0077d0   2044     addwfc	0x44, 0, 0            data 0x2044, 0x2020, 0x2020, 0x5500 ; 77D0
0077d2   2020     addwfc	0x20, 0, 0        
0077d4   2020     addwfc	0x20, 0, 0        
0077d6   5500     subfwb	0, 0, 0x1         
0077d8   4253     rrncf	0x53, 0x1, 0           data 0x4253, 0x2020, 0x2020, 0x5300 ; 77D8
0077da   2020     addwfc	0x20, 0, 0        
0077dc   2020     addwfc	0x20, 0, 0        
0077de   5300     movf	0, 0x1, 0x1         
0077e0   2c44     decfsz	0x44, 0, 0            data 0x2C44, 0x5520, 0x4253, 0x5500 ; 77E0
0077e2   5520     subfwb	0x20, 0, 0x1      
0077e4   4253     rrncf	0x53, 0x1, 0       
0077e6   5500     subfwb	0, 0, 0x1         
0077e8   4253     rrncf	0x53, 0x1, 0           data 0x4253, 0x202C, 0x4453, 0x0000 ; 77E8
0077ea   202c     addwfc	0x2c, 0, 0        
0077ec   4453     rlncf	0x53, 0, 0         
0077ee   0000     nop                      
0077f0   6572     cpfsgt	0x72, 0x1             data 0x6572, 0x6461, 0x7420, 0x6D69 ; 77F0
0077f2   6461     cpfsgt	0x61, 0           
0077f4   7420     btg	0x20, 0x2, 0         
0077f6   6d69     negf	0x69, 0x1           
0077f8   6465     cpfsgt	0x65, 0               data 0x6465, 0x6F20, 0x7475, 0x000A ; 77F8
0077fa   6f20     movwf	0x20, 0x1          
0077fc   7475     btg	0x75, 0x2, 0         
0077fe   000a     tblrd	*-                 
007800   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7800
007802   0000     nop                      
007804   0000     nop                      
007806   0000     nop                      
007808   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7808
00780a   0000     nop                      
00780c   0000     nop                      
00780e   0000     nop                      
007810   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7810
007812   0000     nop                      
007814   0000     nop                      
007816   0000     nop                      
007818   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7818
00781a   0000     nop                      
00781c   0000     nop                      
00781e   0000     nop                      
007820   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7820
007822   0000     nop                      
007824   0000     nop                      
007826   0000     nop                      
007828   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7828
00782a   0000     nop                      
00782c   0000     nop                      
00782e   0000     nop                      
007830   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7830
007832   0000     nop                      
007834   0000     nop                      
007836   0000     nop                      
007838   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7838
00783a   0000     nop                      
00783c   0000     nop                      
00783e   0000     nop                      
007840   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7840
007842   0000     nop                      
007844   0000     nop                      
007846   0000     nop                      
007848   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7848
00784a   0000     nop                      
00784c   0000     nop                      
00784e   0000     nop                      
007850   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7850
007852   0000     nop                      
007854   0000     nop                      
007856   0000     nop                      
007858   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7858
00785a   0000     nop                      
00785c   0000     nop                      
00785e   0000     nop                      
007860   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7860
007862   0000     nop                      
007864   0000     nop                      
007866   0000     nop                      
007868   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7868
00786a   0000     nop                      
00786c   0000     nop                      
00786e   0000     nop                      
007870   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7870
007872   0000     nop                      
007874   0000     nop                      
007876   0000     nop                      
007878   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7878
00787a   0000     nop                      
00787c   0000     nop                      
00787e   0000     nop                      
007880   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7880
007882   0000     nop                      
007884   0000     nop                      
007886   0000     nop                      
007888   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7888
00788a   0000     nop                      
00788c   0000     nop                      
00788e   0000     nop                      
007890   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7890
007892   0000     nop                      
007894   0000     nop                      
007896   0000     nop                      
007898   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7898
00789a   0000     nop                      
00789c   0000     nop                      
00789e   0000     nop                      
0078a0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 78A0
0078a2   0000     nop                      
0078a4   0000     nop                      
0078a6   0000     nop                      
0078a8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 78A8
0078aa   0000     nop                      
0078ac   0000     nop                      
0078ae   0000     nop                      
0078b0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 78B0
0078b2   0000     nop                      
0078b4   0000     nop                      
0078b6   0000     nop                      
0078b8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 78B8
0078ba   0000     nop                      
0078bc   0000     nop                      
0078be   0000     nop                      
0078c0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 78C0
0078c2   0000     nop                      
0078c4   0000     nop                      
0078c6   0000     nop                      
0078c8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 78C8
0078ca   0000     nop                      
0078cc   0000     nop                      
0078ce   0000     nop                      
0078d0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 78D0
0078d2   0000     nop                      
0078d4   0000     nop                      
0078d6   0000     nop                      
0078d8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 78D8
0078da   0000     nop                      
0078dc   0000     nop                      
0078de   0000     nop                      
0078e0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 78E0
0078e2   0000     nop                      
0078e4   0000     nop                      
0078e6   0000     nop                      
0078e8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 78E8
0078ea   0000     nop                      
0078ec   0000     nop                      
0078ee   0000     nop                      
0078f0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 78F0
0078f2   0000     nop                      
0078f4   0000     nop                      
0078f6   0000     nop                      
0078f8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 78F8
0078fa   0000     nop                      
0078fc   0000     nop                      
0078fe   0000     nop                      
007900   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7900
007902   0000     nop                      
007904   0000     nop                      
007906   0000     nop                      
007908   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7908
00790a   0000     nop                      
00790c   0000     nop                      
00790e   0000     nop                      
007910   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7910
007912   0000     nop                      
007914   0000     nop                      
007916   0000     nop                      
007918   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7918
00791a   0000     nop                      
00791c   0000     nop                      
00791e   0000     nop                      
007920   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7920
007922   0000     nop                      
007924   0000     nop                      
007926   0000     nop                      
007928   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7928
00792a   0000     nop                      
00792c   0000     nop                      
00792e   0000     nop                      
007930   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7930
007932   0000     nop                      
007934   0000     nop                      
007936   0000     nop                      
007938   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7938
00793a   0000     nop                      
00793c   0000     nop                      
00793e   0000     nop                      
007940   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7940
007942   0000     nop                      
007944   0000     nop                      
007946   0000     nop                      
007948   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7948
00794a   0000     nop                      
00794c   0000     nop                      
00794e   0000     nop                      
007950   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7950
007952   0000     nop                      
007954   0000     nop                      
007956   0000     nop                      
007958   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7958
00795a   0000     nop                      
00795c   0000     nop                      
00795e   0000     nop                      
007960   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7960
007962   0000     nop                      
007964   0000     nop                      
007966   0000     nop                      
007968   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7968
00796a   0000     nop                      
00796c   0000     nop                      
00796e   0000     nop                      
007970   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7970
007972   0000     nop                      
007974   0000     nop                      
007976   0000     nop                      
007978   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7978
00797a   0000     nop                      
00797c   0000     nop                      
00797e   0000     nop                      
007980   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7980
007982   0000     nop                      
007984   0000     nop                      
007986   0000     nop                      
007988   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7988
00798a   0000     nop                      
00798c   0000     nop                      
00798e   0000     nop                      
007990   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7990
007992   0000     nop                      
007994   0000     nop                      
007996   0000     nop                      
007998   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7998
00799a   0000     nop                      
00799c   0000     nop                      
00799e   0000     nop                      
0079a0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 79A0
0079a2   0000     nop                      
0079a4   0000     nop                      
0079a6   0000     nop                      
0079a8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 79A8
0079aa   0000     nop                      
0079ac   0000     nop                      
0079ae   0000     nop                      
0079b0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 79B0
0079b2   0000     nop                      
0079b4   0000     nop                      
0079b6   0000     nop                      
0079b8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 79B8
0079ba   0000     nop                      
0079bc   0000     nop                      
0079be   0000     nop                      
0079c0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 79C0
0079c2   0000     nop                      
0079c4   0000     nop                      
0079c6   0000     nop                      
0079c8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 79C8
0079ca   0000     nop                      
0079cc   0000     nop                      
0079ce   0000     nop                      
0079d0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 79D0
0079d2   0000     nop                      
0079d4   0000     nop                      
0079d6   0000     nop                      
0079d8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 79D8
0079da   0000     nop                      
0079dc   0000     nop                      
0079de   0000     nop                      
0079e0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 79E0
0079e2   0000     nop                      
0079e4   0000     nop                      
0079e6   0000     nop                      
0079e8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 79E8
0079ea   0000     nop                      
0079ec   0000     nop                      
0079ee   0000     nop                      
0079f0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 79F0
0079f2   0000     nop                      
0079f4   0000     nop                      
0079f6   0000     nop                      
0079f8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 79F8
0079fa   0000     nop                      
0079fc   0000     nop                      
0079fe   0000     nop                      
007a00   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7A00
007a02   0000     nop                      
007a04   0000     nop                      
007a06   0000     nop                      
007a08   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7A08
007a0a   0000     nop                      
007a0c   0000     nop                      
007a0e   0000     nop                      
007a10   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7A10
007a12   0000     nop                      
007a14   0000     nop                      
007a16   0000     nop                      
007a18   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7A18
007a1a   0000     nop                      
007a1c   0000     nop                      
007a1e   0000     nop                      
007a20   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7A20
007a22   0000     nop                      
007a24   0000     nop                      
007a26   0000     nop                      
007a28   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7A28
007a2a   0000     nop                      
007a2c   0000     nop                      
007a2e   0000     nop                      
007a30   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7A30
007a32   0000     nop                      
007a34   0000     nop                      
007a36   0000     nop                      
007a38   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7A38
007a3a   0000     nop                      
007a3c   0000     nop                      
007a3e   0000     nop                      
007a40   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7A40
007a42   0000     nop                      
007a44   0000     nop                      
007a46   0000     nop                      
007a48   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7A48
007a4a   0000     nop                      
007a4c   0000     nop                      
007a4e   0000     nop                      
007a50   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7A50
007a52   0000     nop                      
007a54   0000     nop                      
007a56   0000     nop                      
007a58   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7A58
007a5a   0000     nop                      
007a5c   0000     nop                      
007a5e   0000     nop                      
007a60   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7A60
007a62   0000     nop                      
007a64   0000     nop                      
007a66   0000     nop                      
007a68   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7A68
007a6a   0000     nop                      
007a6c   0000     nop                      
007a6e   0000     nop                      
007a70   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7A70
007a72   0000     nop                      
007a74   0000     nop                      
007a76   0000     nop                      
007a78   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7A78
007a7a   0000     nop                      
007a7c   0000     nop                      
007a7e   0000     nop                      
007a80   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7A80
007a82   0000     nop                      
007a84   0000     nop                      
007a86   0000     nop                      
007a88   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7A88
007a8a   0000     nop                      
007a8c   0000     nop                      
007a8e   0000     nop                      
007a90   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7A90
007a92   0000     nop                      
007a94   0000     nop                      
007a96   0000     nop                      
007a98   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7A98
007a9a   0000     nop                      
007a9c   0000     nop                      
007a9e   0000     nop                      
007aa0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7AA0
007aa2   0000     nop                      
007aa4   0000     nop                      
007aa6   0000     nop                      
007aa8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7AA8
007aaa   0000     nop                      
007aac   0000     nop                      
007aae   0000     nop                      
007ab0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7AB0
007ab2   0000     nop                      
007ab4   0000     nop                      
007ab6   0000     nop                      
007ab8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7AB8
007aba   0000     nop                      
007abc   0000     nop                      
007abe   0000     nop                      
007ac0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7AC0
007ac2   0000     nop                      
007ac4   0000     nop                      
007ac6   0000     nop                      
007ac8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7AC8
007aca   0000     nop                      
007acc   0000     nop                      
007ace   0000     nop                      
007ad0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7AD0
007ad2   0000     nop                      
007ad4   0000     nop                      
007ad6   0000     nop                      
007ad8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7AD8
007ada   0000     nop                      
007adc   0000     nop                      
007ade   0000     nop                      
007ae0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7AE0
007ae2   0000     nop                      
007ae4   0000     nop                      
007ae6   0000     nop                      
007ae8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7AE8
007aea   0000     nop                      
007aec   0000     nop                      
007aee   0000     nop                      
007af0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7AF0
007af2   0000     nop                      
007af4   0000     nop                      
007af6   0000     nop                      
007af8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7AF8
007afa   0000     nop                      
007afc   0000     nop                      
007afe   0000     nop                      
007b00   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B00
007b02   0000     nop                      
007b04   0000     nop                      
007b06   0000     nop                      
007b08   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B08
007b0a   0000     nop                      
007b0c   0000     nop                      
007b0e   0000     nop                      
007b10   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B10
007b12   0000     nop                      
007b14   0000     nop                      
007b16   0000     nop                      
007b18   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B18
007b1a   0000     nop                      
007b1c   0000     nop                      
007b1e   0000     nop                      
007b20   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B20
007b22   0000     nop                      
007b24   0000     nop                      
007b26   0000     nop                      
007b28   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B28
007b2a   0000     nop                      
007b2c   0000     nop                      
007b2e   0000     nop                      
007b30   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B30
007b32   0000     nop                      
007b34   0000     nop                      
007b36   0000     nop                      
007b38   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B38
007b3a   0000     nop                      
007b3c   0000     nop                      
007b3e   0000     nop                      
007b40   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B40
007b42   0000     nop                      
007b44   0000     nop                      
007b46   0000     nop                      
007b48   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B48
007b4a   0000     nop                      
007b4c   0000     nop                      
007b4e   0000     nop                      
007b50   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B50
007b52   0000     nop                      
007b54   0000     nop                      
007b56   0000     nop                      
007b58   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B58
007b5a   0000     nop                      
007b5c   0000     nop                      
007b5e   0000     nop                      
007b60   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B60
007b62   0000     nop                      
007b64   0000     nop                      
007b66   0000     nop                      
007b68   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B68
007b6a   0000     nop                      
007b6c   0000     nop                      
007b6e   0000     nop                      
007b70   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B70
007b72   0000     nop                      
007b74   0000     nop                      
007b76   0000     nop                      
007b78   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B78
007b7a   0000     nop                      
007b7c   0000     nop                      
007b7e   0000     nop                      
007b80   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B80
007b82   0000     nop                      
007b84   0000     nop                      
007b86   0000     nop                      
007b88   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B88
007b8a   0000     nop                      
007b8c   0000     nop                      
007b8e   0000     nop                      
007b90   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B90
007b92   0000     nop                      
007b94   0000     nop                      
007b96   0000     nop                      
007b98   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B98
007b9a   0000     nop                      
007b9c   0000     nop                      
007b9e   0000     nop                      
007ba0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7BA0
007ba2   0000     nop                      
007ba4   0000     nop                      
007ba6   0000     nop                      
007ba8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7BA8
007baa   0000     nop                      
007bac   0000     nop                      
007bae   0000     nop                      
007bb0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7BB0
007bb2   0000     nop                      
007bb4   0000     nop                      
007bb6   0000     nop                      
007bb8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7BB8
007bba   0000     nop                      
007bbc   0000     nop                      
007bbe   0000     nop                      
007bc0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7BC0
007bc2   0000     nop                      
007bc4   0000     nop                      
007bc6   0000     nop                      
007bc8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7BC8
007bca   0000     nop                      
007bcc   0000     nop                      
007bce   0000     nop                      
007bd0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7BD0
007bd2   0000     nop                      
007bd4   0000     nop                      
007bd6   0000     nop                      
007bd8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7BD8
007bda   0000     nop                      
007bdc   0000     nop                      
007bde   0000     nop                      
007be0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7BE0
007be2   0000     nop                      
007be4   0000     nop                      
007be6   0000     nop                      
007be8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7BE8
007bea   0000     nop                      
007bec   0000     nop                      
007bee   0000     nop                      
007bf0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7BF0
007bf2   0000     nop                      
007bf4   0000     nop                      
007bf6   0000     nop                      
007bf8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7BF8
007bfa   0000     nop                      
007bfc   0000     nop                      
007bfe   0000     nop                      
007c00   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C00
007c02   0000     nop                      
007c04   0000     nop                      
007c06   0000     nop                      
007c08   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C08
007c0a   0000     nop                      
007c0c   0000     nop                      
007c0e   0000     nop                      
007c10   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C10
007c12   0000     nop                      
007c14   0000     nop                      
007c16   0000     nop                      
007c18   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C18
007c1a   0000     nop                      
007c1c   0000     nop                      
007c1e   0000     nop                      
007c20   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C20
007c22   0000     nop                      
007c24   0000     nop                      
007c26   0000     nop                      
007c28   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C28
007c2a   0000     nop                      
007c2c   0000     nop                      
007c2e   0000     nop                      
007c30   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C30
007c32   0000     nop                      
007c34   0000     nop                      
007c36   0000     nop                      
007c38   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C38
007c3a   0000     nop                      
007c3c   0000     nop                      
007c3e   0000     nop                      
007c40   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C40
007c42   0000     nop                      
007c44   0000     nop                      
007c46   0000     nop                      
007c48   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C48
007c4a   0000     nop                      
007c4c   0000     nop                      
007c4e   0000     nop                      
007c50   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C50
007c52   0000     nop                      
007c54   0000     nop                      
007c56   0000     nop                      
007c58   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C58
007c5a   0000     nop                      
007c5c   0000     nop                      
007c5e   0000     nop                      
007c60   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C60
007c62   0000     nop                      
007c64   0000     nop                      
007c66   0000     nop                      
007c68   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C68
007c6a   0000     nop                      
007c6c   0000     nop                      
007c6e   0000     nop                      
007c70   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C70
007c72   0000     nop                      
007c74   0000     nop                      
007c76   0000     nop                      
007c78   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C78
007c7a   0000     nop                      
007c7c   0000     nop                      
007c7e   0000     nop                      
007c80   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C80
007c82   0000     nop                      
007c84   0000     nop                      
007c86   0000     nop                      
007c88   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C88
007c8a   0000     nop                      
007c8c   0000     nop                      
007c8e   0000     nop                      
007c90   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C90
007c92   0000     nop                      
007c94   0000     nop                      
007c96   0000     nop                      
007c98   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C98
007c9a   0000     nop                      
007c9c   0000     nop                      
007c9e   0000     nop                      
007ca0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7CA0
007ca2   0000     nop                      
007ca4   0000     nop                      
007ca6   0000     nop                      
007ca8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7CA8
007caa   0000     nop                      
007cac   0000     nop                      
007cae   0000     nop                      
007cb0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7CB0
007cb2   0000     nop                      
007cb4   0000     nop                      
007cb6   0000     nop                      
007cb8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7CB8
007cba   0000     nop                      
007cbc   0000     nop                      
007cbe   0000     nop                      
007cc0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7CC0
007cc2   0000     nop                      
007cc4   0000     nop                      
007cc6   0000     nop                      
007cc8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7CC8
007cca   0000     nop                      
007ccc   0000     nop                      
007cce   0000     nop                      
007cd0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7CD0
007cd2   0000     nop                      
007cd4   0000     nop                      
007cd6   0000     nop                      
007cd8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7CD8
007cda   0000     nop                      
007cdc   0000     nop                      
007cde   0000     nop                      
007ce0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7CE0
007ce2   0000     nop                      
007ce4   0000     nop                      
007ce6   0000     nop                      
007ce8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7CE8
007cea   0000     nop                      
007cec   0000     nop                      
007cee   0000     nop                      
007cf0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7CF0
007cf2   0000     nop                      
007cf4   0000     nop                      
007cf6   0000     nop                      
007cf8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7CF8
007cfa   0000     nop                      
007cfc   0000     nop                      
007cfe   0000     nop                      
007d00   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D00
007d02   0000     nop                      
007d04   0000     nop                      
007d06   0000     nop                      
007d08   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D08
007d0a   0000     nop                      
007d0c   0000     nop                      
007d0e   0000     nop                      
007d10   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D10
007d12   0000     nop                      
007d14   0000     nop                      
007d16   0000     nop                      
007d18   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D18
007d1a   0000     nop                      
007d1c   0000     nop                      
007d1e   0000     nop                      
007d20   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D20
007d22   0000     nop                      
007d24   0000     nop                      
007d26   0000     nop                      
007d28   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D28
007d2a   0000     nop                      
007d2c   0000     nop                      
007d2e   0000     nop                      
007d30   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D30
007d32   0000     nop                      
007d34   0000     nop                      
007d36   0000     nop                      
007d38   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D38
007d3a   0000     nop                      
007d3c   0000     nop                      
007d3e   0000     nop                      
007d40   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D40
007d42   0000     nop                      
007d44   0000     nop                      
007d46   0000     nop                      
007d48   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D48
007d4a   0000     nop                      
007d4c   0000     nop                      
007d4e   0000     nop                      
007d50   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D50
007d52   0000     nop                      
007d54   0000     nop                      
007d56   0000     nop                      
007d58   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D58
007d5a   0000     nop                      
007d5c   0000     nop                      
007d5e   0000     nop                      
007d60   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D60
007d62   0000     nop                      
007d64   0000     nop                      
007d66   0000     nop                      
007d68   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D68
007d6a   0000     nop                      
007d6c   0000     nop                      
007d6e   0000     nop                      
007d70   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D70
007d72   0000     nop                      
007d74   0000     nop                      
007d76   0000     nop                      
007d78   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D78
007d7a   0000     nop                      
007d7c   0000     nop                      
007d7e   0000     nop                      
007d80   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D80
007d82   0000     nop                      
007d84   0000     nop                      
007d86   0000     nop                      
007d88   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D88
007d8a   0000     nop                      
007d8c   0000     nop                      
007d8e   0000     nop                      
007d90   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D90
007d92   0000     nop                      
007d94   0000     nop                      
007d96   0000     nop                      
007d98   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D98
007d9a   0000     nop                      
007d9c   0000     nop                      
007d9e   0000     nop                      
007da0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7DA0
007da2   0000     nop                      
007da4   0000     nop                      
007da6   0000     nop                      
007da8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7DA8
007daa   0000     nop                      
007dac   0000     nop                      
007dae   0000     nop                      
007db0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7DB0
007db2   0000     nop                      
007db4   0000     nop                      
007db6   0000     nop                      
007db8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7DB8
007dba   0000     nop                      
007dbc   0000     nop                      
007dbe   0000     nop                      
007dc0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7DC0
007dc2   0000     nop                      
007dc4   0000     nop                      
007dc6   0000     nop                      
007dc8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7DC8
007dca   0000     nop                      
007dcc   0000     nop                      
007dce   0000     nop                      
007dd0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7DD0
007dd2   0000     nop                      
007dd4   0000     nop                      
007dd6   0000     nop                      
007dd8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7DD8
007dda   0000     nop                      
007ddc   0000     nop                      
007dde   0000     nop                      
007de0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7DE0
007de2   0000     nop                      
007de4   0000     nop                      
007de6   0000     nop                      
007de8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7DE8
007dea   0000     nop                      
007dec   0000     nop                      
007dee   0000     nop                      
007df0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7DF0
007df2   0000     nop                      
007df4   0000     nop                      
007df6   0000     nop                      
007df8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7DF8
007dfa   0000     nop                      
007dfc   0000     nop                      
007dfe   0000     nop                      
007e00   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E00
007e02   0000     nop                      
007e04   0000     nop                      
007e06   0000     nop                      
007e08   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E08
007e0a   0000     nop                      
007e0c   0000     nop                      
007e0e   0000     nop                      
007e10   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E10
007e12   0000     nop                      
007e14   0000     nop                      
007e16   0000     nop                      
007e18   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E18
007e1a   0000     nop                      
007e1c   0000     nop                      
007e1e   0000     nop                      
007e20   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E20
007e22   0000     nop                      
007e24   0000     nop                      
007e26   0000     nop                      
007e28   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E28
007e2a   0000     nop                      
007e2c   0000     nop                      
007e2e   0000     nop                      
007e30   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E30
007e32   0000     nop                      
007e34   0000     nop                      
007e36   0000     nop                      
007e38   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E38
007e3a   0000     nop                      
007e3c   0000     nop                      
007e3e   0000     nop                      
007e40   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E40
007e42   0000     nop                      
007e44   0000     nop                      
007e46   0000     nop                      
007e48   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E48
007e4a   0000     nop                      
007e4c   0000     nop                      
007e4e   0000     nop                      
007e50   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E50
007e52   0000     nop                      
007e54   0000     nop                      
007e56   0000     nop                      
007e58   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E58
007e5a   0000     nop                      
007e5c   0000     nop                      
007e5e   0000     nop                      
007e60   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E60
007e62   0000     nop                      
007e64   0000     nop                      
007e66   0000     nop                      
007e68   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E68
007e6a   0000     nop                      
007e6c   0000     nop                      
007e6e   0000     nop                      
007e70   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E70
007e72   0000     nop                      
007e74   0000     nop                      
007e76   0000     nop                      
007e78   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E78
007e7a   0000     nop                      
007e7c   0000     nop                      
007e7e   0000     nop                      
007e80   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E80
007e82   0000     nop                      
007e84   0000     nop                      
007e86   0000     nop                      
007e88   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E88
007e8a   0000     nop                      
007e8c   0000     nop                      
007e8e   0000     nop                      
007e90   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E90
007e92   0000     nop                      
007e94   0000     nop                      
007e96   0000     nop                      
007e98   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E98
007e9a   0000     nop                      
007e9c   0000     nop                      
007e9e   0000     nop                      
007ea0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7EA0
007ea2   0000     nop                      
007ea4   0000     nop                      
007ea6   0000     nop                      
007ea8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7EA8
007eaa   0000     nop                      
007eac   0000     nop                      
007eae   0000     nop                      
007eb0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7EB0
007eb2   0000     nop                      
007eb4   0000     nop                      
007eb6   0000     nop                      
007eb8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7EB8
007eba   0000     nop                      
007ebc   0000     nop                      
007ebe   0000     nop                      
007ec0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7EC0
007ec2   0000     nop                      
007ec4   0000     nop                      
007ec6   0000     nop                      
007ec8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7EC8
007eca   0000     nop                      
007ecc   0000     nop                      
007ece   0000     nop                      
007ed0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7ED0
007ed2   0000     nop                      
007ed4   0000     nop                      
007ed6   0000     nop                      
007ed8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7ED8
007eda   0000     nop                      
007edc   0000     nop                      
007ede   0000     nop                      
007ee0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7EE0
007ee2   0000     nop                      
007ee4   0000     nop                      
007ee6   0000     nop                      
007ee8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7EE8
007eea   0000     nop                      
007eec   0000     nop                      
007eee   0000     nop                      
007ef0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7EF0
007ef2   0000     nop                      
007ef4   0000     nop                      
007ef6   0000     nop                      
007ef8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7EF8
007efa   0000     nop                      
007efc   0000     nop                      
007efe   0000     nop                      
007f00   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F00
007f02   0000     nop                      
007f04   0000     nop                      
007f06   0000     nop                      
007f08   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F08
007f0a   0000     nop                      
007f0c   0000     nop                      
007f0e   0000     nop                      
007f10   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F10
007f12   0000     nop                      
007f14   0000     nop                      
007f16   0000     nop                      
007f18   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F18
007f1a   0000     nop                      
007f1c   0000     nop                      
007f1e   0000     nop                      
007f20   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F20
007f22   0000     nop                      
007f24   0000     nop                      
007f26   0000     nop                      
007f28   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F28
007f2a   0000     nop                      
007f2c   0000     nop                      
007f2e   0000     nop                      
007f30   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F30
007f32   0000     nop                      
007f34   0000     nop                      
007f36   0000     nop                      
007f38   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F38
007f3a   0000     nop                      
007f3c   0000     nop                      
007f3e   0000     nop                      
007f40   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F40
007f42   0000     nop                      
007f44   0000     nop                      
007f46   0000     nop                      
007f48   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F48
007f4a   0000     nop                      
007f4c   0000     nop                      
007f4e   0000     nop                      
007f50   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F50
007f52   0000     nop                      
007f54   0000     nop                      
007f56   0000     nop                      
007f58   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F58
007f5a   0000     nop                      
007f5c   0000     nop                      
007f5e   0000     nop                      
007f60   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F60
007f62   0000     nop                      
007f64   0000     nop                      
007f66   0000     nop                      
007f68   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F68
007f6a   0000     nop                      
007f6c   0000     nop                      
007f6e   0000     nop                      
007f70   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F70
007f72   0000     nop                      
007f74   0000     nop                      
007f76   0000     nop                      
007f78   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F78
007f7a   0000     nop                      
007f7c   0000     nop                      
007f7e   0000     nop                      
007f80   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F80
007f82   0000     nop                      
007f84   0000     nop                      
007f86   0000     nop                      
007f88   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F88
007f8a   0000     nop                      
007f8c   0000     nop                      
007f8e   0000     nop                      
007f90   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F90
007f92   0000     nop                      
007f94   0000     nop                      
007f96   0000     nop                      
007f98   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F98
007f9a   0000     nop                      
007f9c   0000     nop                      
007f9e   0000     nop                      
007fa0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7FA0
007fa2   0000     nop                      
007fa4   0000     nop                      
007fa6   0000     nop                      
007fa8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7FA8
007faa   0000     nop                      
007fac   0000     nop                      
007fae   0000     nop                      
007fb0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7FB0
007fb2   0000     nop                      
007fb4   0000     nop                      
007fb6   0000     nop                      
007fb8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7FB8
007fba   0000     nop                      
007fbc   0000     nop                      
007fbe   0000     nop                      
007fc0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7FC0
007fc2   0000     nop                      
007fc4   0000     nop                      
007fc6   0000     nop                      
007fc8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7FC8
007fca   0000     nop                      
007fcc   0000     nop                      
007fce   0000     nop                      
007fd0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7FD0
007fd2   0000     nop                      
007fd4   0000     nop                      
007fd6   0000     nop                      
007fd8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7FD8
007fda   0000     nop                      
007fdc   0000     nop                      
007fde   0000     nop                      
007fe0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7FE0
007fe2   0000     nop                      
007fe4   0000     nop                      
007fe6   0000     nop                      
007fe8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7FE8
007fea   0000     nop                      
007fec   0000     nop                      
007fee   0000     nop                      
007ff0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7FF0
007ff2   0000     nop                      
007ff4   0000     nop                      
007ff6   0000     nop                      
007ff8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7FF8
007ffa   0000     nop                      
007ffc   0000     nop                      
007ffe   0000     nop                      
                                           
                                               end
