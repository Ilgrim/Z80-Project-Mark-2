gplink-0.13.7 beta
Copyright (c) 1998-2005 gputils project
Listing File Generated: 3-18-2010  22:51:14
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;==============================================================================
                                           ;    serial.asm
                                           ;==============================================================================
                                           
                                           list p=18f4520
                                           #include <p18f4520.inc>
                                                   LIST
                                           
                                           ;==========================================================================
                                           ;  MPASM PIC18F4520 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2007 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           
                                           ; -- Externals From main.asm --------------------------------------------------
                                               extern      MAIN_TEMP
                                           
                                           ; -- Externals From host_bus.asm ----------------------------------------------
                                               extern      HI_ADDR
                                               extern      LO_ADDR
                                               extern      DREG
                                           
                                               extern      ensure_master
                                               extern      revert_master
                                               extern      io_read
                                               extern      io_write
                                               extern      mem_read
                                               extern      mem_write
                                               extern      get_reset
                                               extern      get_slave
                                               extern      get_dma
                                           
                                           ; -- Externals From boot.asm --------------------------------------------------
                                               extern      boot_update
                                           
                                             UDATA
                                           
                                           RX_MODE RES     1
                                           ; -- RX MODE CONSTANTS --------------------------------------------------------
                                           RX_COM  EQU     0
                                           RX_LEN  EQU     1
                                           RX_DAT  EQU     2
                                           RX_CKS  EQU     3
                                           RX_BSY  EQU     4
                                           
                                           RX_COMMAND      RES     1
                                           RX_COUNT        RES     1
                                           RX_CHECKSUM     RES     1
                                           RX_FLAGS        RES     1
                                           ; -- FLAG VALUES --------------------------------------------------------------
                                           CHECKSUM_FAIL   EQU     0x01
                                           
                                           TX_CHECKSUM     RES     1
                                           TX_COUNT        RES     1
                                           JUMP_REG        RES     1
                                             
                                             CODE
                                           ;== Serial Console Functions ==================================================
                                           
                                           ;******************************************************************************
                                           ;*                                                                            *
                                           ;* serial_init - set up the serial port for PC comms                          *
                                           ;*                                                                            *
                                           ;* Inputs:  NONE                                                              *
                                           ;* Outputs: NONE                                                              *
                                           ;* Called:                                                                    *
                                           ;* Changes: SPBRG, RCSTA, TXSTA, BAUDCON, TRISC, RCON, PIR1, PIE1, INTCON     *
                                           ;*                                                                            *
                                           ;******************************************************************************
                                           
                                           serial_init
000042   6b84     clrf	0x84, 0x1               clrf        RX_FLAGS
000044   0e01     movlw	0x1                    movlw       0x01
000046   6eea     movwf	0xea, 0                movwf       FSR0H           ; set FSR0 to BANK1, RX Buffer
000048   6ae9     clrf	0xe9, 0                 clrf        FSR0L
00004a   0e02     movlw	0x2                    movlw       0x02
00004c   6ee2     movwf	0xe2, 0                movwf       FSR1H           ; set FSR1 to BANK2, TX Buffer
00004e   6ae1     clrf	0xe1, 0                 clrf        FSR1L
000050   0e00     movlw	0                      movlw       RX_COM
000052   6f80     movwf	0x80, 0x1              movwf       RX_MODE         ; set RX_MODE to look for a command
                                               ; first make sure that the RX and TX are both set input, hardware changes
                                               ; this once the UART is enabled
000054   0ec0     movlw	0xc0                   movlw       b'11000000'
000056   1294     iorwf	0x94, 0x1, 0           iorwf       TRISC,f
                                           
                                               ; next set the UART up
000058   0e10     movlw	0x10                   movlw       0x10
00005a   6eaf     movwf	0xaf, 0                movwf       SPBRG
00005c   0e04     movlw	0x4                    movlw       0x04
00005e   6eb0     movwf	0xb0, 0                movwf       SPBRGH          ; 9600 baud high speed 16 bit mode
000060   0e24     movlw	0x24                   movlw       b'00100100'     ; enable sending, 8-bit, high speed baud rate
000062   6eac     movwf	0xac, 0                movwf       TXSTA
000064   0e10     movlw	0x10                   movlw       b'00010000'     ; enable receiving 8-bit
000066   6eab     movwf	0xab, 0                movwf       RCSTA
000068   0e08     movlw	0x8                    movlw       b'00001000'     ; no-auto sensing - 16 bit baud rate
00006a   6eb8     movwf	0xb8, 0                movwf       BAUDCON
00006c   8eab     bsf	0xab, 0x7, 0             bsf         RCSTA,SPEN      ; enable the serial port
                                           
                                               ; set up interrupt on receive
00006e   8ed0     bsf	0xd0, 0x7, 0             bsf         RCON, IPEN
000070   9a9e     bcf	0x9e, 0x5, 0             bcf         PIR1, RCIF
000072   8a9d     bsf	0x9d, 0x5, 0             bsf         PIE1, RCIE
000074   8ef2     bsf	0xf2, 0x7, 0             bsf         INTCON, GIEH    ; enable global interrupts
000076   0012     return	0                     return
                                           
                                           ;******************************************************************************
                                           ;*                                                                            *
                                           ;* serial_send - send the contents of W via the UART                          *
                                           ;*                                                                            *
                                           ;* Inputs:  Byte to send in W                                                 *
                                           ;* Outputs: NONE                                                              *
                                           ;* Called:                                                                    *
                                           ;* Changes: TXREG                                                             *
                                           ;*                                                                            *
                                           ;******************************************************************************
                                           
                                           serial_send
000078   a89e     btfss	0x9e, 0x4, 0           btfss PIR1,TXIF     ;test transmit interrupt flag
00007a   d7fe     bra	0x78                     bra serial_send     ;if clear, TXREG is full
00007c   6ead     movwf	0xad, 0                movwf TXREG         ;if set, TXREG is empty, so copy data into it
00007e   0012     return	0                     return
                                           
                                           ; -- serial_tx_send_packet ----------------------------------------------------
                                           
                                           serial_tx_send_packet
                                               ; send a whole message packet from the TX Buffer
                                               ; first set the TX pointer to the start of the buffer
000080   6ae1     clrf	0xe1, 0                 clrf        FSR1L
                                               ; send the first byte (the command code)
000082   50e6     movf	0xe6, 0, 0              movf        POSTINC1,w
000084   ec3c     call	0x78, 0                 call        serial_send
000086   f000
                                               ; now send the length byte, and initialise the counter
000088   50e6     movf	0xe6, 0, 0              movf        POSTINC1,w
00008a   ec3c     call	0x78, 0                 call        serial_send
00008c   f000
00008e   6f86     movwf	0x86, 0x1              movwf       TX_COUNT
                                           
000090   0bff     andlw	0xff                   andlw       0xFF
000092   e005     bz	0x9e                      bz          serial_tx_send_packet_checksum  ; if length is zero skip data loop
                                               ; now we loop over send and decrement the counter
                                           serial_tx_send_packet_data_loop
000094   50e6     movf	0xe6, 0, 0              movf        POSTINC1,w
000096   ec3c     call	0x78, 0                 call        serial_send
000098   f000
00009a   2f86     decfsz	0x86, 0x1, 0x1        decfsz      TX_COUNT,f
00009c   d7fb     bra	0x94                     bra         serial_tx_send_packet_data_loop
                                               
                                           serial_tx_send_packet_checksum
00009e   9a8b     bcf	0x8b, 0x5, 0             bcf         LATC,5
                                               ; lastly send the checksum
0000a0   50e6     movf	0xe6, 0, 0              movf        POSTINC1,w
0000a2   ec3c     call	0x78, 0                 call        serial_send
0000a4   f000
                                           
                                               ; done, return
0000a6   0012     return	0                     return
                                           
                                           ;******************************************************************************
                                           ;*                                                                            *
                                           ;* serial_rx_int - UART receive interrupt routine                             *
                                           ;*                                                                            *
                                           ;* Inputs:  None                                                              *
                                           ;* Outputs: None                                                              *
                                           ;* Called:                                                                    *
                                           ;* Changes: PIR1, w                                                           *
                                           ;*                                                                            *
                                           ;******************************************************************************
                                           
                                           ; called later but must be on before the page to avoid relative branch errors
                                           ; !! deprecated !!
                                           ; serial_nak_exit
                                           ;     movlw       0x15
                                           ;     call        serial_send
                                           ;     return
                                           
                                           serial_rx_int_error
0000a8   98ab     bcf	0xab, 0x4, 0             bcf         RCSTA,CREN              ;clear the CREN bit to clear errors
0000aa   0e15     movlw	0x15                   movlw       0x15                    ;prepare a NAK symbol
0000ac   ec3c     call	0x78, 0                 call        serial_send             ;and send it
0000ae   f000
0000b0   88ab     bsf	0xab, 0x4, 0             bsf         RCSTA,CREN              ;re-enable receiving
0000b2   50ae     movf	0xae, 0, 0              movf        RCREG,w                 ;have to read the RCREG to clear the interrupt
0000b4   0012     return	0                     return
                                           
                                           serial_rx_int
0000b6   0e06     movlw	0x6                    movlw       b'00000110'
0000b8   14ab     andwf	0xab, 0, 0             andwf       RCSTA,w                 ;test if either of the error bits are set
0000ba   e1f6     bnz	0xa8                     bnz         serial_rx_int_error     ;if result is not zero an error occurred
                                           serial_rx_int_no_error                  ;if no error occurred, just echo input
                                           
                                               ; if RX_MODE & FC != 0 -> error message, busy
0000bc   0efc     movlw	0xfc                   movlw       0xFC                    ; three non-busy modes
0000be   1580     andwf	0x80, 0, 0x1           andwf       RX_MODE,w               ; don't change the RX_MODE
0000c0   e1f3     bnz	0xa8                     bnz         serial_rx_int_error     ; busy mode so reply NAK, we don't want data at the moment
                                           
0000c2   0e00     movlw	0                      movlw       UPPER serial_rx_jump_table
0000c4   6efb     movwf	0xfb, 0                movwf       PCLATU
0000c6   0e00     movlw	0                      movlw       HIGH serial_rx_jump_table
0000c8   6efa     movwf	0xfa, 0                movwf       PCLATH
0000ca   5180     movf	0x80, 0, 0x1            movf        RX_MODE,w
0000cc   46e8     rlncf	0xe8, 0x1, 0           rlncf       WREG,f
0000ce   46e8     rlncf	0xe8, 0x1, 0           rlncf       WREG,f
0000d0   ef6a     goto	0xd4                    goto        serial_rx_jump_table
0000d2   f000
                                           
                                               PAGE            ; doing a jump table need to make sure it's all in one page of memory
                                           
                                           serial_rx_jump_table
0000d4   26f9     addwf	0xf9, 0x1, 0           addwf       PCL,f
0000d6   ef73     goto	0xe6                    goto        serial_rx_command       ;0
0000d8   f000
0000da   ef79     goto	0xf2                    goto        serial_rx_length        ;1
0000dc   f000
0000de   ef83     goto	0x106                   goto        serial_rx_data          ;2
0000e0   f000
0000e2   ef8a     goto	0x114                   goto        serial_rx_checksum      ;3
0000e4   f000
                                           
                                           ;command byte
                                           serial_rx_command
                                               ; store the command
0000e6   50ae     movf	0xae, 0, 0              movf        RCREG,w
0000e8   6f81     movwf	0x81, 0x1              movwf       RX_COMMAND    
                                               ; put it in the RX buffer
0000ea   6eee     movwf	0xee, 0                movwf       POSTINC0
                                               ; also store it to start the checksum
0000ec   6f83     movwf	0x83, 0x1              movwf       RX_CHECKSUM
                                               ; change to length mode
0000ee   2b80     incf	0x80, 0x1, 0x1          incf        RX_MODE,f
                                               ; return
0000f0   0012     return	0                     return
                                           
                                           ; length byte
                                           serial_rx_length
                                               ; set the byte count
0000f2   50ae     movf	0xae, 0, 0              movf        RCREG,w
0000f4   6f82     movwf	0x82, 0x1              movwf       RX_COUNT
                                               ; store this in the RX buffer too
0000f6   6eee     movwf	0xee, 0                movwf       POSTINC0
                                               ; xor the length for checksum
0000f8   1b83     xorwf	0x83, 0x1, 0x1         xorwf       RX_CHECKSUM,f
                                               ; change to data mode
0000fa   2b80     incf	0x80, 0x1, 0x1          incf        RX_MODE,f
                                               ; if the byte count is 0 skip data mode
0000fc   0e00     movlw	0                      movlw       0x00
0000fe   6382     cpfseq	0x82, 0x1             cpfseq      RX_COUNT
000100   0012     return	0                     return
000102   2b80     incf	0x80, 0x1, 0x1          incf        RX_MODE,f       ; inc to checksum mode
000104   0012     return	0                     return
                                           
                                           serial_rx_data
                                               ; store the data byte in the indirect register
000106   50ae     movf	0xae, 0, 0              movf        RCREG,w
000108   6eee     movwf	0xee, 0                movwf       POSTINC0
                                               ; update the checksum
00010a   1b83     xorwf	0x83, 0x1, 0x1         xorwf       RX_CHECKSUM,f
                                               ; decrement the byte counter
00010c   2f82     decfsz	0x82, 0x1, 0x1        decfsz      RX_COUNT,f
00010e   0012     return	0                     return
                                               ; if execution got here the full count of bytes is done
000110   2b80     incf	0x80, 0x1, 0x1          incf        RX_MODE,f       ; inc to checksum mode
000112   0012     return	0                     return
                                           
                                           serial_rx_checksum
000114   50ae     movf	0xae, 0, 0              movf        RCREG,w
                                               ; keep a copy in the RX buffer
000116   6eee     movwf	0xee, 0                movwf       POSTINC0
                                               ; do an xor with the calculated checksum so far, should result in zero
000118   1b83     xorwf	0x83, 0x1, 0x1         xorwf       RX_CHECKSUM,f
00011a   e005     bz	0x126                     bz          serial_rx_checksum_passed
                                               ; if execution got here the checksum failed
00011c   1b83     xorwf	0x83, 0x1, 0x1         xorwf       RX_CHECKSUM,f           ; return to the calculated checksum for debug
00011e   8384     bsf	0x84, 0x1, 0x1           bsf         RX_FLAGS,CHECKSUM_FAIL  ; set a flag
000120   2b80     incf	0x80, 0x1, 0x1          incf        RX_MODE,f               ; switch to busy mode
000122   6ae9     clrf	0xe9, 0                 clrf        FSR0L                   ; reset the RX pointer
000124   0012     return	0                     return
                                           
                                           serial_rx_checksum_passed
                                               ; checksum okay, set busy mode and exit
000126   2b80     incf	0x80, 0x1, 0x1          incf        RX_MODE,f
000128   6ae9     clrf	0xe9, 0                 clrf        FSR0L
00012a   0012     return	0                     return
                                           
                                           ; -- End of interrupt routines ------------------------------------------------
                                           
                                           ;******************************************************************************
                                           ;*                                                                            *
                                           ;*      serial_command_dispatch - checks command and branches to appropriate  *
                                           ;*                                routine                                     *
                                           ;*                                                                            *
                                           ;*      Called from the main loop to deal with any complete commands          *
                                           ;*                                                                            *
                                           ;******************************************************************************
                                           
                                           serial_command_dispatch
                                               ; first check if there is a command
00012c   a580     btfss	0x80, 0x2, 0x1         btfss       RX_MODE,2       ; if bit 2 is set (mode 4 == RX_BUSY) there is a command ready
00012e   0012     return	0                     return                      ; otherwise nothing to do here
                                               ; next see if there was an error in the checksum
000130   b384     btfsc	0x84, 0x1, 0x1         btfsc       RX_FLAGS,CHECKSUM_FAIL
000132   ef1d     goto	0x83a                   goto        serial_error_checksum           ; if there was report the error
000134   f004
                                               ; no error, so check the command is within bounds
000136   0ee0     movlw	0xe0                   movlw       0xE0
000138   1581     andwf	0x81, 0, 0x1           andwf       RX_COMMAND,w
00013a   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS,Z
00013c   ef33     goto	0x866                   goto        serial_error_bad_command        ; command was more than 31
00013e   f004
                                               ; We know RX_COMMAND is a valid command now.  Jump
000140   0e00     movlw	0                      movlw       UPPER serial_command_jump_table
000142   6efb     movwf	0xfb, 0                movwf       PCLATU
000144   0e01     movlw	0x1                    movlw       HIGH serial_command_jump_table
000146   6efa     movwf	0xfa, 0                movwf       PCLATH
000148   5181     movf	0x81, 0, 0x1            movf        RX_COMMAND,w
00014a   46e8     rlncf	0xe8, 0x1, 0           rlncf       WREG,f
00014c   46e8     rlncf	0xe8, 0x1, 0           rlncf       WREG,f
00014e   efa9     goto	0x152                   goto        serial_command_jump_table
000150   f000
                                           
                                               PAGE
                                           
                                           serial_command_jump_table
000152   26f9     addwf	0xf9, 0x1, 0           addwf       PCL,f
000154   ef49     goto	0x892                   goto        serial_error_unused_command     ; 00
000156   f004
000158   ef49     goto	0x892                   goto        serial_error_unused_command     ; 01
00015a   f004
00015c   ef2b     goto	0x256                   goto        serial_read_mem                 ; 02
00015e   f001
000160   ef4c     goto	0x298                   goto        serial_write_mem                ; 03
000162   f001
000164   ef6c     goto	0x2d8                   goto        serial_block_mem_read           ; 04
000166   f001
000168   ef97     goto	0x32e                   goto        serial_block_mem_write          ; 05
00016a   f001
00016c   efea     goto	0x1d4                   goto        serial_read_io                  ; 06
00016e   f000
000170   ef0b     goto	0x216                   goto        serial_write_io                 ; 07
000172   f001
000174   efbf     goto	0x37e                   goto        serial_bios_update              ; 08
000176   f001
000178   efda     goto	0x3b4                   goto        serial_do_commands              ; 09
00017a   f001
00017c   ef49     goto	0x892                   goto        serial_error_unused_command     ; 0A
00017e   f004
000180   ef49     goto	0x892                   goto        serial_error_unused_command     ; 0B
000182   f004
000184   ef49     goto	0x892                   goto        serial_error_unused_command     ; 0C
000186   f004
000188   ef49     goto	0x892                   goto        serial_error_unused_command     ; 0D
00018a   f004
00018c   ef49     goto	0x892                   goto        serial_error_unused_command     ; 0E
00018e   f004
000190   ef49     goto	0x892                   goto        serial_error_unused_command     ; 0F
000192   f004
000194   ef49     goto	0x892                   goto        serial_error_unused_command     ; 10
000196   f004
000198   ef49     goto	0x892                   goto        serial_error_unused_command     ; 11
00019a   f004
00019c   ef49     goto	0x892                   goto        serial_error_unused_command     ; 12
00019e   f004
0001a0   ef49     goto	0x892                   goto        serial_error_unused_command     ; 13
0001a2   f004
0001a4   ef49     goto	0x892                   goto        serial_error_unused_command     ; 14
0001a6   f004
0001a8   ef49     goto	0x892                   goto        serial_error_unused_command     ; 15
0001aa   f004
0001ac   ef49     goto	0x892                   goto        serial_error_unused_command     ; 16
0001ae   f004
0001b0   ef49     goto	0x892                   goto        serial_error_unused_command     ; 17
0001b2   f004
0001b4   ef49     goto	0x892                   goto        serial_error_unused_command     ; 18
0001b6   f004
0001b8   ef49     goto	0x892                   goto        serial_error_unused_command     ; 19
0001ba   f004
0001bc   ef49     goto	0x892                   goto        serial_error_unused_command     ; 1A
0001be   f004
0001c0   ef49     goto	0x892                   goto        serial_error_unused_command     ; 1B
0001c2   f004
0001c4   ef49     goto	0x892                   goto        serial_error_unused_command     ; 1C
0001c6   f004
0001c8   ef49     goto	0x892                   goto        serial_error_unused_command     ; 1D
0001ca   f004
0001cc   ef49     goto	0x892                   goto        serial_error_unused_command     ; 1E
0001ce   f004
0001d0   ef49     goto	0x892                   goto        serial_error_unused_command     ; 1F
0001d2   f004
                                           
                                           ; -- serial command functions -------------------------------------------------
                                           
                                           serial_read_io
                                               ; read a single IO port to the serial host
                                               ; Address   2 bytes be
                                               ; check that the command argument length is right
0001d4   50ee     movf	0xee, 0, 0              movf        POSTINC0,w              ; command, just move the pointer
0001d6   0e02     movlw	0x2                    movlw       0x02                    ; correct number of bytes
0001d8   6f91     movwf	0x91, 0x1              movwf       MAIN_TEMP               ; put it in temp for error report
0001da   18ee     xorwf	0xee, 0, 0             xorwf       POSTINC0,w              ; check that the length is right
0001dc   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS,Z
0001de   ef5d     goto	0x8ba                   goto        serial_error_wrong_parameters   ; long bnz
0001e0   f004
                                           ;    bnz         serial_error_wrong_parameters   ; not zero so not equal, report
                                               ; got here so length is good
                                           
                                               ; make sure we can do Z80 bus operations
0001e2   ec14     call	0xc28, 0                call        ensure_master
0001e4   f006
                                           
0001e6   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
0001e8   6f95     movwf	0x95, 0x1              movwf       HI_ADDR
0001ea   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
0001ec   6f94     movwf	0x94, 0x1              movwf       LO_ADDR
                                               ; do the IO read
0001ee   ec64     call	0xcc8, 0                call        io_read
0001f0   f006
                                           
                                               ; now return to previous master/slave mode
0001f2   ec1c     call	0xc38, 0                call        revert_master
0001f4   f006
                                           
                                               ; now build a serial packet and return it to the host
0001f6   6ae1     clrf	0xe1, 0                 clrf        FSR1L
                                               ; reply with the command
0001f8   5181     movf	0x81, 0, 0x1            movf        RX_COMMAND,w
0001fa   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0001fc   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
                                               ; now the length (1 byte)
0001fe   0e01     movlw	0x1                    movlw       0x01
000200   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000202   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; now the actual data
000204   5196     movf	0x96, 0, 0x1            movf        DREG,w
000206   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000208   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; finally add the checksum to the packet
00020a   5185     movf	0x85, 0, 0x1            movf        TX_CHECKSUM,w
00020c   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                           
00020e   ec40     call	0x80, 0                 call        serial_tx_send_packet
000210   f000
                                           
000212   efab     goto	0x956                   goto        serial_handler_exit
000214   f004
                                           
                                           serial_write_io
                                               ; write a single IO port from the serial host
                                               ; Address   2 bytes be
                                               ; Data      1 byte
                                               ; check that the command argument length is right
000216   50ee     movf	0xee, 0, 0              movf        POSTINC0,w              ; command, just move the pointer
000218   0e03     movlw	0x3                    movlw       0x03                    ; correct number of bytes
00021a   6f91     movwf	0x91, 0x1              movwf       MAIN_TEMP               ; put it in temp for error report
00021c   18ee     xorwf	0xee, 0, 0             xorwf       POSTINC0,w              ; check that the length is right
00021e   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS,Z                ; long bnz
000220   ef5d     goto	0x8ba                   goto        serial_error_wrong_parameters
000222   f004
                                           ;    bnz         serial_error_wrong_parameters   ; not zero so not equal, report
                                               ; got here so length is good
                                           
                                               ; make sure we can do Z80 bus operations
000224   ec14     call	0xc28, 0                call        ensure_master
000226   f006
                                           
000228   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
00022a   6f95     movwf	0x95, 0x1              movwf       HI_ADDR
00022c   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
00022e   6f94     movwf	0x94, 0x1              movwf       LO_ADDR
000230   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
000232   6f96     movwf	0x96, 0x1              movwf       DREG
                                               ; do the IO write
000234   ec75     call	0xcea, 0                call        io_write
000236   f006
                                           
                                               ; now return to previous master/slave mode
000238   ec1c     call	0xc38, 0                call        revert_master
00023a   f006
                                           
                                               ; now build a serial packet and return it to the host (just an ack)
00023c   6ae1     clrf	0xe1, 0                 clrf        FSR1L
                                               ; reply with the command
00023e   5181     movf	0x81, 0, 0x1            movf        RX_COMMAND,w
000240   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000242   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
                                               ; now the length (0 bytes)
000244   0e00     movlw	0                      movlw       0x00
000246   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000248   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; finally add the checksum to the packet
00024a   5185     movf	0x85, 0, 0x1            movf        TX_CHECKSUM,w
00024c   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                           
00024e   ec40     call	0x80, 0                 call        serial_tx_send_packet
000250   f000
                                           
000252   efab     goto	0x956                   goto        serial_handler_exit
000254   f004
                                           
                                           serial_read_mem
                                               ; read a single byte from system memory
                                               ; Address   2 byte be
                                           
000256   50ee     movf	0xee, 0, 0              movf        POSTINC0,w      ; dump the command byte
000258   0e02     movlw	0x2                    movlw       0x02            ; correct number of bytes
00025a   6f91     movwf	0x91, 0x1              movwf       MAIN_TEMP       ; put it in temp for error report
00025c   18ee     xorwf	0xee, 0, 0             xorwf       POSTINC0,w      ; check the byte length of the command
00025e   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS,Z        ; long bnz
000260   ef5d     goto	0x8ba                   goto        serial_error_wrong_parameters
000262   f004
                                           
                                               ; make sure we can do Z80 bus operations
000264   ec14     call	0xc28, 0                call        ensure_master
000266   f006
                                           
000268   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
00026a   6f95     movwf	0x95, 0x1              movwf       HI_ADDR
00026c   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
00026e   6f94     movwf	0x94, 0x1              movwf       LO_ADDR
                                           
000270   ec87     call	0xd0e, 0                call        mem_read
000272   f006
                                           
000274   ec1c     call	0xc38, 0                call        revert_master
000276   f006
                                           
                                               ; reset the send buffer pointer
000278   6ae1     clrf	0xe1, 0                 clrf        FSR1L
                                               ; reply with the command
00027a   5181     movf	0x81, 0, 0x1            movf        RX_COMMAND,w
00027c   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00027e   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
                                               ; now the packet length (1 byte of data)
000280   0e01     movlw	0x1                    movlw       0x01
000282   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000284   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; now the data byte
000286   5196     movf	0x96, 0, 0x1            movf        DREG,w
000288   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00028a   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; finally the checksum
00028c   5185     movf	0x85, 0, 0x1            movf        TX_CHECKSUM,w
00028e   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                               
000290   ec40     call	0x80, 0                 call        serial_tx_send_packet
000292   f000
                                           
000294   efab     goto	0x956                   goto        serial_handler_exit
000296   f004
                                           
                                           serial_write_mem
                                               ; write a single byte to system memory
                                               ; Address   2 byte be
                                               ; Data      1 byte
                                           
000298   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
00029a   0e03     movlw	0x3                    movlw       0x03            ; correct number of bytes
00029c   6f91     movwf	0x91, 0x1              movwf       MAIN_TEMP
00029e   18ee     xorwf	0xee, 0, 0             xorwf       POSTINC0,w
0002a0   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS,Z
0002a2   ef5d     goto	0x8ba                   goto        serial_error_wrong_parameters
0002a4   f004
                                           
                                               ; make sure we can do Z80 bus operations
0002a6   ec14     call	0xc28, 0                call        ensure_master
0002a8   f006
                                           
0002aa   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
0002ac   6f95     movwf	0x95, 0x1              movwf       HI_ADDR
0002ae   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
0002b0   6f94     movwf	0x94, 0x1              movwf       LO_ADDR
0002b2   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
0002b4   6f96     movwf	0x96, 0x1              movwf       DREG
                                           
0002b6   ec96     call	0xd2c, 0                call        mem_write
0002b8   f006
                                           
0002ba   ec1c     call	0xc38, 0                call        revert_master
0002bc   f006
                                           
0002be   6ae1     clrf	0xe1, 0                 clrf        FSR1L
                                           
0002c0   5181     movf	0x81, 0, 0x1            movf        RX_COMMAND,w
0002c2   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0002c4   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
                                               ; now the packet length (0 bytes, this is just an ACK)
0002c6   0e00     movlw	0                      movlw       0x00
0002c8   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0002ca   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; finally add the checksum
0002cc   5185     movf	0x85, 0, 0x1            movf        TX_CHECKSUM,w
0002ce   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                           
0002d0   ec40     call	0x80, 0                 call        serial_tx_send_packet
0002d2   f000
                                           
0002d4   efab     goto	0x956                   goto        serial_handler_exit
0002d6   f004
                                           
                                           serial_block_mem_read
                                               ; read a block of memory addresses
                                               ; Start Address     2 byte be
                                               ; Data Count        1 byte
                                           
0002d8   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
0002da   0e03     movlw	0x3                    movlw       0x03
0002dc   6f91     movwf	0x91, 0x1              movwf       MAIN_TEMP
0002de   18ee     xorwf	0xee, 0, 0             xorwf       POSTINC0,w
0002e0   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS,Z
0002e2   ef5d     goto	0x8ba                   goto        serial_error_wrong_parameters
0002e4   f004
                                           
                                               ; check that we can do Z80 bus operations
0002e6   ec14     call	0xc28, 0                call        ensure_master
0002e8   f006
                                           
0002ea   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
0002ec   6f95     movwf	0x95, 0x1              movwf       HI_ADDR
0002ee   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
0002f0   6f94     movwf	0x94, 0x1              movwf       LO_ADDR
0002f2   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
0002f4   6f86     movwf	0x86, 0x1              movwf       TX_COUNT
                                           
                                               ; ought to check TX_COUNT length here
0002f6   0efe     movlw	0xfe                   movlw       0xFE
0002f8   6186     cpfslt	0x86, 0x1             cpfslt      TX_COUNT
0002fa   ef8c     goto	0x918                   goto        serial_error_packet_length
0002fc   f004
                                           
0002fe   6ae1     clrf	0xe1, 0                 clrf        FSR1L
                                           
000300   5181     movf	0x81, 0, 0x1            movf        RX_COMMAND,w
000302   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000304   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
000306   5186     movf	0x86, 0, 0x1            movf        TX_COUNT,w
000308   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00030a   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                           
                                               ; loop call mem_read and store in TX buffer
                                           serial_block_mem_read_loop
00030c   ec87     call	0xd0e, 0                call        mem_read
00030e   f006
000310   5196     movf	0x96, 0, 0x1            movf        DREG,w
000312   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000314   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                           
000316   4b94     infsnz	0x94, 0x1, 0x1        infsnz      LO_ADDR,f
000318   2b95     incf	0x95, 0x1, 0x1          incf        HI_ADDR,f
                                           
00031a   2f86     decfsz	0x86, 0x1, 0x1        decfsz      TX_COUNT,f
00031c   d7f7     bra	0x30c                    bra         serial_block_mem_read_loop
                                           
                                               ; release the bus
00031e   ec1c     call	0xc38, 0                call        revert_master
000320   f006
                                           
                                               ; add the checksum
000322   5185     movf	0x85, 0, 0x1            movf        TX_CHECKSUM,w
000324   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                           
000326   ec40     call	0x80, 0                 call        serial_tx_send_packet
000328   f000
                                           
00032a   efab     goto	0x956                   goto        serial_handler_exit
00032c   f004
                                           
                                           serial_block_mem_write
                                               ; copy a block of data from the PC into the memory
                                               ; Start Address:    2 bytes be
                                               ; Data:             Any length 1 or longer
00032e   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
000330   0e03     movlw	0x3                    movlw       0x03            ; minimum number of parameters
000332   6f91     movwf	0x91, 0x1              movwf       MAIN_TEMP
000334   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
000336   6f86     movwf	0x86, 0x1              movwf       TX_COUNT        ; need to keep a track of this for byte counting
000338   0e02     movlw	0x2                    movlw       0x02            ; we're going to do a greater than, so needs to be 1 less than min
                                               ; second parameter can be any length of bytes, so the correct length is a minimum
00033a   6586     cpfsgt	0x86, 0x1             cpfsgt      TX_COUNT
00033c   ef5d     goto	0x8ba                   goto        serial_error_wrong_parameters
00033e   f004
                                           
000340   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
000342   6f95     movwf	0x95, 0x1              movwf       HI_ADDR
000344   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
000346   6f94     movwf	0x94, 0x1              movwf       LO_ADDR
                                           
                                               ; now set up the byte counter, length of packet data - address field
000348   0e02     movlw	0x2                    movlw       0x02
00034a   5f86     subwf	0x86, 0x1, 0x1         subwf       TX_COUNT,f      ; take off the address length
                                           
00034c   ec14     call	0xc28, 0                call        ensure_master
00034e   f006
                                           
                                           serial_block_mem_write_loop    
000350   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
000352   6f96     movwf	0x96, 0x1              movwf       DREG
                                           
000354   ec96     call	0xd2c, 0                call        mem_write
000356   f006
                                           
000358   4b94     infsnz	0x94, 0x1, 0x1        infsnz      LO_ADDR,f
00035a   2b95     incf	0x95, 0x1, 0x1          incf        HI_ADDR,f
                                           
00035c   2f86     decfsz	0x86, 0x1, 0x1        decfsz      TX_COUNT,f
00035e   d7f8     bra	0x350                    bra         serial_block_mem_write_loop
                                           
000360   ec1c     call	0xc38, 0                call        revert_master
000362   f006
                                           
000364   6ae1     clrf	0xe1, 0                 clrf        FSR1L
000366   5181     movf	0x81, 0, 0x1            movf        RX_COMMAND,w
000368   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00036a   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
                                           
00036c   0e00     movlw	0                      movlw       0x00
00036e   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000370   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                           
000372   5185     movf	0x85, 0, 0x1            movf        TX_CHECKSUM,w
000374   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                           
000376   ec40     call	0x80, 0                 call        serial_tx_send_packet
000378   f000
                                           
00037a   efab     goto	0x956                   goto        serial_handler_exit
00037c   f004
                                           
                                           serial_bios_update
                                               ; update a 128 byte block of the BIOS image in Flash
                                               ; Start Address:    2 bytes be
                                               ; Data:             128 bytes
00037e   50ee     movf	0xee, 0, 0              movf        POSTINC0,w      ; command, dump this
000380   0e82     movlw	0x82                   movlw       0x82            ; 130 exact number of bytes for this packet
000382   6f91     movwf	0x91, 0x1              movwf       MAIN_TEMP       ; store the number for a possible error report
000384   18ee     xorwf	0xee, 0, 0             xorwf       POSTINC0,w      ; xor with the length from the packet
000386   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS,Z        ; if it was zero all ok
000388   ef5d     goto	0x8ba                   goto        serial_error_wrong_parameters   ; if not send an error
00038a   f004
                                           
                                               ; need to check the address is a 128 byte aligned one
                                               ; next byte is the high address byte, can be anything up to 0x1F
00038c   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
00038e   0be0     andlw	0xe0                   andlw       0xE0
000390   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS,Z
000392   ef90     goto	0x920                   goto        serial_error_bios_address_space
000394   f004
                                           
000396   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
000398   0b7f     andlw	0x7f                   andlw       0x7F            ; needs to be 128 bit aligned, so nothing in
                                                                           ; bottom 7 bits to be valid
00039a   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS,Z
00039c   ef94     goto	0x928                   goto        serial_error_bios_address_offset
00039e   f004
                                           
                                               ; looks like there's enough data and the parameters are valid.
                                               ; apply the 24K offset to point the address to the top of ROM
                                           
0003a0   0e02     movlw	0x2                    movlw       0x02
0003a2   6ee9     movwf	0xe9, 0                movwf       FSR0L
0003a4   0e60     movlw	0x60                   movlw       0x60
0003a6   26ef     addwf	0xef, 0x1, 0           addwf       INDF0,f         ; add the offset but leave the pointer there
                                           
                                               ; call boot_update to deal with the memory writing
0003a8   ec96     call	0x112c, 0               call        boot_update
0003aa   f008
                                           
                                               ; boot_update has built the response packet for us, so just send it
0003ac   ec40     call	0x80, 0                 call        serial_tx_send_packet
0003ae   f000
                                           
0003b0   efab     goto	0x956                   goto        serial_handler_exit
0003b2   f004
                                           
                                           serial_do_commands
                                               ; run a no data command
0003b4   50ee     movf	0xee, 0, 0              movf        POSTINC0,w      ; command 
0003b6   0e01     movlw	0x1                    movlw       0x01
0003b8   6f91     movwf	0x91, 0x1              movwf       MAIN_TEMP
0003ba   18ee     xorwf	0xee, 0, 0             xorwf       POSTINC0,w
0003bc   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS,Z
0003be   ef5d     goto	0x8ba                   goto        serial_error_wrong_parameters
0003c0   f004
                                           
                                               ; now perform the lookup
0003c2   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
0003c4   6f87     movwf	0x87, 0x1              movwf       JUMP_REG        ; copy to a holding register
0003c6   6b91     clrf	0x91, 0x1               clrf        MAIN_TEMP       ; clear for high byte of address jump
0003c8   90d8     bcf	0xd8, 0, 0               bcf         STATUS,C        ; clear the carry bit to rotate into bit 0
0003ca   3787     rlcf	0x87, 0x1, 0x1          rlcf        JUMP_REG,f      ; rotate storing MSB in C == x 2
0003cc   b0d8     btfsc	0xd8, 0, 0             btfsc       STATUS,C        ; see if MSB was set
0003ce   8391     bsf	0x91, 0x1, 0x1           bsf         MAIN_TEMP,1     ; if it was add 2 to high reg (gonna x2 later)
0003d0   90d8     bcf	0xd8, 0, 0               bcf         STATUS,C        ; clear the carry bit again
0003d2   3787     rlcf	0x87, 0x1, 0x1          rlcf        JUMP_REG,f      ; rotate again x4 now
0003d4   b0d8     btfsc	0xd8, 0, 0             btfsc       STATUS,C        ; see if high bit was set
0003d6   8191     bsf	0x91, 0, 0x1             bsf         MAIN_TEMP,0     ; add 1 to the high byte register
                                           
0003d8   0eea     movlw	0xea                   movlw       LOW serial_cmd_jumps    ; copy the low address for jump table
0003da   2787     addwf	0x87, 0x1, 0x1         addwf       JUMP_REG,f      ; add it to the jump address
0003dc   b0d8     btfsc	0xd8, 0, 0             btfsc       STATUS,C        ; see if the add overflowed
0003de   2b91     incf	0x91, 0x1, 0x1          incf        MAIN_TEMP,f     ; if so increment the high address
0003e0   0e03     movlw	0x3                    movlw       HIGH serial_cmd_jumps   ; get the high address byte
0003e2   2591     addwf	0x91, 0, 0x1           addwf       MAIN_TEMP,w     ; add it to the high address
                                           
0003e4   6efa     movwf	0xfa, 0                movwf       PCLATH          ; put the high byte into the PCLATH
0003e6   5187     movf	0x87, 0, 0x1            movf        JUMP_REG,w
0003e8   6ef9     movwf	0xf9, 0                movwf       PCL             ; put the low address into the PC
                                           
                                           serial_cmd_jumps
                                               ; now put 256 goto commands
0003ea   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 0                     
0003ec   f004
0003ee   eff5     goto	0x7ea                   goto        serial_do_get_reset             ; 1                     
0003f0   f003
0003f2   effb     goto	0x7f6                   goto        serial_do_get_dma               ; 2                     
0003f4   f003
0003f6   ef01     goto	0x802                   goto        serial_do_get_slave             ; 3                     
0003f8   f004
0003fa   ef07     goto	0x80e                   goto        serial_do_reset                 ; 4                     
0003fc   f004
0003fe   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 5                     
000400   f004
000402   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 6                     
000404   f004
000406   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 7                     
000408   f004
00040a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 8                     
00040c   f004
00040e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 9                     
000410   f004
000412   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 10                    
000414   f004
000416   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 11                    
000418   f004
00041a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 12                    
00041c   f004
00041e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 13                    
000420   f004
000422   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 14                    
000424   f004
000426   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 15                    
000428   f004
00042a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 16                    
00042c   f004
00042e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 17                    
000430   f004
000432   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 18                                                                                                                                
000434   f004
000436   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 19                                                                                                                                
000438   f004
00043a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 20                                                                                                                                
00043c   f004
00043e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 21                                                                                                                                
000440   f004
000442   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 22                                                                                                                                
000444   f004
000446   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 23                                                                                                                                
000448   f004
00044a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 24                                                                                                                                
00044c   f004
00044e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 25                                                                                                                                
000450   f004
000452   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 26                                                                                                                                
000454   f004
000456   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 27                                                                                                                                
000458   f004
00045a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 28                                                                                                                                
00045c   f004
00045e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 29                                                                                                                                
000460   f004
000462   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 30                                                                                                                                
000464   f004
000466   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 31                                                                                                                                
000468   f004
00046a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 32                                                                                                                                
00046c   f004
00046e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 33                                                                                                                                
000470   f004
000472   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 34                                                                                                                                
000474   f004
000476   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 35                                                                                                                                
000478   f004
00047a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 36                                                                                                                                
00047c   f004
00047e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 37                                                                                                                                
000480   f004
000482   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 38                                                                                                                                
000484   f004
000486   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 39                                                                                                                                
000488   f004
00048a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 40                                                                                                                                
00048c   f004
00048e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 41                                                                                                                                
000490   f004
000492   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 42                                                                                                                                
000494   f004
000496   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 43                                                                                                                                
000498   f004
00049a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 44                                                                                                                                
00049c   f004
00049e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 45                                                                                                                                
0004a0   f004
0004a2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 46                                                                                                                                
0004a4   f004
0004a6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 47                                                                                                                                
0004a8   f004
0004aa   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 48                                                                                                                                
0004ac   f004
0004ae   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 49                                                                                                                                
0004b0   f004
0004b2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 50                                                                                                                                
0004b4   f004
0004b6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 51                                                                                                                                
0004b8   f004
0004ba   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 52                                                                                                                                
0004bc   f004
0004be   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 53                                                                                                                                
0004c0   f004
0004c2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 54                                                                                                                                
0004c4   f004
0004c6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 55                                                                                                                                
0004c8   f004
0004ca   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 56                                                                                                                                
0004cc   f004
0004ce   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 57                                                                                                                                
0004d0   f004
0004d2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 58                                                                                                                                
0004d4   f004
0004d6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 59                                                                                                                                
0004d8   f004
0004da   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 60                                                                                                                                
0004dc   f004
0004de   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 61                                                                                                                                
0004e0   f004
0004e2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 62                                                                                                                                
0004e4   f004
0004e6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 63                                                                                                                                
0004e8   f004
0004ea   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 64                                                                                                                                
0004ec   f004
0004ee   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 65                                                                                                                                
0004f0   f004
0004f2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 66                                                                                                                                
0004f4   f004
0004f6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 67                                                                                                                                
0004f8   f004
0004fa   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 68                                                                                                                                
0004fc   f004
0004fe   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 69                                                                                                                                
000500   f004
000502   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 70                                                                                                                                
000504   f004
000506   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 71                                                                                                                                
000508   f004
00050a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 72                                                                                                                                
00050c   f004
00050e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 73                                                                                                                                
000510   f004
000512   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 74                                                                                                                                
000514   f004
000516   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 75                                                                                                                                
000518   f004
00051a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 76                                                                                                                                
00051c   f004
00051e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 77                                                                                                                                
000520   f004
000522   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 78                                                                                                                                
000524   f004
000526   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 79                                                                                                                                
000528   f004
00052a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 80                                                                                                                                
00052c   f004
00052e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 81                                                                                                                                
000530   f004
000532   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 82                                                                                                                                
000534   f004
000536   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 83                                                                                                                                
000538   f004
00053a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 84                                                                                                                                
00053c   f004
00053e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 85                                                                                                                                
000540   f004
000542   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 86                                                                                                                                
000544   f004
000546   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 87                                                                                                                                
000548   f004
00054a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 88                                                                                                                                
00054c   f004
00054e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 89                                                                                                                                
000550   f004
000552   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 90                                                                                                                                
000554   f004
000556   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 91                                                                                                                                
000558   f004
00055a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 92                                                                                                                                
00055c   f004
00055e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 93                                                                                                                                
000560   f004
000562   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 94                                                                                                                                
000564   f004
000566   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 95                                                                                                                                
000568   f004
00056a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 96                                                                                                                                
00056c   f004
00056e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 97                                                                                                                                
000570   f004
000572   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 98                                                                                                                                
000574   f004
000576   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 99                                                                                                                                
000578   f004
00057a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 100                                                                                                                               
00057c   f004
00057e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 101                                                                                                                               
000580   f004
000582   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 102                                                                                                                               
000584   f004
000586   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 103                                                                                                                               
000588   f004
00058a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 104                                                                                                                               
00058c   f004
00058e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 105                                                                                                                               
000590   f004
000592   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 106                                                                                                                               
000594   f004
000596   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 107                                                                                                                               
000598   f004
00059a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 108                                                                                                                               
00059c   f004
00059e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 109                                                                                                                               
0005a0   f004
0005a2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 110                                                                                                                               
0005a4   f004
0005a6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 111                                                                                                                               
0005a8   f004
0005aa   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 112                                                                                                                               
0005ac   f004
0005ae   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 113                                                                                                                               
0005b0   f004
0005b2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 114                                                                                                                               
0005b4   f004
0005b6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 115                                                                                                                               
0005b8   f004
0005ba   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 116                                                                                                                               
0005bc   f004
0005be   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 117                                                                                                                               
0005c0   f004
0005c2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 118                                                                                                                               
0005c4   f004
0005c6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 119                                                                                                                               
0005c8   f004
0005ca   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 120                                                                                                                               
0005cc   f004
0005ce   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 121                                                                                                                               
0005d0   f004
0005d2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 122                                                                                                                               
0005d4   f004
0005d6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 123                                                                                                                               
0005d8   f004
0005da   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 124                                                                                                                               
0005dc   f004
0005de   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 125                                                                                                                               
0005e0   f004
0005e2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 126                                                                                                                               
0005e4   f004
0005e6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 127                                                                                                                               
0005e8   f004
0005ea   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 128                                                                                                                               
0005ec   f004
0005ee   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 129                                                                                                                               
0005f0   f004
0005f2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 130                                                                                                                               
0005f4   f004
0005f6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 131                                                                                                                               
0005f8   f004
0005fa   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 132                                                                                                                               
0005fc   f004
0005fe   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 133                                                                                                                               
000600   f004
000602   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 134                                                                                                                               
000604   f004
000606   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 135                                                                                                                               
000608   f004
00060a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 136                                                                                                                               
00060c   f004
00060e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 137                                                                                                                               
000610   f004
000612   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 138                                                                                                                               
000614   f004
000616   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 139                                                                                                                               
000618   f004
00061a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 140                                                                                                                               
00061c   f004
00061e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 141                                                                                                                               
000620   f004
000622   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 142                                                                                                                               
000624   f004
000626   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 143                                                                                                                               
000628   f004
00062a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 144                                                                                                                               
00062c   f004
00062e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 145                                                                                                                               
000630   f004
000632   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 146                                                                                                                               
000634   f004
000636   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 147                                                                                                                               
000638   f004
00063a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 148                                                                                                                               
00063c   f004
00063e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 149                                                                                                                               
000640   f004
000642   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 150                                                                                                                               
000644   f004
000646   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 151                                                                                                                               
000648   f004
00064a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 152                                                                                                                               
00064c   f004
00064e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 153                                                                                                                               
000650   f004
000652   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 154                                                                                                                               
000654   f004
000656   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 155                                                                                                                               
000658   f004
00065a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 156                                                                                                                               
00065c   f004
00065e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 157                                                                                                                               
000660   f004
000662   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 158                                                                                                                               
000664   f004
000666   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 159                                                                                                                               
000668   f004
00066a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 160                                                                                                                               
00066c   f004
00066e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 161                                                                                                                               
000670   f004
000672   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 162                                                                                                                               
000674   f004
000676   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 163                                                                                                                               
000678   f004
00067a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 164                                                                                                                               
00067c   f004
00067e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 165                                                                                                                               
000680   f004
000682   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 166                                                                                                                               
000684   f004
000686   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 167                                                                                                                               
000688   f004
00068a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 168                                                                                                                               
00068c   f004
00068e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 169                                                                                                                               
000690   f004
000692   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 170                                                                                                                               
000694   f004
000696   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 171                                                                                                                               
000698   f004
00069a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 172                                                                                                                               
00069c   f004
00069e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 173                                                                                                                               
0006a0   f004
0006a2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 174                                                                                                                               
0006a4   f004
0006a6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 175                                                                                                                               
0006a8   f004
0006aa   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 176                                                                                                                               
0006ac   f004
0006ae   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 177                                                                                                                               
0006b0   f004
0006b2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 178                                                                                                                               
0006b4   f004
0006b6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 179                                                                                                                               
0006b8   f004
0006ba   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 180                                                                                                                               
0006bc   f004
0006be   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 181                                                                                                                               
0006c0   f004
0006c2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 182                                                                                                                               
0006c4   f004
0006c6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 183                                                                                                                               
0006c8   f004
0006ca   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 184                                                                                                                               
0006cc   f004
0006ce   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 185                                                                                                                               
0006d0   f004
0006d2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 186                                                                                                                               
0006d4   f004
0006d6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 187                                                                                                                               
0006d8   f004
0006da   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 188                                                                                                                               
0006dc   f004
0006de   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 189                                                                                                                               
0006e0   f004
0006e2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 190                                                                                                                               
0006e4   f004
0006e6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 191                                                                                                                               
0006e8   f004
0006ea   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 192                                                                                                                               
0006ec   f004
0006ee   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 193                                                                                                                               
0006f0   f004
0006f2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 194                                                                                                                               
0006f4   f004
0006f6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 195                                                                                                                               
0006f8   f004
0006fa   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 196
0006fc   f004
0006fe   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 197
000700   f004
000702   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 198
000704   f004
000706   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 199
000708   f004
00070a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 200
00070c   f004
00070e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 201
000710   f004
000712   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 202
000714   f004
000716   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 203
000718   f004
00071a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 204
00071c   f004
00071e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 205
000720   f004
000722   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 206
000724   f004
000726   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 207
000728   f004
00072a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 208
00072c   f004
00072e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 209
000730   f004
000732   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 210
000734   f004
000736   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 211
000738   f004
00073a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 212
00073c   f004
00073e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 213
000740   f004
000742   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 214
000744   f004
000746   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 215
000748   f004
00074a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 216
00074c   f004
00074e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 217
000750   f004
000752   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 218
000754   f004
000756   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 219
000758   f004
00075a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 220
00075c   f004
00075e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 221
000760   f004
000762   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 222
000764   f004
000766   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 223
000768   f004
00076a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 224
00076c   f004
00076e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 225
000770   f004
000772   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 226
000774   f004
000776   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 227
000778   f004
00077a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 228
00077c   f004
00077e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 229
000780   f004
000782   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 230
000784   f004
000786   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 231
000788   f004
00078a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 232
00078c   f004
00078e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 233
000790   f004
000792   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 234
000794   f004
000796   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 235
000798   f004
00079a   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 236
00079c   f004
00079e   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 237
0007a0   f004
0007a2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 238
0007a4   f004
0007a6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 239
0007a8   f004
0007aa   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 240
0007ac   f004
0007ae   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 241
0007b0   f004
0007b2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 242
0007b4   f004
0007b6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 243
0007b8   f004
0007ba   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 244
0007bc   f004
0007be   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 245
0007c0   f004
0007c2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 246
0007c4   f004
0007c6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 247
0007c8   f004
0007ca   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 248
0007cc   f004
0007ce   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 249
0007d0   f004
0007d2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 250
0007d4   f004
0007d6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 251
0007d8   f004
0007da   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 252
0007dc   f004
0007de   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 253
0007e0   f004
0007e2   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 254
0007e4   f004
0007e6   ef74     goto	0x8e8                   goto        serial_error_do_unknown         ; 255
0007e8   f004
                                           
                                           serial_do_get_reset
                                               ; run the get_reset subroutine and return success
0007ea   ec3b     call	0xc76, 0                call        get_reset
0007ec   f006
0007ee   ec0c     call	0x818, 0                call        serial_do_ack
0007f0   f004
0007f2   efab     goto	0x956                   goto        serial_handler_exit
0007f4   f004
                                           
                                           serial_do_get_dma
0007f6   ec2f     call	0xc5e, 0                call        get_dma
0007f8   f006
0007fa   ec0c     call	0x818, 0                call        serial_do_ack
0007fc   f004
0007fe   efab     goto	0x956                   goto        serial_handler_exit
000800   f004
                                           
                                           serial_do_get_slave
000802   ec49     call	0xc92, 0                call        get_slave
000804   f006
000806   ec0c     call	0x818, 0                call        serial_do_ack
000808   f004
00080a   efab     goto	0x956                   goto        serial_handler_exit
00080c   f004
                                           
                                           serial_do_reset
                                               ; special case, send ack then perform a CPU reset
00080e   ec0c     call	0x818, 0                call        serial_do_ack
000810   f004
                                           
                                           serial_do_reset_loop
                                               ; need to wait here until the UART has finished sending the two bytes
                                               ; that are in the shift register and transmit buffer
000812   a2ac     btfss	0xac, 0x1, 0           btfss       TXSTA,TRMT
000814   d7fe     bra	0x812                    bra         serial_do_reset_loop
                                               ; TSR is now empty, can safely do reset.
                                           
000816   00ff     reset                        reset
                                           
                                           serial_do_ack
000818   6ae1     clrf	0xe1, 0                 clrf        FSR1L
00081a   0e09     movlw	0x9                    movlw       0x09
00081c   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00081e   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
                                           
000820   0e01     movlw	0x1                    movlw       0x01
000822   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000824   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                           
000826   0e02     movlw	0x2                    movlw       0x02
000828   6ee9     movwf	0xe9, 0                movwf       FSR0L
00082a   50ef     movf	0xef, 0, 0              movf        INDF0,w
00082c   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00082e   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                           
000830   5185     movf	0x85, 0, 0x1            movf        TX_CHECKSUM,w
000832   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                           
000834   ec40     call	0x80, 0                 call        serial_tx_send_packet
000836   f000
                                           
000838   0012     return	0                     return
                                           
                                           ; -- serial error functions ---------------------------------------------------
                                           
                                           serial_error_checksum
                                               ; report a message received with a bad checksum
                                               ; special first character because we don't know if the command was corrupt
                                               ; or data following it so start with a "0"
                                               ; set the send pointer to the start of the buffer
00083a   6ae1     clrf	0xe1, 0                 clrf        FSR1L
00083c   0e80     movlw	0x80                   movlw       0x80
00083e   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000840   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
                                               ; next is length byte.  checksum fail message is always 3 bytes
000842   0e03     movlw	0x3                    movlw       0x03
000844   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000846   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; now is the error code.  checksum fail = 0x0001
000848   0e00     movlw	0                      movlw       0x00
00084a   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00084c   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
00084e   0e01     movlw	0x1                    movlw       0x01
000850   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000852   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; now send the calculated checksum for debugging
000854   5183     movf	0x83, 0, 0x1            movf        RX_CHECKSUM,w
000856   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000858   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; now add the checksum
00085a   5185     movf	0x85, 0, 0x1            movf        TX_CHECKSUM,w
00085c   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                               
                                               ; packet assembled, send the packet
00085e   ec40     call	0x80, 0                 call        serial_tx_send_packet
000860   f000
                                           
000862   efab     goto	0x956                   goto        serial_handler_exit
000864   f004
                                           
                                           serial_error_bad_command
                                               ; report a bad command i.e. byte outside [A-Z]
                                               ; set the send pointer to the start of the buffer
000866   6ae1     clrf	0xe1, 0                 clrf        FSR1L
000868   0e81     movlw	0x81                   movlw       0x81     ; bad command so can't do the normal upper/lower conversion
00086a   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00086c   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
                                               ; next is length byte.  always 3 bytes for bad command
00086e   0e03     movlw	0x3                    movlw       0x03
000870   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000872   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; now is the error code.  bad command = 0x0002
000874   0e00     movlw	0                      movlw       0x00
000876   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000878   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
00087a   0e02     movlw	0x2                    movlw       0x02
00087c   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00087e   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; now send the bad command for debug
000880   5181     movf	0x81, 0, 0x1            movf        RX_COMMAND,w
000882   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000884   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; finally add the checksum
000886   5185     movf	0x85, 0, 0x1            movf        TX_CHECKSUM,w
000888   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                           
                                               ; packet assembled, send the packet
00088a   ec40     call	0x80, 0                 call        serial_tx_send_packet
00088c   f000
                                           
00088e   efab     goto	0x956                   goto        serial_handler_exit
000890   f004
                                           
                                           serial_error_unused_command
                                               ; valid command letter but not used
                                               ; set the send pointer to the start of the buffer
000892   6ae1     clrf	0xe1, 0                 clrf        FSR1L
                                               ; command code is same with bit 6 set
000894   5181     movf	0x81, 0, 0x1            movf        RX_COMMAND,w
000896   8ce8     bsf	0xe8, 0x6, 0             bsf         WREG,6          ; set bit 6, the error flag
000898   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00089a   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
                                               ; now the length only the error code now
00089c   0e02     movlw	0x2                    movlw       0x02
00089e   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0008a0   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; now the error code 0x0003 for unused command
0008a2   0e00     movlw	0                      movlw       0x00
0008a4   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0008a6   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
0008a8   0e03     movlw	0x3                    movlw       0x03
0008aa   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0008ac   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; now the checksum
0008ae   5185     movf	0x85, 0, 0x1            movf        TX_CHECKSUM,w
0008b0   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                           
0008b2   ec40     call	0x80, 0                 call        serial_tx_send_packet
0008b4   f000
                                           
0008b6   efab     goto	0x956                   goto        serial_handler_exit
0008b8   f004
                                           
                                           serial_error_wrong_parameters
                                               ; valid command but got the wrong number of parameters
0008ba   6ae1     clrf	0xe1, 0                 clrf        FSR1L
                                               ; command code with bit 6 set
0008bc   5181     movf	0x81, 0, 0x1            movf        RX_COMMAND,w
0008be   8ce8     bsf	0xe8, 0x6, 0             bsf         WREG,6
0008c0   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0008c2   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
                                               ; now the length, error code plus the expected number of params
0008c4   0e03     movlw	0x3                    movlw       0x03
0008c6   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0008c8   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; now the error code 0x0004
0008ca   0e00     movlw	0                      movlw       0x00
0008cc   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0008ce   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
0008d0   0e04     movlw	0x4                    movlw       0x04
0008d2   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0008d4   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; now the correct number of argument bytes
0008d6   5191     movf	0x91, 0, 0x1            movf        MAIN_TEMP,w
0008d8   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0008da   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                               ; now the checksum
0008dc   5185     movf	0x85, 0, 0x1            movf        TX_CHECKSUM,w
0008de   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                           
0008e0   ec40     call	0x80, 0                 call        serial_tx_send_packet
0008e2   f000
                                           
0008e4   efab     goto	0x956                   goto        serial_handler_exit
0008e6   f004
                                           
                                           serial_error_do_unknown
0008e8   6ae1     clrf	0xe1, 0                 clrf        FSR1L
0008ea   0e49     movlw	0x49                   movlw       0x49
0008ec   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0008ee   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
                                           
0008f0   0e03     movlw	0x3                    movlw       0x03
0008f2   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0008f4   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                           
0008f6   0e00     movlw	0                      movlw       0x00
0008f8   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0008fa   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                           
0008fc   0e09     movlw	0x9                    movlw       0x09
0008fe   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000900   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                           
000902   0e02     movlw	0x2                    movlw       0x02
000904   6ee9     movwf	0xe9, 0                movwf       FSR0L
000906   50ef     movf	0xef, 0, 0              movf        INDF0,w
000908   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00090a   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                           
00090c   5185     movf	0x85, 0, 0x1            movf        TX_CHECKSUM,w
00090e   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                           
000910   ec40     call	0x80, 0                 call        serial_tx_send_packet
000912   f000
                                           
000914   efab     goto	0x956                   goto        serial_handler_exit
000916   f004
                                           
                                           serial_error_packet_length
000918   0e05     movlw	0x5                    movlw       0x05
00091a   6f91     movwf	0x91, 0x1              movwf       MAIN_TEMP
00091c   ef98     goto	0x930                   goto        serial_error_generic
00091e   f004
                                           
                                           serial_error_bios_address_space
000920   0e06     movlw	0x6                    movlw       0x06
000922   6f91     movwf	0x91, 0x1              movwf       MAIN_TEMP
000924   ef98     goto	0x930                   goto        serial_error_generic
000926   f004
                                           
                                           serial_error_bios_address_offset
000928   0e07     movlw	0x7                    movlw       0x07
00092a   6f91     movwf	0x91, 0x1              movwf       MAIN_TEMP
00092c   ef98     goto	0x930                   goto        serial_error_generic
00092e   f004
                                           
                                           serial_error_generic
000930   6ae1     clrf	0xe1, 0                 clrf        FSR1L
000932   5181     movf	0x81, 0, 0x1            movf        RX_COMMAND,w
000934   8ce8     bsf	0xe8, 0x6, 0             bsf         WREG,6
000936   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000938   6f85     movwf	0x85, 0x1              movwf       TX_CHECKSUM
                                           
00093a   0e02     movlw	0x2                    movlw       0x02
00093c   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00093e   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                           
000940   0e00     movlw	0                      movlw       0x00
000942   6ee6     movwf	0xe6, 0                movwf       POSTINC1
000944   1b85     xorwf	0x85, 0x1, 0x1         xorwf       TX_CHECKSUM,f
                                           
000946   5191     movf	0x91, 0, 0x1            movf        MAIN_TEMP,w
000948   6ee6     movwf	0xe6, 0                movwf       POSTINC1
00094a   1985     xorwf	0x85, 0, 0x1           xorwf       TX_CHECKSUM,w
                                           
00094c   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                           
00094e   ec40     call	0x80, 0                 call        serial_tx_send_packet
000950   f000
                                           
000952   efab     goto	0x956                   goto        serial_handler_exit
000954   f004
                                           
                                           serial_handler_exit
                                               ; standard exit for all serial response functions
000956   6ae9     clrf	0xe9, 0                 clrf        FSR0L           ; reset RX pointer
000958   6b84     clrf	0x84, 0x1               clrf        RX_FLAGS        ; get rid of any flags from this message
00095a   6b80     clrf	0x80, 0x1               clrf        RX_MODE         ; go back to waiting
00095c   0012     return	0                     return
                                           
                                           ; == Export Direct Access to ==================================================
                                           
                                               GLOBAL      serial_init
                                               GLOBAL      serial_rx_int
                                               GLOBAL      serial_command_dispatch
                                           
                                           end
                                           list p=18f4520
                                           include <p18f4520.inc>
                                                   LIST
                                           
                                           ;==========================================================================
                                           ;  MPASM PIC18F4520 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2007 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           include "portpins.inc"
                                           ;== PORT Definitions ==========================================================
                                           
                                           ;-- PORT A --------------------------------------------------------------------
                                           
                                           P_RESET         EQU     0
                                           P_BUSRQ         EQU     1
                                           P_MREQ          EQU     2
                                           P_IORQ          EQU     3
                                           P_WAIT          EQU     4
                                           P_HI_LAT        EQU     5
                                           
                                           ;-- PORT C --------------------------------------------------------------------
                                           
                                           P_BUSACK        EQU     0
                                           P_SD_CS         EQU     1
                                           P_CLK           EQU     2
                                           P_SD_CK         EQU     3
                                           P_SD_DI         EQU     4
                                           P_SD_DO         EQU     5
                                           P_TX            EQU     6
                                           P_RX            EQU     7
                                           
                                           ;-- PORT B ---------------------------------------------------------------------
                                           
                                           P_SD_FIND       EQU     4
                                           P_TXE           EQU     5
                                           P_RXF           EQU     6
                                           P_SD_PRES       EQU     7
                                           
                                           SLAVE_LATB_DEF EQU     b'11000000'
                                           SLAVE_TRISB_DEF EQU     b'00011111'
                                           
                                           ;-- PORT E --------------------------------------------------------------------
                                           
                                           P_RD            EQU     0
                                           P_WR            EQU     1
                                           P_CS            EQU     2
                                           
                                           ; -- Externals From host_bus.asm -----------------------------------------------
                                           
                                               EXTERN      slave_count
                                           
                                               EXTERN      io_write
                                               EXTERN      DREG
                                               EXTERN      LO_ADDR
                                               EXTERN      HI_ADDR
                                           
                                               EXTERN      ensure_master
                                               EXTERN      revert_master
                                           
                                               UDATA
                                           count           res     2
                                           sdflags         res     1
                                           v2              equ     0
                                           carderr         equ     1
                                           cardinit        equ     2
                                           init_started     equ     3
                                           
                                           sd_command      res     1
                                           sd_data         res     4
                                           ; MAIN_TEMP       res     1
                                           temp2           res     1
                                           ; low_jump        res     1
                                               CODE
                                           
                                           sd_init
00095e   828b     bsf	0x8b, 0x1, 0             bsf         LATC, P_SD_CS           ; cs pin high
000960   9294     bcf	0x94, 0x1, 0             bcf         TRISC, P_SD_CS          ; cs pin as output
000962   9a94     bcf	0x94, 0x5, 0             bcf         TRISC, P_SD_DO
000964   9694     bcf	0x94, 0x3, 0             bcf         TRISC, P_SD_CK
000966   8894     bsf	0x94, 0x4, 0             bsf         TRISC, P_SD_DI
                                           
000968   0e00     movlw	0                      movlw       b'00000000'
00096a   6ec7     movwf	0xc7, 0                movwf       SSPSTAT
00096c   0e30     movlw	0x30                   movlw       b'00110000'
00096e   6ec6     movwf	0xc6, 0                movwf       SSPCON1
                                           
000970   6b8a     clrf	0x8a, 0x1               clrf        sdflags
                                           
000972   0e06     movlw	0x6                    movlw       b'00000110'
000974   6ed5     movwf	0xd5, 0                movwf       T0CON                   ; setup timer 0 for 16 bit mode with
                                                                                   ; 128 prescale, takes ~ 0.8s to timeout
000976   0012     return	0                     return                              ; used as a guard in sd routines
                                           
                                           sd_card_init
000978   0e10     movlw	0x10                   movlw       0x10
00097a   6f88     movwf	0x88, 0x1              movwf       count
                                           sd_card_init_loop
00097c   ecf0     call	0xbe0, 0                call        read_spi
00097e   f005
000980   2f88     decfsz	0x88, 0x1, 0x1        decfsz      count, f
000982   d7fc     bra	0x97c                    bra         sd_card_init_loop
                                           
                                           ;     movlw       low debugmsg1
                                           ;     movwf       TBLPTRL
                                           ;     movlw       high debugmsg1
                                           ;     movwf       TBLPTRH
                                           ;     clrf        TBLPTRU
                                           ;     call        msg
                                           
                                           ; version 2 SD driver, supports HCSD
                                           ; send CMD0 with correct checksum
                                           
000984   928b     bcf	0x8b, 0x1, 0             bcf         LATC, P_SD_CS
                                               
000986   0e40     movlw	0x40                   movlw       0x40                    ; cmd0
000988   6f8b     movwf	0x8b, 0x1              movwf       sd_command
00098a   6b8c     clrf	0x8c, 0x1               clrf        sd_data
00098c   6b8d     clrf	0x8d, 0x1               clrf        sd_data+1
00098e   6b8e     clrf	0x8e, 0x1               clrf        sd_data+2
000990   6b8f     clrf	0x8f, 0x1               clrf        sd_data+3
                                           
000992   ecb2     call	0xb64, 0                call        write_sd
000994   f005
                                           
                                           ;     movlw       0x40
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x95
                                           ;     call        write_spi
                                               
000996   ec69     call	0xad2, 0                call        start_timeout           ; start the timer
000998   f005
                                           nloop
00099a   b4f2     btfsc	0xf2, 0x2, 0           btfsc       INTCON, TMR0IF
00099c   ef0a     goto	0xa14                   goto        sd_timeout
00099e   f005
0009a0   ecf0     call	0xbe0, 0                call        read_spi                 ; get a non 0xff byte
0009a2   f005
                                               
0009a4   9ed5     bcf	0xd5, 0x7, 0             bcf         T0CON, TMR0ON           ; stop the timer
                                           
                                           ;     movwf       temp2
                                           ;     movlw       low debugmsg2
                                           ;     movwf       TBLPTRL
                                           ;     movlw       high debugmsg2
                                           ;     movwf       TBLPTRH
                                           ;     clrf        TBLPTRU
                                           ;     call        msg
                                           ;     movf        temp2, w
                                           ;     call        debug
                                           ;     movf        temp2, w
0009a6   0a01     xorlw	0x1                    xorlw       0x01
0009a8   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS, Z
                                               ;goto        error_exit              ; should be 0x01 - busy
0009aa   d7f7     bra	0x99a                    bra         nloop
                                           ;     movlw       0x55
                                           ;     call        debug
                                           
0009ac   0e48     movlw	0x48                   movlw       0x48
0009ae   6f8b     movwf	0x8b, 0x1              movwf       sd_command
0009b0   6b8f     clrf	0x8f, 0x1               clrf        sd_data+3
0009b2   6b8e     clrf	0x8e, 0x1               clrf        sd_data+2
0009b4   0e01     movlw	0x1                    movlw       0x01
0009b6   6f8d     movwf	0x8d, 0x1              movwf       sd_data+1
0009b8   0eaa     movlw	0xaa                   movlw       0xAA
0009ba   6f8c     movwf	0x8c, 0x1              movwf       sd_data
                                           
0009bc   ecb2     call	0xb64, 0                call        write_sd
0009be   f005
                                           
0009c0   ec69     call	0xad2, 0                call        start_timeout
0009c2   f005
0009c4   eca9     call	0xb52, 0                call        read_sd
0009c6   f005
0009c8   9ed5     bcf	0xd5, 0x7, 0             bcf         T0CON, TMR0ON
                                           
0009ca   918a     bcf	0x8a, 0, 0x1             bcf         sdflags, v2
0009cc   b4e8     btfsc	0xe8, 0x2, 0           btfsc       WREG, 2
0009ce   d00d     bra	0x9ea                    bra         not_hcsd                ; if bit 2 is set then it's a type 1
                                                                                   ; card hence doesn't support CMD8
                                           ;     movlw       0x66
                                           ;     call        debug
                                           
0009d0   ecf0     call	0xbe0, 0                call        read_spi
0009d2   f005
0009d4   ecf0     call	0xbe0, 0                call        read_spi
0009d6   f005
0009d8   ecf0     call	0xbe0, 0                call        read_spi
0009da   f005
0009dc   0a01     xorlw	0x1                    xorlw       0x01
0009de   e12a     bnz	0xa34                    bnz         error_exit
0009e0   ecf0     call	0xbe0, 0                call        read_spi
0009e2   f005
0009e4   0aaa     xorlw	0xaa                   xorlw       0xaa
0009e6   e126     bnz	0xa34                    bnz         error_exit
                                           
0009e8   818a     bsf	0x8a, 0, 0x1             bsf         sdflags, v2
                                           
                                           not_hcsd
0009ea   ec69     call	0xad2, 0                call        start_timeout
0009ec   f005
                                           sd_acmd41
                                               ; now poll until the card is ready
0009ee   0ee9     movlw	0xe9                   movlw       0xE9                    ; cmd41 | 0x80 to signify ACMD
0009f0   6f8b     movwf	0x8b, 0x1              movwf       sd_command
0009f2   0e00     movlw	0                      movlw       0x00
0009f4   b18a     btfsc	0x8a, 0, 0x1           btfsc       sdflags, v2
0009f6   0e40     movlw	0x40                   movlw       0x40
0009f8   6f8f     movwf	0x8f, 0x1              movwf       sd_data+3
0009fa   6b8e     clrf	0x8e, 0x1               clrf        sd_data+2
0009fc   6b8d     clrf	0x8d, 0x1               clrf        sd_data+1
0009fe   6b8c     clrf	0x8c, 0x1               clrf        sd_data
                                           
000a00   ecb2     call	0xb64, 0                call        write_sd
000a02   f005
                                           
000a04   eca9     call	0xb52, 0                call        read_sd
000a06   f005
                                           
                                           ;     movwf       temp2
                                           ;     movlw       low debugmsg3
                                           ;     movwf       TBLPTRL
                                           ;     movlw       high debugmsg3
                                           ;     movwf       TBLPTRH
                                           ;     clrf        TBLPTRU
                                           ;     call        msg
                                           ;     movf        temp2, w
                                           ;     call        debug
                                           ;     movf        temp2, w
                                               
                                           ;     clrf        count
                                           ;     clrf        count+1
                                           ; hold
                                           ;     decfsz      count, f
                                           ;     bra         hold
                                           ;     decfsz      count+1, f
                                           ;     bra         hold
                                           
000a08   0a01     xorlw	0x1                    xorlw       0x01
000a0a   e0f1     bz	0x9ee                     bz          sd_acmd41
                                           
                                           ;     movlw       low debugmsg4
                                           ;     movwf       TBLPTRL
                                           ;     movlw       high debugmsg4
                                           ;     movwf       TBLPTRH
                                           ;     clrf        TBLPTRU
                                           ;     call        msg
                                           
000a0c   858a     bsf	0x8a, 0x2, 0x1           bsf         sdflags, cardinit
000a0e   9ed5     bcf	0xd5, 0x7, 0             bcf         T0CON, TMR0ON
000a10   828b     bsf	0x8b, 0x1, 0             bsf         LATC, P_SD_CS
000a12   0012     return	0                     return                              ; all done
                                           
                                           ;     movlw       0x40
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x95
                                           ;     call        write_spi
                                           ; 
                                           ;     clrf        TMR0H
                                           ;     clrf        TMR0L
                                           ;     bsf         T0CON, TMR0ON           ; start timeout
                                           ;     bcf         INTCON, TMR0IF
                                           ; sd_card_init2
                                           ;     btfsc       INTCON, TMR0IF
                                           ;     goto        sd_timeout
                                           ;     call        read_spi
                                           ;     xorlw       0x01
                                           ;     bnz         sd_card_init2
                                           ;     ; stop timer
                                           ;     bcf         T0CON, TMR0ON
                                           ; 
                                           ; ; send CMD8 to see if it is HCSD
                                           ; 
                                           ; sd_card_cmd8
                                           ;     call        read_spi
                                           ;     movlw       0x48
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x01
                                           ;     call        write_spi
                                           ;     movlw       0xAA
                                           ;     call        write_spi
                                           ;     movlw       0x87
                                           ;     call        write_spi
                                           ; 
                                           ;     clrf        TMR0H
                                           ;     clrf        TMR0L
                                           ;     bsf         T0CON, TMR0ON           ; start timeout
                                           ;     bcf         INTCON, TMR0IF
                                           ; sd_card_check_cmd8
                                           ;     btfsc       INTCON, TMR0IF
                                           ;     goto        sd_timeout
                                           ;     call        read_spi
                                           ;     xorlw       0xff
                                           ;     bz          sd_card_check_cmd8
                                           ;     xorlw       0xff
                                           ; 
                                           ;     bcf         T0CON, TMR0ON           ; stop timer
                                           ; 
                                           ;     xorlw       0x01                    ; see if the first byte is 01
                                           ;     bnz         sdnc                    ; if not probably an old SD
                                           ;     call        read_spi                ; should be 00
                                           ;     call        read_spi                ; should be 00
                                           ;     call        read_spi                ; has to be 01
                                           ;     xorlw       0x01
                                           ;     bnz         error_exit
                                           ;     call        read_spi                ; has to be aa
                                           ;     xorlw       0xaa
                                           ;     bnz         error_exit
                                           ;     bsf         sdflags, v2             ; if it's a valid response this is a
                                           ;     bra         sd_card_enter_acmd41          ; mark2 card
                                           ; 
                                           ; sdnc
                                           ;     xorlw       0x04                    ; see if it responded "unknown command"
                                           ;     bnz         error_exit              ; if not something went wrong
                                           ; 
                                           ; 
                                           ; sd_card_enter_acmd41
                                           ;     clrf        TMR0H
                                           ;     clrf        TMR0L
                                           ;     bsf         T0CON, TMR0ON           ; start timeout
                                           ;     bcf         INTCON, TMR0IF
                                           ; sd_card_acmd41                          ; now initialise with acmd41
                                           ;     call        read_spi
                                           ;     movlw       0x77                    ; means send cmd55, then cmd41
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x01
                                           ;     call        write_spi
                                           ; 
                                           ; sd_card_ack_cmd55                       ; check cmd 55 was acknowledged
                                           ;     btfsc       INTCON, TMR0IF
                                           ;     goto        sd_timeout
                                           ;     call        read_spi
                                           ;     xorlw       0xff
                                           ;     bz          sd_card_ack_cmd55
                                           ;     xorlw       0xfe
                                           ;     bnz         error_exit              ; for mmc support ought to try cmd1 here
                                           ;                                         ; not really important in this day...
                                           ; 
                                           ;     call        read_spi
                                           ;     movlw       0x69                    ; cmd41
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     btfsc       sdflags, v2             ; signal that we are HC capable if the
                                           ;     movlw       0x40                    ; card is a version 2, otherwise no need
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x01
                                           ;     call        write_spi
                                           ; 
                                           ; sd_card_init6
                                           ;     btfsc       INTCON, TMR0IF
                                           ;     goto        sd_timeout
                                           ;     call        read_spi
                                           ;     xorlw       0xff                    ; if response was ff, try again it was
                                           ;     bz          sd_card_init6           ; just a bit slow
                                           ;     xorlw       0xfe                    ; 0xff ^ 0xfe = 0x01 > see if still idle
                                           ;     bz          sd_card_acmd41          ; if so, poll again
                                           ;     xorlw       0x01                    ; 0xff ^ 0xfe ^ 0x01 = 0x00
                                           ;     btfss       STATUS, Z               ; if zero card is ready
                                           ;     bra         error_exit              ; if it's none of these something went
                                           ;                                         ; wrong, exit
                                           ;     bcf         T0CON, TMR0ON           ; turn off timeout
                                           ;     bsf         LATC, P_SD_CS           ; release chip select
                                           ;     bsf         sdflags, cardinit
                                           ;     return
                                           
                                           sd_timeout
000a14   b78a     btfsc	0x8a, 0x3, 0x1         btfsc       sdflags, init_started   ; if this is in the init Z80 doesn't
000a16   d00b     bra	0xa2e                    bra         sd_timeout_nr           ; know about it, don't send a response
000a18   0aff     xorlw	0xff                   xorlw       0xff                    ; otherwise, correct for the last xor
000a1a   6f90     movwf	0x90, 0x1              movwf       temp2                   ; save the value
                                           
000a1c   6ad9     clrf	0xd9, 0                 clrf        FSR2L                   ; initialise the response buffer pointer
000a1e   0e03     movlw	0x3                    movlw       0x03
000a20   6eda     movwf	0xda, 0                movwf       FSR2H
000a22   0e54     movlw	0x54                   movlw       'T'                     ; set first character T for timeout
000a24   6ede     movwf	0xde, 0                movwf       POSTINC2
000a26   518b     movf	0x8b, 0, 0x1            movf        sd_command, w           ; add the last command sent to the SD
000a28   6ede     movwf	0xde, 0                movwf       POSTINC2
000a2a   5190     movf	0x90, 0, 0x1            movf        temp2, w                ; add the last response before timeout
000a2c   6ede     movwf	0xde, 0                movwf       POSTINC2
                                           
                                           sd_timeout_nr
000a2e   838a     bsf	0x8a, 0x1, 0x1           bsf         sdflags, carderr        ; set the error flag
000a30   828b     bsf	0x8b, 0x1, 0             bsf         LATC, P_SD_CS           ; and release the SD
000a32   0012     return	0                     return
                                           
                                           error_exit
000a34   b78a     btfsc	0x8a, 0x3, 0x1         btfsc       sdflags, init_started   ; don't send a report if in auto-init
000a36   d00a     bra	0xa4c                    bra         error_exit_nr
000a38   6f90     movwf	0x90, 0x1              movwf       temp2                   ; save the error code from the SD
                                           
000a3a   6ad9     clrf	0xd9, 0                 clrf        FSR2L
000a3c   0e03     movlw	0x3                    movlw       0x03
000a3e   6eda     movwf	0xda, 0                movwf       FSR2H
000a40   0e45     movlw	0x45                   movlw       'E'                     ; start with E for error
000a42   6ede     movwf	0xde, 0                movwf       POSTINC2
000a44   518b     movf	0x8b, 0, 0x1            movf        sd_command, w           ; add the last command sent to SD
000a46   6ede     movwf	0xde, 0                movwf       POSTINC2
000a48   5190     movf	0x90, 0, 0x1            movf        temp2, w                ; add the error response
000a4a   6ede     movwf	0xde, 0                movwf       POSTINC2
                                           
                                           error_exit_nr
000a4c   838a     bsf	0x8a, 0x1, 0x1           bsf         sdflags, carderr        ; cleared when card removed
000a4e   828b     bsf	0x8b, 0x1, 0             bsf         LATC, P_SD_CS
000a50   0012     return	0                     return
                                           
                                           sd_card_csd
000a52   928b     bcf	0x8b, 0x1, 0             bcf         LATC, P_SD_CS
                                           
000a54   0e49     movlw	0x49                   movlw       0x49
000a56   6f8b     movwf	0x8b, 0x1              movwf       sd_command
000a58   6b8f     clrf	0x8f, 0x1               clrf        sd_data+3
000a5a   6b8e     clrf	0x8e, 0x1               clrf        sd_data+2
000a5c   6b8d     clrf	0x8d, 0x1               clrf        sd_data+1
000a5e   6b8c     clrf	0x8c, 0x1               clrf        sd_data
                                           
000a60   ecb2     call	0xb64, 0                call        write_sd
000a62   f005
                                           
000a64   ec69     call	0xad2, 0                call        start_timeout
000a66   f005
000a68   eca9     call	0xb52, 0                call        read_sd
000a6a   f005
000a6c   9ed5     bcf	0xd5, 0x7, 0             bcf         T0CON, TMR0ON
                                           
000a6e   0a00     xorlw	0                      xorlw       0x00
000a70   e1e1     bnz	0xa34                    bnz         error_exit
                                           
000a72   ec69     call	0xad2, 0                call        start_timeout
000a74   f005
000a76   eca9     call	0xb52, 0                call        read_sd
000a78   f005
000a7a   9ed5     bcf	0xd5, 0x7, 0             bcf         T0CON, TMR0ON
                                           
000a7c   0afe     xorlw	0xfe                   xorlw       0xFE
000a7e   e1da     bnz	0xa34                    bnz         error_exit
                                           
000a80   0e10     movlw	0x10                   movlw       0x10
000a82   6f88     movwf	0x88, 0x1              movwf       count
                                           
                                           sd_card_csd_loop
000a84   ecf0     call	0xbe0, 0                call        read_spi
000a86   f005
000a88   6ede     movwf	0xde, 0                movwf       POSTINC2
000a8a   2f88     decfsz	0x88, 0x1, 0x1        decfsz      count,f
000a8c   d7fb     bra	0xa84                    bra         sd_card_csd_loop
                                           
000a8e   828b     bsf	0x8b, 0x1, 0             bsf         LATC, P_SD_CS
000a90   0012     return	0                     return
                                           
                                           ;     call        read_spi
                                           ;     movlw       0x49
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x01
                                           ;     call        write_spi
                                           ; 
                                           ; sd_card_csd_loop
                                           ;     call        read_spi
                                           ;     xorlw       0x00
                                           ;     btfss       STATUS, Z
                                           ;     bra         sd_card_csd_loop
                                           ; 
                                           ; sd_card_csd_loop2
                                           ;     call        read_spi
                                           ;     xorlw       0xfe
                                           ;     bnz         sd_card_csd_loop2
                                           ;     
                                           ;     movlw       0x10
                                           ;     movwf       count
                                           ; 
                                           ; sd_card_csd_loop3
                                           ;     call        read_spi
                                           ;     movwf       POSTINC2
                                           ;     decfsz      count,f
                                           ;     bra         sd_card_csd_loop3
                                           ; 
                                           ;     movlw       0x01
                                           ;     movwf       slave_count+1
                                           ;     movlw       0x10
                                           ;     movwf       slave_count
                                           ;     bsf         LATC, P_SD_CS
                                           ;     return
                                           
                                           sd_card_cid
000a92   928b     bcf	0x8b, 0x1, 0             bcf         LATC, P_SD_CS
                                           
000a94   0e4a     movlw	0x4a                   movlw       0x4A
000a96   6f8b     movwf	0x8b, 0x1              movwf       sd_command
                                           
000a98   6b8f     clrf	0x8f, 0x1               clrf        sd_data+3
000a9a   6b8e     clrf	0x8e, 0x1               clrf        sd_data+2
000a9c   6b8d     clrf	0x8d, 0x1               clrf        sd_data+1
000a9e   6b8c     clrf	0x8c, 0x1               clrf        sd_data
                                           
000aa0   ecb2     call	0xb64, 0                call        write_sd
000aa2   f005
                                           
000aa4   ec69     call	0xad2, 0                call        start_timeout
000aa6   f005
000aa8   eca9     call	0xb52, 0                call        read_sd
000aaa   f005
000aac   9ed5     bcf	0xd5, 0x7, 0             bcf         T0CON, TMR0ON
                                           
000aae   0a00     xorlw	0                      xorlw       0x00
000ab0   e1c1     bnz	0xa34                    bnz         error_exit
                                           
000ab2   ec69     call	0xad2, 0                call        start_timeout
000ab4   f005
000ab6   eca9     call	0xb52, 0                call        read_sd
000ab8   f005
000aba   9ed5     bcf	0xd5, 0x7, 0             bcf         T0CON, TMR0ON
                                           
000abc   0afe     xorlw	0xfe                   xorlw       0xFE
000abe   e1ba     bnz	0xa34                    bnz         error_exit
                                           
                                               
                                           ;     call        read_spi
                                           ;     movlw       0x4A
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x00
                                           ;     call        write_spi
                                           ;     movlw       0x01
                                           ;     call        write_spi
                                           ; 
                                           ; sd_card_cid_loop
                                           ;     call        read_spi
                                           ;     xorlw       0x00
                                           ;     bnz         sd_card_cid_loop
                                           ; 
                                           ; sd_card_cid_loop2
                                           ;     call        read_spi
                                           ;     xorlw       0xfe
                                           ;     bnz         sd_card_cid_loop2
                                           
000ac0   0e10     movlw	0x10                   movlw       0x10
000ac2   6f88     movwf	0x88, 0x1              movwf       count
                                           
                                           sd_card_cid_read_loop
000ac4   ecf0     call	0xbe0, 0                call        read_spi
000ac6   f005
000ac8   6ede     movwf	0xde, 0                movwf       POSTINC2
000aca   2f88     decfsz	0x88, 0x1, 0x1        decfsz      count, f
000acc   d7fb     bra	0xac4                    bra         sd_card_cid_read_loop
                                           
000ace   828b     bsf	0x8b, 0x1, 0             bsf         LATC, P_SD_CS
000ad0   0012     return	0                     return
                                           
                                           start_timeout
000ad2   6ad7     clrf	0xd7, 0                 clrf        TMR0H
000ad4   6ad6     clrf	0xd6, 0                 clrf        TMR0L
000ad6   8ed5     bsf	0xd5, 0x7, 0             bsf         T0CON, TMR0ON           ; start timeout
000ad8   94f2     bcf	0xf2, 0x2, 0             bcf         INTCON, TMR0IF
000ada   0012     return	0                     return
                                           
                                           sd_card_read_block
000adc   928b     bcf	0x8b, 0x1, 0             bcf         LATC, P_SD_CS
                                           
000ade   0e51     movlw	0x51                   movlw       0x51                    ; CMD17
000ae0   6f8b     movwf	0x8b, 0x1              movwf       sd_command
                                           
                                               ; assume address already set
                                           
000ae2   ecb2     call	0xb64, 0                call        write_sd
000ae4   f005
                                           
000ae6   ec69     call	0xad2, 0                call        start_timeout
000ae8   f005
000aea   eca9     call	0xb52, 0                call        read_sd
000aec   f005
000aee   9ed5     bcf	0xd5, 0x7, 0             bcf         T0CON, TMR0ON
                                           
000af0   0a00     xorlw	0                      xorlw       0x00
000af2   e1a0     bnz	0xa34                    bnz         error_exit
                                           
000af4   ec69     call	0xad2, 0                call        start_timeout
000af6   f005
                                           sd_card_read_block_wait
000af8   eca9     call	0xb52, 0                call        read_sd
000afa   f005
000afc   9ed5     bcf	0xd5, 0x7, 0             bcf         T0CON, TMR0ON
                                           
000afe   0afe     xorlw	0xfe                   xorlw       0xFE
000b00   e1fb     bnz	0xaf8                    bnz         sd_card_read_block_wait ; wait for a data token
                                           
000b02   0e01     movlw	0x1                    movlw       0x01                    ; set count to 514-1 bytes (512 data and
000b04   6f88     movwf	0x88, 0x1              movwf       count                   ; two checksum)
000b06   0e02     movlw	0x2                    movlw       0x02
000b08   6f89     movwf	0x89, 0x1              movwf       count+1
                                           
                                           sd_card_read_block_loop
000b0a   ecf0     call	0xbe0, 0                call        read_spi
000b0c   f005
000b0e   6ede     movwf	0xde, 0                movwf       POSTINC2
000b10   0788     decf	0x88, 0x1, 0x1          decf        count, f
000b12   b0d8     btfsc	0xd8, 0, 0             btfsc       STATUS, C               ; skips if count overflowed
000b14   d7fa     bra	0xb0a                    bra         sd_card_read_block_loop
000b16   0789     decf	0x89, 0x1, 0x1          decf        count+1, f
000b18   b0d8     btfsc	0xd8, 0, 0             btfsc       STATUS, C
000b1a   d7f7     bra	0xb0a                    bra         sd_card_read_block_loop
                                           
000b1c   828b     bsf	0x8b, 0x1, 0             bsf         LATC, P_SD_CS
000b1e   0012     return	0                     return
                                           
                                           ; push_z80
                                           ;     movwf       PORTD
                                           ;     bcf         LATB, P_RXF
                                           ; z80_push_loop
                                           ;     btfsc       TRISE, OBF
                                           ;     bra         z80_push_loop
                                           ; 
                                           ;     bsf         LATB, P_RXF
                                           ;     return
                                           
                                           ; debug
                                           ;     movwf       MAIN_TEMP
                                           ;     swapf       WREG, w
                                           ;     call        hex
                                           ;     movwf       DREG
                                           ;     movlw       0x05
                                           ;     movwf       LO_ADDR
                                           ;     clrf        HI_ADDR
                                           ;     call        ensure_master
                                           ;     call        io_write
                                           ;     movf        MAIN_TEMP, w
                                           ;     call        hex
                                           ;     movwf       DREG
                                           ;     call        io_write
                                           ;     call        revert_master
                                           ;     return
                                           ; 
                                           ; hex
                                           ;     clrf        PCLATH
                                           ;     andlw       0xf
                                           ;     rlncf       WREG, w
                                           ;     addlw       low hex_lut
                                           ;     btfsc       STATUS, C
                                           ;     incf        PCLATH, f
                                           ;     movwf       low_jump
                                           ;     movlw       high hex_lut
                                           ;     addwf       PCLATH, f
                                           ;     movf        low_jump, w
                                           ;     movwf       PCL
                                           ; 
                                           ; hex_lut
                                           ;     retlw       '0'
                                           ;     retlw       '1'
                                           ;     retlw       '2'
                                           ;     retlw       '3'
                                           ;     retlw       '4'
                                           ;     retlw       '5'
                                           ;     retlw       '6'
                                           ;     retlw       '7'
                                           ;     retlw       '8'
                                           ;     retlw       '9'
                                           ;     retlw       'A'
                                           ;     retlw       'B'
                                           ;     retlw       'C'
                                           ;     retlw       'D'
                                           ;     retlw       'E'
                                           ;     retlw       'F'
                                           ; 
                                           ; msg
                                           ;     movlw       0x05
                                           ;     movwf       LO_ADDR
                                           ;     clrf        HI_ADDR
                                           ;     tblrd*+
                                           ;     movff       TABLAT, DREG
                                           ;     movlw       0x00
                                           ;     xorwf       DREG, w
                                           ;     btfsc       STATUS, Z
                                           ;     return
                                           ;     call        ensure_master
                                           ;     call        io_write
                                           ;     call        revert_master
                                           ;     bra         msg
                                           ; 
                                           ; newline
                                           ;     movlw       0xA
                                           ;     movwf       DREG
                                           ;     movlw       0x05
                                           ;     movwf       LO_ADDR
                                           ;     clrf        HI_ADDR
                                           ;     call        ensure_master
                                           ;     call        io_write
                                           ;     call        revert_master
                                           ;     return
                                           
                                           ;===============================================================================
                                           ; sd_card_poll - called in the main loop, checks the card detect pin
                                           ;===============================================================================
                                           
                                           ;; If the card detect pin is low and the init flag is clear, calls init.  If
                                           ;; card detect pin is high (no card) clears all flags.
                                           sd_card_poll
000b20   b881     btfsc	0x81, 0x4, 0           btfsc       PORTB, P_SD_FIND
000b22   d014     bra	0xb4c                    bra         sd_card_removed
                                           
                                               ; sd attached, check it's init or err state
000b24   0e06     movlw	0x6                    movlw       0x6
000b26   158a     andwf	0x8a, 0, 0x1           andwf       sdflags, w
000b28   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS, Z
                                               ; not zero so already been started, return
000b2a   0012     return	0                     return
                                           
000b2c   b78a     btfsc	0x8a, 0x3, 0x1         btfsc       sdflags, init_started
000b2e   d004     bra	0xb38                    bra         sd_init_timeout
000b30   ec69     call	0xad2, 0                call        start_timeout
000b32   f005
000b34   878a     bsf	0x8a, 0x3, 0x1           bsf         sdflags, init_started
000b36   0012     return	0                     return
                                           
                                           sd_init_timeout
000b38   b4f2     btfsc	0xf2, 0x2, 0           btfsc       INTCON, TMR0IF
000b3a   d001     bra	0xb3e                    bra         sd_do_init
                                               ; debounce time not up
000b3c   0012     return	0                     return
                                           
                                           sd_do_init
                                               ; disable timer
000b3e   9ed5     bcf	0xd5, 0x7, 0             bcf         T0CON, TMR0ON
000b40   ecbc     call	0x978, 0                call        sd_card_init
000b42   f004
000b44   b58a     btfsc	0x8a, 0x2, 0x1         btfsc       sdflags, cardinit
000b46   9e8a     bcf	0x8a, 0x7, 0             bcf         LATB, P_SD_PRES         ; tell Z80 there's a started card here
                                           
                                               ; clear the init timer
000b48   978a     bcf	0x8a, 0x3, 0x1           bcf         sdflags, init_started
000b4a   0012     return	0                     return
                                           
                                           sd_card_removed
000b4c   6b8a     clrf	0x8a, 0x1               clrf        sdflags
000b4e   8e8a     bsf	0x8a, 0x7, 0             bsf         LATB, P_SD_PRES         ; signal sd removed
000b50   0012     return	0                     return
                                           
                                           ;-------------------------------------------------------------------------------
                                           ; read_sd - internal mid-level read from SD
                                           ;-------------------------------------------------------------------------------
                                           read_sd
000b52   b4f2     btfsc	0xf2, 0x2, 0           btfsc       INTCON, TMR0IF
000b54   ef0a     goto	0xa14                   goto        sd_timeout
000b56   f005
000b58   ecf0     call	0xbe0, 0                call        read_spi
000b5a   f005
000b5c   0aff     xorlw	0xff                   xorlw       0xff
000b5e   e0f9     bz	0xb52                     bz          read_sd
000b60   0aff     xorlw	0xff                   xorlw       0xff
000b62   0012     return	0                     return
                                           
                                           ;-------------------------------------------------------------------------------
                                           ; write_sd - internal mid-level write a command to SD
                                           ;-------------------------------------------------------------------------------
                                           write_sd
                                               ; test for an ACMD41
000b64   bf8b     btfsc	0x8b, 0x7, 0x1         btfsc       sd_command, 7
000b66   eccc     call	0xb98, 0                call        sd_cmd55
000b68   f005
                                           
000b6a   ecf0     call	0xbe0, 0                call        read_spi
000b6c   f005
000b6e   518b     movf	0x8b, 0, 0x1            movf        sd_command, w
000b70   0b7f     andlw	0x7f                   andlw       0x7F
000b72   ecf5     call	0xbea, 0                call        write_spi
000b74   f005
                                           
                                               ; now the 32 bit data
000b76   518f     movf	0x8f, 0, 0x1            movf        sd_data+3, w
000b78   ecf5     call	0xbea, 0                call        write_spi
000b7a   f005
000b7c   518e     movf	0x8e, 0, 0x1            movf        sd_data+2, w
000b7e   ecf5     call	0xbea, 0                call        write_spi
000b80   f005
000b82   518d     movf	0x8d, 0, 0x1            movf        sd_data+1, w
000b84   ecf5     call	0xbea, 0                call        write_spi
000b86   f005
000b88   518c     movf	0x8c, 0, 0x1            movf        sd_data, w
000b8a   ecf5     call	0xbea, 0                call        write_spi
000b8c   f005
                                           
                                               ; now the checksum, might need to be a real one
000b8e   ece7     call	0xbce, 0                call        sd_get_checksum
000b90   f005
000b92   ecf5     call	0xbea, 0                call        write_spi
000b94   f005
                                           
000b96   0012     return	0                     return
                                           
                                           ; send the special command 55 which preceeds ACMD codes
                                           sd_cmd55
000b98   ecf0     call	0xbe0, 0                call        read_spi
000b9a   f005
000b9c   0e77     movlw	0x77                   movlw       0x77
000b9e   ecf5     call	0xbea, 0                call        write_spi
000ba0   f005
000ba2   0e00     movlw	0                      movlw       0x00
000ba4   ecf5     call	0xbea, 0                call        write_spi
000ba6   f005
000ba8   0e00     movlw	0                      movlw       0x00
000baa   ecf5     call	0xbea, 0                call        write_spi
000bac   f005
000bae   0e00     movlw	0                      movlw       0x00
000bb0   ecf5     call	0xbea, 0                call        write_spi
000bb2   f005
000bb4   0e00     movlw	0                      movlw       0x00
000bb6   ecf5     call	0xbea, 0                call        write_spi
000bb8   f005
000bba   0e01     movlw	0x1                    movlw       0x01
000bbc   ecf5     call	0xbea, 0                call        write_spi
000bbe   f005
                                           
000bc0   eca9     call	0xb52, 0                call        read_sd
000bc2   f005
000bc4   0b7e     andlw	0x7e                   andlw       0x7e
000bc6   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS, Z
000bc8   ef1a     goto	0xa34                   goto        error_exit                      ; if it was not zero an error
000bca   f005
                                                                                           ; flag was set
000bcc   0012     return	0                     return
                                           
                                           sd_get_checksum
000bce   0e40     movlw	0x40                   movlw       0x40            ; cmd0
000bd0   198b     xorwf	0x8b, 0, 0x1           xorwf       sd_command, w
000bd2   b4d8     btfsc	0xd8, 0x2, 0           btfsc       STATUS, Z
000bd4   0c95     retlw	0x95                   retlw       0x95
000bd6   0e48     movlw	0x48                   movlw       0x48            ; cmd8
000bd8   198b     xorwf	0x8b, 0, 0x1           xorwf       sd_command, w
000bda   b4d8     btfsc	0xd8, 0x2, 0           btfsc       STATUS, Z
000bdc   0c87     retlw	0x87                   retlw       0x87
                                               ; neither of those, so don't care
000bde   0c01     retlw	0x1                    retlw       0x01
                                           
                                           ;-------------------------------------------------------------------------------
                                           ; read_spi - internal low-level read a byte from SPI
                                           ;-------------------------------------------------------------------------------
                                           
                                           read_spi
000be0   68c9     setf	0xc9, 0                 setf        SSPBUF
                                           read_spi_loop
000be2   a0c7     btfss	0xc7, 0, 0             btfss       SSPSTAT, BF
000be4   d7fe     bra	0xbe2                    bra         read_spi_loop
000be6   50c9     movf	0xc9, 0, 0              movf        SSPBUF, w
000be8   0012     return	0                     return
                                           
                                           ;-------------------------------------------------------------------------------
                                           ; write_spi - internal low-level write a byte to the SPI peripheral
                                           ;-------------------------------------------------------------------------------
                                           
                                           write_spi
000bea   6ec9     movwf	0xc9, 0                movwf       SSPBUF
                                           write_spi_loop
000bec   a0c7     btfss	0xc7, 0, 0             btfss       SSPSTAT, BF
000bee   d7fe     bra	0xbec                    bra         write_spi_loop
000bf0   50c9     movf	0xc9, 0, 0              movf        SSPBUF, w
000bf2   0012     return	0                     return
                                           
                                           
                                           ; debugmsg1
                                           ;     db          '\n', 'C'
                                           ;     db          'M', 'D'
                                           ;     db          '0', 0x00
                                           ; 
                                           ; debugmsg2
                                           ;     db          'G', 'o'
                                           ;     db          't', 0x00
                                           ; 
                                           ; debugmsg3
                                           ;     db          'A', 'C'
                                           ;     db          'M', 'D'
                                           ;     db          '4', '1'
                                           ;     db          ' ', 0x00
                                           ; 
                                           ; debugmsg4
                                           ;     db          '\n', '['
                                           ;     db          ' ', 'O'
                                           ;     db          'k', ' '
                                           ;     db          ']', '\n'
                                           ;     db          0x00, 0x00
                                           ; 
                                           ; em
                                           ;     db          'E', 'r'
                                           ;     db          'r', 'o'
                                           ;     db          'r', '!'
                                           ;     db          ' ', 0x00
                                           ; 
                                           ; tom
                                           ;     db          'T', '.'
                                           ;     db          'O', 0x00
                                           ; -- Export these --------------------------------------------------------------
                                           
                                               GLOBAL      sd_init
                                               ;GLOBAL      sd_card_init    ; shouldn't be global
                                               GLOBAL      sd_card_csd
                                               GLOBAL      sd_card_cid
                                               GLOBAL      sd_card_poll
                                               GLOBAL      sd_card_read_block
                                               
                                               GLOBAL      sd_data
                                           
                                           end
                                           ;==============================================================================
                                           ;    main.asm
                                           ;==============================================================================
                                           
                                           ;------------------------------------------------------------------------------
                                           ;
                                           ; Simple Debug Kernel for CPU supervisor on Z80 Project Mark 2
                                           ; File Version 2 - 17 Oct 09
                                           ; hairymnstr@gmail.com
                                           ;
                                           ; Copyright (C) 2009  Nathan Dumont
                                           ;
                                           ; This program is free software: you can redistribute it and/or modify
                                           ; it under the terms of the GNU General Public License as published by
                                           ; the Free Software Foundation, either version 3 of the License, or
                                           ; (at your option) any later version.
                                           ;
                                           ; This program is distributed in the hope that it will be useful,
                                           ; but WITHOUT ANY WARRANTY; without even the implied warranty of
                                           ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                           ; GNU General Public License for more details.
                                           ;
                                           ; You should have received a copy of the GNU General Public License
                                           ; along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                           ;
                                           ;
                                           ;------------------------------------------------------------------------------
                                           
                                           list p=18f4520
                                           #include <p18f4520.inc>
                                                   LIST
                                           
                                           ;==========================================================================
                                           ;  MPASM PIC18F4520 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2007 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           #include "portpins.inc"
                                           ;== PORT Definitions ==========================================================
                                           
                                           ;-- PORT A --------------------------------------------------------------------
                                           
                                           P_RESET         EQU     0
                                           P_BUSRQ         EQU     1
                                           P_MREQ          EQU     2
                                           P_IORQ          EQU     3
                                           P_WAIT          EQU     4
                                           P_HI_LAT        EQU     5
                                           
                                           ;-- PORT C --------------------------------------------------------------------
                                           
                                           P_BUSACK        EQU     0
                                           P_SD_CS         EQU     1
                                           P_CLK           EQU     2
                                           P_SD_CK         EQU     3
                                           P_SD_DI         EQU     4
                                           P_SD_DO         EQU     5
                                           P_TX            EQU     6
                                           P_RX            EQU     7
                                           
                                           ;-- PORT B ---------------------------------------------------------------------
                                           
                                           P_SD_FIND       EQU     4
                                           P_TXE           EQU     5
                                           P_RXF           EQU     6
                                           P_SD_PRES       EQU     7
                                           
                                           SLAVE_LATB_DEF EQU     b'11000000'
                                           SLAVE_TRISB_DEF EQU     b'00011111'
                                           
                                           ;-- PORT E --------------------------------------------------------------------
                                           
                                           P_RD            EQU     0
                                           P_WR            EQU     1
                                           P_CS            EQU     2
                                           
                                           errorlevel -302
                                           errorlevel -205
                                           
                                           CONFIG OSC = HSPLL
                                           CONFIG FCMEN = ON, IESO = OFF, PWRT = ON, BOREN = OFF, BORV = 0
                                           CONFIG WDT = OFF, WDTPS = 1, MCLRE = ON, LPT1OSC = OFF
                                           CONFIG PBADEN = OFF, CCP2MX = PORTC, STVREN = ON, LVP = OFF
                                           CONFIG XINST = OFF, DEBUG = OFF, CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                                           CONFIG CPB = OFF, CPD = OFF, WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                                           CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF, EBTR0 = OFF, EBTR1 = OFF
                                           CONFIG EBTR2 = OFF, EBTR3 = OFF, EBTRB = OFF
                                           
                                           ; -- Externals From serial.asm ------------------------------------------------
                                           
                                               EXTERN      serial_rx_int
                                               EXTERN      serial_init
                                               EXTERN      serial_command_dispatch
                                           
                                           ; -- Externals From host_bus.asm ----------------------------------------------
                                           
                                               EXTERN      get_reset
                                               EXTERN      get_dma
                                               EXTERN      get_slave
                                               EXTERN      ensure_master
                                               EXTERN      revert_master
                                               EXTERN      slave_int
                                               EXTERN      slave_command_dispatch
                                           
                                           ; -- Externals From boot.asm ---------------------------------------------------
                                           
                                               EXTERN      boot_init
                                               EXTERN      boot_load
                                           
                                           ; -- Externals From sd.asm -----------------------------------------------------
                                           
                                               EXTERN      sd_init
                                               EXTERN      sd_card_init
                                               EXTERN      sd_card_csd
                                               EXTERN      sd_card_cid
                                               EXTERN      sd_card_poll
                                           ;== Variables =================================================================
                                           
                                           UDATA
                                           
                                           MAIN_TEMP       RES     1
                                           
                                           org 0x00
000000   ef0b     goto	0x16                    goto init
000002   f000
                                           
                                           org 0x08
                                           interrupt
000008   ba9e     btfsc	0x9e, 0x5, 0           btfsc       PIR1,RCIF       ; test serial receive interrupt flag
00000a   ec5b     call	0xb6, 0                 call        serial_rx_int   ; set, so handle received data
00000c   f000
00000e   be9e     btfsc	0x9e, 0x7, 0           btfsc       PIR1, PSPIF
000010   eca7     call	0xd4e, 0                call        slave_int       ; parallel port write
000012   f006
000014   0011     retfie	0x1                   retfie      FAST            ; all interrupts serviced, return reinstating context
                                           
                                           init
000016   0e0f     movlw	0xf                    movlw       0x0F
000018   6ec1     movwf	0xc1, 0                movwf       ADCON1          ; no ADC functionality thanks.
00001a   ec3b     call	0xc76, 0                call        get_reset       ; put the Z80 into reset before we start doing stuff
00001c   f006
00001e   ec21     call	0x42, 0                 call        serial_init     ; initialise the serial port
000020   f000
000022   ec36     call	0x106c, 0               call        boot_init       ; set up CPU clock etc.
000024   f008
000026   ecaf     call	0x95e, 0                call        sd_init         ; set up pins for the SD card
000028   f004
                                           
                                           ;     bcf         TRISC,5         ; the extra LED on SD card port needs output
                                           ;     bcf         LATC,5
                                           
00002a   ec78     call	0x10f0, 0               call        boot_load
00002c   f008
                                               
                                           ;     bsf         LATC,5
                                           
                                               ; let the Z80 go!!
00002e   ec49     call	0xc92, 0                call        get_slave
000030   f006
                                           
                                           
                                               
                                           ;     call        sd_card_init
                                           
                                           ;     call        sd_card_csd
                                           
                                           ;     call        sd_card_cid
                                           
                                           main
                                               ; call serial_command_dispatch, checks for a whole command received and
                                               ; calls an appropriate handler function for the command
000032   ec90     call	0xb20, 0                call        sd_card_poll
000034   f005
000036   ec96     call	0x12c, 0                call        serial_command_dispatch
000038   f000
00003a   ecf2     call	0xde4, 0                call        slave_command_dispatch
00003c   f006
00003e   ef19     goto	0x32                    goto        main
000040   f000
                                           
                                           ; == Export these =============================================================
                                           
                                               GLOBAL      MAIN_TEMP
                                           end
                                           list p=18f4520
                                           include <p18f4520.inc>
                                                   LIST
                                           
                                           ;==========================================================================
                                           ;  MPASM PIC18F4520 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2007 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           include <portpins.inc>
                                           ;== PORT Definitions ==========================================================
                                           
                                           ;-- PORT A --------------------------------------------------------------------
                                           
                                           P_RESET         EQU     0
                                           P_BUSRQ         EQU     1
                                           P_MREQ          EQU     2
                                           P_IORQ          EQU     3
                                           P_WAIT          EQU     4
                                           P_HI_LAT        EQU     5
                                           
                                           ;-- PORT C --------------------------------------------------------------------
                                           
                                           P_BUSACK        EQU     0
                                           P_SD_CS         EQU     1
                                           P_CLK           EQU     2
                                           P_SD_CK         EQU     3
                                           P_SD_DI         EQU     4
                                           P_SD_DO         EQU     5
                                           P_TX            EQU     6
                                           P_RX            EQU     7
                                           
                                           ;-- PORT B ---------------------------------------------------------------------
                                           
                                           P_SD_FIND       EQU     4
                                           P_TXE           EQU     5
                                           P_RXF           EQU     6
                                           P_SD_PRES       EQU     7
                                           
                                           SLAVE_LATB_DEF EQU     b'11000000'
                                           SLAVE_TRISB_DEF EQU     b'00011111'
                                           
                                           ;-- PORT E --------------------------------------------------------------------
                                           
                                           P_RD            EQU     0
                                           P_WR            EQU     1
                                           P_CS            EQU     2
                                           
                                               UDATA
                                           
                                           eeprom_addr     RES     1
                                           eeprom_data     RES     1
                                           
                                               CODE
                                           
                                           eeprom_write
000bf4   5192     movf	0x92, 0, 0x1            movf        eeprom_addr, w
000bf6   6ea9     movwf	0xa9, 0                movwf       EEADR
000bf8   5193     movf	0x93, 0, 0x1            movf        eeprom_data, w
000bfa   6ea8     movwf	0xa8, 0                movwf       EEDATA
000bfc   9ea6     bcf	0xa6, 0x7, 0             bcf         EECON1, EEPGD
000bfe   9ca6     bcf	0xa6, 0x6, 0             bcf         EECON1, CFGS
000c00   84a6     bsf	0xa6, 0x2, 0             bsf         EECON1, WREN
                                           
000c02   9ef2     bcf	0xf2, 0x7, 0             bcf         INTCON, GIE
000c04   0e55     movlw	0x55                   movlw       0x55
000c06   6ea7     movwf	0xa7, 0                movwf       EECON2
000c08   0eaa     movlw	0xaa                   movlw       0xAA
000c0a   6ea7     movwf	0xa7, 0                movwf       EECON2
000c0c   82a6     bsf	0xa6, 0x1, 0             bsf         EECON1, WR
                                           
                                           eeprom_write_wait
000c0e   b2a6     btfsc	0xa6, 0x1, 0           btfsc       EECON1, WR
000c10   d7fe     bra	0xc0e                    bra         eeprom_write_wait
                                           
000c12   8ef2     bsf	0xf2, 0x7, 0             bsf         INTCON, GIE
                                           
000c14   94a6     bcf	0xa6, 0x2, 0             bcf         EECON1, WREN
                                           
000c16   0012     return	0                     return
                                           
                                           eeprom_read
000c18   5192     movf	0x92, 0, 0x1            movf        eeprom_addr, w
000c1a   6ea9     movwf	0xa9, 0                movwf       EEADR
000c1c   9ea6     bcf	0xa6, 0x7, 0             bcf         EECON1, EEPGD
000c1e   9ca6     bcf	0xa6, 0x6, 0             bcf         EECON1, CFGS
000c20   80a6     bsf	0xa6, 0, 0               bsf         EECON1, RD
000c22   50a8     movf	0xa8, 0, 0              movf        EEDATA, w
000c24   6f93     movwf	0x93, 0x1              movwf       eeprom_data
                                           
000c26   0012     return	0                     return
                                           
                                           ;== Export all labels ==========================================================
                                           
                                               GLOBAL      eeprom_write
                                               GLOBAL      eeprom_read
                                           
                                               GLOBAL      eeprom_addr
                                               GLOBAL      eeprom_data
                                           
                                           end
                                           ;==============================================================================
                                           ;    host_bus.asm
                                           ;==============================================================================
                                           list p=18f4520
                                           include <p18f4520.inc>
                                                   LIST
                                           
                                           ;==========================================================================
                                           ;  MPASM PIC18F4520 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2007 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           include <portpins.inc>
                                           ;== PORT Definitions ==========================================================
                                           
                                           ;-- PORT A --------------------------------------------------------------------
                                           
                                           P_RESET         EQU     0
                                           P_BUSRQ         EQU     1
                                           P_MREQ          EQU     2
                                           P_IORQ          EQU     3
                                           P_WAIT          EQU     4
                                           P_HI_LAT        EQU     5
                                           
                                           ;-- PORT C --------------------------------------------------------------------
                                           
                                           P_BUSACK        EQU     0
                                           P_SD_CS         EQU     1
                                           P_CLK           EQU     2
                                           P_SD_CK         EQU     3
                                           P_SD_DI         EQU     4
                                           P_SD_DO         EQU     5
                                           P_TX            EQU     6
                                           P_RX            EQU     7
                                           
                                           ;-- PORT B ---------------------------------------------------------------------
                                           
                                           P_SD_FIND       EQU     4
                                           P_TXE           EQU     5
                                           P_RXF           EQU     6
                                           P_SD_PRES       EQU     7
                                           
                                           SLAVE_LATB_DEF EQU     b'11000000'
                                           SLAVE_TRISB_DEF EQU     b'00011111'
                                           
                                           ;-- PORT E --------------------------------------------------------------------
                                           
                                           P_RD            EQU     0
                                           P_WR            EQU     1
                                           P_CS            EQU     2
                                           
                                           ; -- Externals From eeprom.asm -------------------------------------------------
                                           
                                               EXTERN      eeprom_read
                                               EXTERN      eeprom_write
                                           
                                               EXTERN      eeprom_data
                                               EXTERN      eeprom_addr
                                           
                                           ; -- Externals From sd.asm -----------------------------------------------------
                                           
                                               EXTERN      sd_card_cid
                                               EXTERN      sd_card_csd
                                               EXTERN      sd_card_read_block
                                           
                                               EXTERN      sd_data
                                           
                                               UDATA
                                           carderr           equ   1
                                           
                                           LO_ADDR RES     1
                                           HI_ADDR RES     1
                                           DREG    RES     1
                                           
                                           MODE            RES     1
                                           TEMP_MODE       RES     1
                                           
                                           low_jump        res     1
                                           
                                           slave_latb_temp         res     1
                                           slave_trisb_temp        res     1
                                           
                                           slave_count             res     2
                                           slaveflags              res     1
                                           
                                           busy                    equ     0
                                           rxbytes                 equ     1
                                           txbytes                 equ     2
                                           
                                               CODE
                                           
                                           ;== Z80 Bus interfacing functions =============================================
                                           
                                           ;******************************************************************************
                                           ;*                                                                            *
                                           ;* ensure_master - if in slave mode acquire DMA control and return.           *
                                           ;*                 otherwise return immediately.  Note current state.         *
                                           ;*                                                                            *
                                           ;* Inputs:  NONE                                                              *
                                           ;* Outputs: NONE                                                              *
                                           ;* Called:  set_master                                                        *
                                           ;* Changes: TEMP_MODE                                                         *
                                           ;*                                                                            *
                                           ;******************************************************************************
                                           
                                           ensure_master
                                               ; check_mode
000c28   5197     movf	0x97, 0, 0x1            movf        MODE,w
000c2a   6f98     movwf	0x98, 0x1              movwf       TEMP_MODE       ; save the mode at the entry to this function
000c2c   0a00     xorlw	0                      xorlw       0x00     
000c2e   e001     bz	0xc32                     bz          ensure_master_not_master
000c30   0012     return	0                     return                      ; already master so just return
                                           ensure_master_not_master
                                               ; not master need to get DMA mode
000c32   ec2f     call	0xc5e, 0                call        get_dma
000c34   f006
000c36   0012     return	0                     return
                                           
                                           ;******************************************************************************
                                           ;*                                                                            *
                                           ;* revert_master - set master mode back to the mode in TEMP_MODE              *
                                           ;*                                                                            *
                                           ;******************************************************************************
                                           
                                           revert_master
000c38   5197     movf	0x97, 0, 0x1            movf        MODE,w
000c3a   1998     xorwf	0x98, 0, 0x1           xorwf       TEMP_MODE,w
000c3c   e101     bnz	0xc40                    bnz         revert_master_needs_change
000c3e   0012     return	0                     return              ; MODE and TEMP_MODE matched don't change
                                           revert_master_needs_change
000c40   b198     btfsc	0x98, 0, 0x1           btfsc       TEMP_MODE,0     ; test reset mode bit
000c42   ef29     goto	0xc52                   goto        revert_master_reset
000c44   f006
000c46   b398     btfsc	0x98, 0x1, 0x1         btfsc       TEMP_MODE,1     ; test DMA master mode bit
000c48   ef2c     goto	0xc58                   goto        revert_master_dma
000c4a   f006
                                               ; if neither of those need to switch back to slave
000c4c   ec49     call	0xc92, 0                call        get_slave
000c4e   f006
000c50   0012     return	0                     return
                                           
                                           revert_master_reset
000c52   ec3b     call	0xc76, 0                call        get_reset       ; assert the reset line
000c54   f006
000c56   0012     return	0                     return
                                           
                                           revert_master_dma
000c58   ec2f     call	0xc5e, 0                call        get_dma         ; get DMA control
000c5a   f006
000c5c   0012     return	0                     return
                                           
                                           
                                           get_dma
                                               ; save state of slave registers
000c5e   cf8a     movff	0xf8a, 0x9a            movff       LATB, slave_latb_temp
000c60   f09a
000c62   cf93     movff	0xf93, 0x9b            movff       TRISB, slave_trisb_temp
000c64   f09b
000c66   9289     bcf	0x89, 0x1, 0             bcf         LATA,1          ; assert the BUSRQ signal low
                                           get_dma_loop
000c68   b082     btfsc	0x82, 0, 0             btfsc       PORTC,0         ; wait for BUSACK to go low
000c6a   d7fe     bra	0xc68                    bra         get_dma_loop
000c6c   0e02     movlw	0x2                    movlw       0x02
000c6e   6f97     movwf	0x97, 0x1              movwf       MODE            ; set mode to DMA master
000c70   ec4d     call	0xc9a, 0                call        set_master
000c72   f006
000c74   0012     return	0                     return
                                           
                                           get_reset
000c76   9089     bcf	0x89, 0, 0               bcf         LATA,0          ; pull reset low
                                           
                                               ; while waiting for the Z80 M cycle to end, reset the slave device settings
000c78   0ec0     movlw	0xc0                   movlw       SLAVE_LATB_DEF
000c7a   6f9a     movwf	0x9a, 0x1              movwf       slave_latb_temp
000c7c   0e1f     movlw	0x1f                   movlw       SLAVE_TRISB_DEF
000c7e   6f9b     movwf	0x9b, 0x1              movwf       slave_trisb_temp
000c80   6b9c     clrf	0x9c, 0x1               clrf        slave_count
000c82   6b9d     clrf	0x9d, 0x1               clrf        slave_count+1
000c84   6b9e     clrf	0x9e, 0x1               clrf        slaveflags
000c86   0000     nop                          nop                         ; leave time for the M cycle to finish
000c88   0e01     movlw	0x1                    movlw       0x01
000c8a   6f97     movwf	0x97, 0x1              movwf       MODE
000c8c   ec4d     call	0xc9a, 0                call        set_master
000c8e   f006
000c90   0012     return	0                     return
                                           
                                           get_slave
000c92   6b97     clrf	0x97, 0x1               clrf        MODE            ; set mode to slave
000c94   ec58     call	0xcb0, 0                call        set_slave       ; set IO into slave mode
000c96   f006
000c98   0012     return	0                     return
                                           ;******************************************************************************
                                           ;*                                                                            *
                                           ;* set_master - configure pins so PIC is master device                        *
                                           ;*                                                                            *
                                           ;* Inputs:  NONE                                                              *
                                           ;* Outputs: NONE                                                              *
                                           ;* Called:                                                                    *
                                           ;* Changes: TRISB, TRISE, TRISA                                               *
                                           ;*                                                                            *
                                           ;******************************************************************************
                                           
                                           set_master
                                               ; set the address pins to output
                                               ; disable PSP interrupts
000c9a   9e9d     bcf	0x9d, 0x7, 0             bcf         PIE1, PSPIE
000c9c   6a93     clrf	0x93, 0                 clrf        TRISB
000c9e   0eec     movlw	0xec                   movlw       b'11101100'     ;RD and WR as output, disable PSP
000ca0   1696     andwf	0x96, 0x1, 0           andwf       TRISE,f
000ca2   0eff     movlw	0xff                   movlw       0xFF
000ca4   6e8d     movwf	0x8d, 0                movwf       LATE            ;set RD and WR High
                                           
000ca6   0ed0     movlw	0xd0                   movlw       b'11010000'
000ca8   1692     andwf	0x92, 0x1, 0           andwf       TRISA,f
000caa   0e3c     movlw	0x3c                   movlw       b'00111100'
000cac   1289     iorwf	0x89, 0x1, 0           iorwf       LATA,f
000cae   0012     return	0                     return
                                           
                                           set_slave
000cb0   c09a     movff	0x9a, 0xf8a            movff       slave_latb_temp, LATB
000cb2   ff8a
000cb4   c09b     movff	0x9b, 0xf93            movff       slave_trisb_temp, TRISB
000cb6   ff93
                                           ;     setf        TRISB
000cb8   0e17     movlw	0x17                   movlw       b'00010111'     ; PSP mode
000cba   1296     iorwf	0x96, 0x1, 0           iorwf       TRISE, f
000cbc   6889     setf	0x89, 0                 setf        LATA            ; all pins in A are high or don't care
000cbe   0ecc     movlw	0xcc                   movlw       b'11001100'     ; MREQ, IORQ input
000cc0   6e92     movwf	0x92, 0                movwf       TRISA
                                           
                                               ; now enable PSP interrupt
000cc2   9e9e     bcf	0x9e, 0x7, 0             bcf         PIR1, PSPIF
000cc4   8e9d     bsf	0x9d, 0x7, 0             bsf         PIE1, PSPIE
000cc6   0012     return	0                     return
                                           
                                           ;******************************************************************************
                                           ;*                                                                            *
                                           ;* io_read - Read an address on the IO bus                                    *
                                           ;*                                                                            *
                                           ;* Inputs:  HI_ADDR, LO_ADDR                                                  *
                                           ;* Outputs: DREG                                                              *
                                           ;* Called:                                                                    *
                                           ;* Changes:                                                                   *
                                           ;*                                                                            *
                                           ;* Asssumes the PIC is in master mode (WAIT in, RD,WR,IORQ,MREQ and ADDR out  *
                                           ;*                                                                            *
                                           ;******************************************************************************
                                           
                                           io_read
                                               ; set address
000cc8   5195     movf	0x95, 0, 0x1            movf    HI_ADDR,w
000cca   6e8a     movwf	0x8a, 0                movwf   LATB
000ccc   9a89     bcf	0x89, 0x5, 0             bcf     LATA,P_HI_LAT
000cce   5194     movf	0x94, 0, 0x1            movf    LO_ADDR,w
000cd0   8a89     bsf	0x89, 0x5, 0             bsf     LATA,P_HI_LAT
000cd2   6e8a     movwf	0x8a, 0                movwf   LATB
                                               ; 200ns delay before IORQ and RD
000cd4   0000     nop                          nop
000cd6   9689     bcf	0x89, 0x3, 0             bcf     LATA,P_IORQ
000cd8   908d     bcf	0x8d, 0, 0               bcf     LATE,P_RD
000cda   0000     nop                          nop
                                               ; mandatory wait state
                                           io_read_wait_loop
000cdc   a880     btfss	0x80, 0x4, 0           btfss   PORTA,P_WAIT
000cde   d7fe     bra	0xcdc                    bra     io_read_wait_loop
                                               ; store the read data
000ce0   5083     movf	0x83, 0, 0              movf    PORTD,w
                                               ;release IORQ and RD
000ce2   808d     bsf	0x8d, 0, 0               bsf     LATE,P_RD
000ce4   8689     bsf	0x89, 0x3, 0             bsf     LATA,P_IORQ
000ce6   6f96     movwf	0x96, 0x1              movwf   DREG
000ce8   0012     return	0                     return
                                           
                                           ;******************************************************************************
                                           ;*                                                                            *
                                           ;* io_write - Write an address on the IO bus                                  *
                                           ;*                                                                            *
                                           ;* Inputs:  HI_ADDR, LO_ADDR, DREG                                            *
                                           ;* Outputs: NONE                                                              *
                                           ;* Called:                                                                    *
                                           ;* Changes:                                                                   *
                                           ;*                                                                            *
                                           ;* Asssumes the PIC is in master mode (WAIT in, RD,WR,IORQ,MREQ and ADDR out  *
                                           ;*                                                                            *
                                           ;******************************************************************************
                                           
                                           io_write
                                               ; set address
000cea   5195     movf	0x95, 0, 0x1            movf        HI_ADDR,w
000cec   6e8a     movwf	0x8a, 0                movwf       LATB
000cee   9a89     bcf	0x89, 0x5, 0             bcf         LATA,P_HI_LAT
000cf0   5194     movf	0x94, 0, 0x1            movf        LO_ADDR,w
000cf2   8a89     bsf	0x89, 0x5, 0             bsf         LATA,P_HI_LAT
000cf4   6e8a     movwf	0x8a, 0                movwf       LATB
                                               ; 200ns delay before IORQ and RD
000cf6   5196     movf	0x96, 0, 0x1            movf        DREG,w          ; write the data to the bus
000cf8   6e8c     movwf	0x8c, 0                movwf       LATD
000cfa   6a95     clrf	0x95, 0                 clrf        TRISD           ; don't forget to drive the bus for a write!!
000cfc   9689     bcf	0x89, 0x3, 0             bcf         LATA,P_IORQ
000cfe   928d     bcf	0x8d, 0x1, 0             bcf         LATE,P_WR
000d00   0000     nop                          nop
                                               ; mandatory wait state
                                           io_write_wait_loop
000d02   a880     btfss	0x80, 0x4, 0           btfss       PORTA,P_WAIT
000d04   d7fe     bra	0xd02                    bra         io_write_wait_loop
                                               ;release IORQ and RD
000d06   828d     bsf	0x8d, 0x1, 0             bsf         LATE,P_WR
000d08   8689     bsf	0x89, 0x3, 0             bsf         LATA,P_IORQ
000d0a   6895     setf	0x95, 0                 setf        TRISD           ; stop driving the bus again
000d0c   0012     return	0                     return
                                           
                                           ;******************************************************************************
                                           ;*                                                                            *
                                           ;* mem_read - Read from an address on the memory bus                          *
                                           ;*                                                                            *
                                           ;* Inputs:  HI_ADDR, LO_ADDR                                                  *
                                           ;* Outputs: DREG                                                              *
                                           ;* Called:                                                                    *
                                           ;* Changes:                                                                   *
                                           ;*                                                                            *
                                           ;* Asssumes the PIC is in master mode (WAIT in, RD,WR,IORQ,MREQ and ADDR out) *
                                           ;*                                                                            *
                                           ;******************************************************************************
                                           
                                           mem_read
                                               ; set address
000d0e   5195     movf	0x95, 0, 0x1            movf    HI_ADDR,w
000d10   6e8a     movwf	0x8a, 0                movwf   LATB
000d12   9a89     bcf	0x89, 0x5, 0             bcf     LATA,P_HI_LAT
000d14   5194     movf	0x94, 0, 0x1            movf    LO_ADDR,w
000d16   8a89     bsf	0x89, 0x5, 0             bsf     LATA,P_HI_LAT
000d18   6e8a     movwf	0x8a, 0                movwf   LATB
000d1a   9489     bcf	0x89, 0x2, 0             bcf     LATA,P_MREQ
000d1c   908d     bcf	0x8d, 0, 0               bcf     LATE,P_RD
                                           mem_read_wait_loop
000d1e   a880     btfss	0x80, 0x4, 0           btfss   PORTA,P_WAIT
000d20   d7fe     bra	0xd1e                    bra     mem_read_wait_loop
                                               ; store the read data
000d22   5083     movf	0x83, 0, 0              movf    PORTD,w
                                               ;release IORQ and RD
000d24   808d     bsf	0x8d, 0, 0               bsf     LATE,P_RD
000d26   8489     bsf	0x89, 0x2, 0             bsf     LATA,P_MREQ
000d28   6f96     movwf	0x96, 0x1              movwf   DREG
000d2a   0012     return	0                     return
                                           
                                           ;******************************************************************************
                                           ;*                                                                            *
                                           ;* mem_write - Write to an address on the memory bus                          *
                                           ;*                                                                            *
                                           ;* Inputs:  HI_ADDR, LO_ADDR, DREG                                            *
                                           ;* Outputs: NONE                                                              *
                                           ;* Called:                                                                    *
                                           ;* Changes:                                                                   *
                                           ;*                                                                            *
                                           ;* Asssumes the PIC is in master mode (WAIT in, RD,WR,IORQ,MREQ and ADDR out) *
                                           ;*                                                                            *
                                           ;******************************************************************************
                                           
                                           mem_write
                                               ; set address
000d2c   5195     movf	0x95, 0, 0x1            movf        HI_ADDR,w
000d2e   6e8a     movwf	0x8a, 0                movwf       LATB
000d30   9a89     bcf	0x89, 0x5, 0             bcf         LATA,P_HI_LAT
000d32   5194     movf	0x94, 0, 0x1            movf        LO_ADDR,w
000d34   8a89     bsf	0x89, 0x5, 0             bsf         LATA,P_HI_LAT
000d36   6e8a     movwf	0x8a, 0                movwf       LATB
                                               ; 200ns delay before IORQ and RD
000d38   5196     movf	0x96, 0, 0x1            movf        DREG,w          ; write the data to the bus
000d3a   6e8c     movwf	0x8c, 0                movwf       LATD
000d3c   6a95     clrf	0x95, 0                 clrf        TRISD           ; don't forget to drive the bus for a write!!
000d3e   9489     bcf	0x89, 0x2, 0             bcf         LATA,P_MREQ
000d40   928d     bcf	0x8d, 0x1, 0             bcf         LATE,P_WR
                                               ; mandatory wait state
                                           mem_write_wait_loop
000d42   a880     btfss	0x80, 0x4, 0           btfss       PORTA,P_WAIT
000d44   d7fe     bra	0xd42                    bra         mem_write_wait_loop
                                               ;release IORQ and RD
000d46   828d     bsf	0x8d, 0x1, 0             bsf         LATE,P_WR
000d48   8489     bsf	0x89, 0x2, 0             bsf         LATA,P_MREQ
000d4a   6895     setf	0x95, 0                 setf        TRISD           ; stop driving the bus again
000d4c   0012     return	0                     return
                                           
                                           ; == Slave mode code ===========================================================
                                           
                                           ;===============================================================================
                                           ; slave_int - interrupt generated by the PSP
                                           ;===============================================================================
                                           
                                           ;; This splits into two blocks of code, read and write.
                                           ;;
                                           ;; Write: if the Z80 wrote a byte, see if we are expecting bytes (TXE low), if
                                           ;; so then check if it's the first byte, in this case we need to update the byte
                                           ;; counters for this command based on the command length.  Otherwise, store the
                                           ;; byte and check if it was the last.  If it was set the busy flag, and let the
                                           ;; main-loop command dispatcher prepare a response.
                                           ;;
                                           ;; Read: if the Z80 read a byte, look at the state of the response count.  If
                                           ;; there are any bytes left put the next one in the output latch and set RXF to
                                           ;; signal more data, otherwise return to "waiting for command" mode.
                                           
                                           slave_int
                                               ; what mode are we in?
000d4e   b19e     btfsc	0x9e, 0, 0x1           btfsc       slaveflags, busy
000d50   d047     bra	0xde0                    bra         slave_ignore_event      ; don't do anything if busy
000d52   b59e     btfsc	0x9e, 0x2, 0x1         btfsc       slaveflags, txbytes
000d54   d004     bra	0xd5e                    bra         slave_tx
000d56   b39e     btfsc	0x9e, 0x1, 0x1         btfsc       slaveflags, rxbytes
000d58   d019     bra	0xd8c                    bra         slave_rx
                                               ; if it's none of them, must be idle
000d5a   be96     btfsc	0x96, 0x7, 0           btfsc       TRISE, IBF
000d5c   d017     bra	0xd8c                    bra         slave_rx
                                           
                                               ; the Z80 read a byte from the PSP, need to reload it if there's data
                                           slave_tx
                                               ; check if this was a read event
000d5e   be96     btfsc	0x96, 0x7, 0           btfsc       TRISE, IBF
000d60   eff0     goto	0xde0                   goto        slave_ignore_event      ; if it was a write ignore it
000d62   f006
000d64   8c8a     bsf	0x8a, 0x6, 0             bsf         LATB, P_RXF             ; nothing to read for a min!!
000d66   859e     bsf	0x9e, 0x2, 0x1           bsf         slaveflags, txbytes     ; set the txmode flag
000d68   eced     call	0xfda, 0                call        slave_check_byte0
000d6a   f007
000d6c   0a00     xorlw	0                      xorlw       0x00
000d6e   b4d8     btfsc	0xd8, 0x2, 0           btfsc       STATUS, Z
000d70   efc1     goto	0xd82                   goto        slave_go_idle           ; go into idle mode
000d72   f006
                                               ; not the last byte just read, so put another in output
000d74   50de     movf	0xde, 0, 0              movf        POSTINC2, w             ; get a byte from the fifo
000d76   6e83     movwf	0x83, 0                movwf       PORTD                   ; put it in the output buffer
000d78   4f9c     dcfsnz	0x9c, 0x1, 0x1        dcfsnz      slave_count, f          ; decrement the remaining byte count
000d7a   079d     decf	0x9d, 0x1, 0x1          decf        slave_count+1, f        ; decrement high byte if low is zero
000d7c   9c8a     bcf	0x8a, 0x6, 0             bcf         LATB, P_RXF             ; set the flag to say there's more data
000d7e   9e9e     bcf	0x9e, 0x7, 0             bcf         PIR1, PSPIF             ; clear the interrupt flag
000d80   0012     return	0                     return
                                           
                                           slave_go_idle
000d82   959e     bcf	0x9e, 0x2, 0x1           bcf         slaveflags, txbytes
000d84   939e     bcf	0x9e, 0x1, 0x1           bcf         slaveflags, rxbytes
                                               ; busy can only be cleared in the main loop
000d86   9e9e     bcf	0x9e, 0x7, 0             bcf         PIR1, PSPIF
000d88   9a8a     bcf	0x8a, 0x5, 0             bcf         LATB, P_TXE     ; let the Z80 talk again
000d8a   0012     return	0                     return
                                           
                                           slave_rx
                                               ; see if this was actually a write
000d8c   ae96     btfss	0x96, 0x7, 0           btfss       TRISE, IBF
000d8e   d028     bra	0xde0                    bra         slave_ignore_event      ; if it was a read ignore it
                                               ; set the TXE bit until we're finished processing
000d90   8a8a     bsf	0x8a, 0x5, 0             bsf         LATB, P_TXE
000d92   b39e     btfsc	0x9e, 0x1, 0x1         btfsc       slaveflags, rxbytes     ; see if we're already in rx mode
000d94   d016     bra	0xdc2                    bra         slave_rx_data
                                           
                                               ; if not do setup work
                                               ; setup the rx register
000d96   0e03     movlw	0x3                    movlw       0x03
000d98   6eda     movwf	0xda, 0                movwf       FSR2H
000d9a   6ad9     clrf	0xd9, 0                 clrf        FSR2L
000d9c   5083     movf	0x83, 0, 0              movf        PORTD, w
000d9e   6ede     movwf	0xde, 0                movwf       POSTINC2
                                           
                                               ; this is the first byte so setup the counter etc.
000da0   6af7     clrf	0xf7, 0                 clrf        TBLPTRH
000da2   44e8     rlncf	0xe8, 0, 0             rlncf       WREG, w                 ; 16 bit lookup, multiply 2
000da4   0fec     addlw	0xec                   addlw       low slave_command_lengths
                                           ;     addwf       PORTD, w
000da6   b0d8     btfsc	0xd8, 0, 0             btfsc       STATUS, C
000da8   2af7     incf	0xf7, 0x1, 0            incf        TBLPTRH, f
000daa   6ef6     movwf	0xf6, 0                movwf       TBLPTRL
000dac   0e0f     movlw	0xf                    movlw       high slave_command_lengths
000dae   26f7     addwf	0xf7, 0x1, 0           addwf       TBLPTRH, f
000db0   6af8     clrf	0xf8, 0                 clrf        TBLPTRU
000db2   0009     tblrd	*+                     tblrd*+
000db4   cff5     movff	0xff5, 0x9c            movff       TABLAT, slave_count     ; low byte first
000db6   f09c
000db8   0008     tblrd	*                      tblrd*
000dba   cff5     movff	0xff5, 0x9d            movff       TABLAT, slave_count+1   ; then high byte
000dbc   f09d
                                           
                                               ; set the rxmode flag
000dbe   839e     bsf	0x9e, 0x1, 0x1           bsf         slaveflags, rxbytes
                                           
                                               ; byte is already in buffer, so skip saving again
000dc0   d002     bra	0xdc6                    bra         slave_rx_data_done
                                           
                                           slave_rx_data
                                               ; save the actual byte received
000dc2   5083     movf	0x83, 0, 0              movf        PORTD, w
000dc4   6ede     movwf	0xde, 0                movwf       POSTINC2
                                           
                                           slave_rx_data_done
                                               ; see if the byte count is down to zero yet
000dc6   eced     call	0xfda, 0                call        slave_check_byte0
000dc8   f007
000dca   0a00     xorlw	0                      xorlw       0x00
000dcc   e005     bz	0xdd8                     bz          slave_start_processing          ; if it's zero process the cmd
                                               ; it's not zero yet so decrement the counter
000dce   4f9c     dcfsnz	0x9c, 0x1, 0x1        dcfsnz      slave_count, f
000dd0   079d     decf	0x9d, 0x1, 0x1          decf        slave_count+1, f                ; if low byte is zero dec upper
                                           
000dd2   9e9e     bcf	0x9e, 0x7, 0             bcf         PIR1, PSPIF                     ; clear the interrupt
000dd4   9a8a     bcf	0x8a, 0x5, 0             bcf         LATB, P_TXE                     ; let the Z80 send the next byte
000dd6   0012     return	0                     return
                                           
                                           slave_start_processing
                                               ; got a whole command in the buffer
000dd8   939e     bcf	0x9e, 0x1, 0x1           bcf         slaveflags, rxbytes
000dda   819e     bsf	0x9e, 0, 0x1             bsf         slaveflags, busy                ; signal the main process
000ddc   9e9e     bcf	0x9e, 0x7, 0             bcf         PIR1, PSPIF
                                               ; don't clear either of the talk/listen flags until we're done
000dde   0012     return	0                     return
                                           
                                           slave_ignore_event
                                               ; it was an event we're not interested in or can't deal with now
                                               ; just clear the interrupt and get back to work
000de0   9e9e     bcf	0x9e, 0x7, 0             bcf         PIR1, PSPIF
000de2   0012     return	0                     return
                                           
                                           ;===============================================================================
                                           ; slave_command_dispatch - if there are any commands waiting to be serviced do
                                           ;                               them, otherwise return immediately
                                           ;===============================================================================
                                           
                                           slave_command_dispatch
000de4   a19e     btfss	0x9e, 0, 0x1           btfss       slaveflags, busy
000de6   0012     return	0                     return                              ; no commands to deal with
                                               ; there's a new command to deal with.  First reset the pointer
000de8   0e03     movlw	0x3                    movlw       0x03
000dea   6eda     movwf	0xda, 0                movwf       FSR2H
000dec   6ad9     clrf	0xd9, 0                 clrf        FSR2L
                                           
                                               ; now get the command byte and do a jump
000dee   0e0e     movlw	0xe                    movlw       high slave_cmd_table
000df0   6efa     movwf	0xfa, 0                movwf       PCLATH
000df2   50df     movf	0xdf, 0, 0              movf        INDF2, w
000df4   0b3f     andlw	0x3f                   andlw       0x3F
000df6   44e8     rlncf	0xe8, 0, 0             rlncf       WREG, w
000df8   44e8     rlncf	0xe8, 0, 0             rlncf       WREG, w
000dfa   0f02     addlw	0x2                    addlw       low slave_cmd_table
000dfc   b0d8     btfsc	0xd8, 0, 0             btfsc       STATUS,C
000dfe   2afa     incf	0xfa, 0x1, 0            incf        PCLATH, f
000e00   6ef9     movwf	0xf9, 0                movwf       PCL
                                           
                                           ;===============================================================================
                                           ; slave_cmd_table - 64 command lookup table for commands from Z80
                                           ;===============================================================================
                                           
                                           slave_cmd_table
000e02   ef81     goto	0xf02                   goto        slave_unused_command    ; 0
000e04   f007
000e06   ef81     goto	0xf02                   goto        slave_unused_command    ; 1
000e08   f007
000e0a   ef81     goto	0xf02                   goto        slave_unused_command    ; 2
000e0c   f007
000e0e   ef81     goto	0xf02                   goto        slave_unused_command    ; 3
000e10   f007
000e12   ef81     goto	0xf02                   goto        slave_unused_command    ; 4
000e14   f007
000e16   ef81     goto	0xf02                   goto        slave_unused_command    ; 5
000e18   f007
000e1a   ef81     goto	0xf02                   goto        slave_unused_command    ; 6
000e1c   f007
000e1e   ef81     goto	0xf02                   goto        slave_unused_command    ; 7
000e20   f007
000e22   ef81     goto	0xf02                   goto        slave_unused_command    ; 8
000e24   f007
000e26   ef81     goto	0xf02                   goto        slave_unused_command    ; 9
000e28   f007
000e2a   ef94     goto	0xf28                   goto        slave_command_read_eeprom    ; 10
000e2c   f007
000e2e   ef87     goto	0xf0e                   goto        slave_command_write_eeprom    ; 11
000e30   f007
000e32   ef81     goto	0xf02                   goto        slave_unused_command    ; 12
000e34   f007
000e36   ef81     goto	0xf02                   goto        slave_unused_command    ; 13
000e38   f007
000e3a   ef81     goto	0xf02                   goto        slave_unused_command    ; 14
000e3c   f007
000e3e   ef81     goto	0xf02                   goto        slave_unused_command    ; 15
000e40   f007
000e42   ef81     goto	0xf02                   goto        slave_unused_command    ; 16
000e44   f007
000e46   ef81     goto	0xf02                   goto        slave_unused_command    ; 17
000e48   f007
000e4a   ef81     goto	0xf02                   goto        slave_unused_command    ; 18
000e4c   f007
000e4e   ef81     goto	0xf02                   goto        slave_unused_command    ; 19
000e50   f007
000e52   ef81     goto	0xf02                   goto        slave_unused_command    ; 20
000e54   f007
000e56   ef81     goto	0xf02                   goto        slave_unused_command    ; 21
000e58   f007
000e5a   ef81     goto	0xf02                   goto        slave_unused_command    ; 22
000e5c   f007
000e5e   ef81     goto	0xf02                   goto        slave_unused_command    ; 23
000e60   f007
000e62   ef81     goto	0xf02                   goto        slave_unused_command    ; 24
000e64   f007
000e66   ef81     goto	0xf02                   goto        slave_unused_command    ; 25
000e68   f007
000e6a   ef81     goto	0xf02                   goto        slave_unused_command    ; 26
000e6c   f007
000e6e   ef81     goto	0xf02                   goto        slave_unused_command    ; 27
000e70   f007
000e72   ef81     goto	0xf02                   goto        slave_unused_command    ; 28
000e74   f007
000e76   ef81     goto	0xf02                   goto        slave_unused_command    ; 29
000e78   f007
000e7a   ef81     goto	0xf02                   goto        slave_unused_command    ; 30
000e7c   f007
000e7e   ef81     goto	0xf02                   goto        slave_unused_command    ; 31
000e80   f007
000e82   efc2     goto	0xf84                   goto        slave_command_card_cid    ; 32
000e84   f007
000e86   efd7     goto	0xfae                   goto        slave_command_card_csd    ; 33
000e88   f007
000e8a   efa2     goto	0xf44                   goto        slave_command_read_sector    ; 34
000e8c   f007
000e8e   ef81     goto	0xf02                   goto        slave_unused_command    ; 35
000e90   f007
000e92   ef81     goto	0xf02                   goto        slave_unused_command    ; 36
000e94   f007
000e96   ef81     goto	0xf02                   goto        slave_unused_command    ; 37
000e98   f007
000e9a   ef81     goto	0xf02                   goto        slave_unused_command    ; 38
000e9c   f007
000e9e   ef81     goto	0xf02                   goto        slave_unused_command    ; 39
000ea0   f007
000ea2   ef81     goto	0xf02                   goto        slave_unused_command    ; 40
000ea4   f007
000ea6   ef81     goto	0xf02                   goto        slave_unused_command    ; 41
000ea8   f007
000eaa   ef81     goto	0xf02                   goto        slave_unused_command    ; 42
000eac   f007
000eae   ef81     goto	0xf02                   goto        slave_unused_command    ; 43
000eb0   f007
000eb2   ef81     goto	0xf02                   goto        slave_unused_command    ; 44
000eb4   f007
000eb6   ef81     goto	0xf02                   goto        slave_unused_command    ; 45
000eb8   f007
000eba   ef81     goto	0xf02                   goto        slave_unused_command    ; 46
000ebc   f007
000ebe   ef81     goto	0xf02                   goto        slave_unused_command    ; 47
000ec0   f007
000ec2   ef81     goto	0xf02                   goto        slave_unused_command    ; 48
000ec4   f007
000ec6   ef81     goto	0xf02                   goto        slave_unused_command    ; 49
000ec8   f007
000eca   ef81     goto	0xf02                   goto        slave_unused_command    ; 50
000ecc   f007
000ece   ef81     goto	0xf02                   goto        slave_unused_command    ; 51
000ed0   f007
000ed2   ef81     goto	0xf02                   goto        slave_unused_command    ; 52
000ed4   f007
000ed6   ef81     goto	0xf02                   goto        slave_unused_command    ; 53
000ed8   f007
000eda   ef81     goto	0xf02                   goto        slave_unused_command    ; 54
000edc   f007
000ede   ef81     goto	0xf02                   goto        slave_unused_command    ; 55
000ee0   f007
000ee2   ef81     goto	0xf02                   goto        slave_unused_command    ; 56
000ee4   f007
000ee6   ef81     goto	0xf02                   goto        slave_unused_command    ; 57
000ee8   f007
000eea   ef81     goto	0xf02                   goto        slave_unused_command    ; 58
000eec   f007
000eee   ef81     goto	0xf02                   goto        slave_unused_command    ; 59
000ef0   f007
000ef2   ef81     goto	0xf02                   goto        slave_unused_command    ; 60
000ef4   f007
000ef6   ef81     goto	0xf02                   goto        slave_unused_command    ; 61
000ef8   f007
000efa   ef81     goto	0xf02                   goto        slave_unused_command    ; 62
000efc   f007
000efe   efec     goto	0xfd8                   goto        slave_command_reset     ; 63
000f00   f007
                                           
                                           slave_unused_command
                                               ; dummy incase a bad command was sent
000f02   919e     bcf	0x9e, 0, 0x1             bcf         slaveflags, busy
000f04   959e     bcf	0x9e, 0x2, 0x1           bcf         slaveflags, txbytes
000f06   939e     bcf	0x9e, 0x1, 0x1           bcf         slaveflags, rxbytes
                                           
                                               ; let the Z80 write, but not read
000f08   9a8a     bcf	0x8a, 0x5, 0             bcf         LATB, P_TXE
000f0a   8c8a     bsf	0x8a, 0x6, 0             bsf         LATB, P_RXF
                                           
                                               ; in idle mode again, return to main loop
000f0c   0012     return	0                     return
                                           
                                           slave_command_write_eeprom
                                               ; write a byte to the EEPROM non-volatile memory
                                               ; 3 byte sequence: command, address, data
000f0e   2ad9     incf	0xd9, 0x1, 0            incf        FSR2L, f                ; ignore the command byte
000f10   cfde     movff	0xfde, 0x92            movff       POSTINC2, eeprom_addr
000f12   f092
000f14   cfde     movff	0xfde, 0x93            movff       POSTINC2, eeprom_data
000f16   f093
                                           
000f18   ecfa     call	0xbf4, 0                call        eeprom_write
000f1a   f005
                                           
000f1c   919e     bcf	0x9e, 0, 0x1             bcf         slaveflags, busy
000f1e   959e     bcf	0x9e, 0x2, 0x1           bcf         slaveflags, txbytes
000f20   939e     bcf	0x9e, 0x1, 0x1           bcf         slaveflags, rxbytes
                                           
000f22   8c8a     bsf	0x8a, 0x6, 0             bsf         LATB, P_RXF
000f24   9a8a     bcf	0x8a, 0x5, 0             bcf         LATB, P_TXE
000f26   0012     return	0                     return
                                           
                                           ;-------------------------------------------------------------------------------
                                           ; slave_command_read_eeprom - read a byte from eeprom and return it
                                           ;-------------------------------------------------------------------------------
                                           slave_command_read_eeprom
                                               ; read a byte from the NV eeprom memory
                                               ; two bytes: command, addr
000f28   2ad9     incf	0xd9, 0x1, 0            incf        FSR2L, f                ; ignore the command
000f2a   cfde     movff	0xfde, 0x92            movff       POSTINC2, eeprom_addr
000f2c   f092
                                           
000f2e   ec0c     call	0xc18, 0                call        eeprom_read             ; read a byte
000f30   f006
                                           
000f32   6e83     movwf	0x83, 0                movwf       PORTD                   ; put the data in the output buffer
                                           
000f34   6b9c     clrf	0x9c, 0x1               clrf        slave_count
000f36   6b9d     clrf	0x9d, 0x1               clrf        slave_count+1           ; this is the last byte
                                           
000f38   919e     bcf	0x9e, 0, 0x1             bcf         slaveflags, busy
000f3a   939e     bcf	0x9e, 0x1, 0x1           bcf         slaveflags, rxbytes
000f3c   859e     bsf	0x9e, 0x2, 0x1           bsf         slaveflags, txbytes     ; in tx mode ignore all else until read
                                           
000f3e   8a8a     bsf	0x8a, 0x5, 0             bsf         LATB, P_TXE             ; don't write
000f40   9c8a     bcf	0x8a, 0x6, 0             bcf         LATB, P_RXF             ; do read!!
                                           
000f42   0012     return	0                     return
                                           
                                           ;-------------------------------------------------------------------------------
                                           ; slave_command_read_sector - read a sector from the SD card
                                           ;-------------------------------------------------------------------------------
                                           slave_command_read_sector
                                               ; run sd_card_init and respond with the output
000f44   2ad9     incf	0xd9, 0x1, 0            incf        FSR2L, f        ; ignore the command
000f46   cfde     movff	0xfde, 0x8c            movff       POSTINC2, sd_data
000f48   f08c
000f4a   cfde     movff	0xfde, 0x8d            movff       POSTINC2, sd_data+1
000f4c   f08d
000f4e   cfde     movff	0xfde, 0x8e            movff       POSTINC2, sd_data+2
000f50   f08e
000f52   cfde     movff	0xfde, 0x8f            movff       POSTINC2, sd_data+3     ; select the block
000f54   f08f
                                           
000f56   0e03     movlw	0x3                    movlw       0x03
000f58   6eda     movwf	0xda, 0                movwf       FSR2H
000f5a   6ad9     clrf	0xd9, 0                 clrf        FSR2L
                                           
                                               ; set first byte to okay, changed on error
000f5c   0e4f     movlw	0x4f                   movlw       'O'
000f5e   6ede     movwf	0xde, 0                movwf       POSTINC2
                                           
000f60   ec6e     call	0xadc, 0                call        sd_card_read_block
000f62   f005
                                           
                                               ; response is always 515 bytes - ack, 512 data, 2 crc
000f64   0e03     movlw	0x3                    movlw       0x03
000f66   6f9d     movwf	0x9d, 0x1              movwf       slave_count+1
000f68   0e03     movlw	0x3                    movlw       0x03
000f6a   6f9c     movwf	0x9c, 0x1              movwf       slave_count
                                           
000f6c   6ad9     clrf	0xd9, 0                 clrf        FSR2L
000f6e   0e03     movlw	0x3                    movlw       0x03
000f70   6eda     movwf	0xda, 0                movwf       FSR2H
000f72   50de     movf	0xde, 0, 0              movf        POSTINC2, w
000f74   6e83     movwf	0x83, 0                movwf       PORTD
000f76   079c     decf	0x9c, 0x1, 0x1          decf        slave_count, f
                                           
000f78   919e     bcf	0x9e, 0, 0x1             bcf         slaveflags, busy
000f7a   939e     bcf	0x9e, 0x1, 0x1           bcf         slaveflags, rxbytes
000f7c   859e     bsf	0x9e, 0x2, 0x1           bsf         slaveflags, txbytes
                                           
000f7e   9c8a     bcf	0x8a, 0x6, 0             bcf         LATB, P_RXF
000f80   8a8a     bsf	0x8a, 0x5, 0             bsf         LATB, P_TXE
                                           
000f82   0012     return	0                     return
                                           
                                           ;-------------------------------------------------------------------------------
                                           ; slave_command_card_cid - get the CID data from the attached SD card
                                           ;-------------------------------------------------------------------------------
                                           slave_command_card_cid
000f84   0e03     movlw	0x3                    movlw       0x03
000f86   6eda     movwf	0xda, 0                movwf       FSR2H
000f88   6ad9     clrf	0xd9, 0                 clrf        FSR2L
                                           
                                               ; set first byte of response to O for okay, overwritten by error routines
000f8a   0e4f     movlw	0x4f                   movlw       'O'
000f8c   6ede     movwf	0xde, 0                movwf       POSTINC2
000f8e   ec49     call	0xa92, 0                call        sd_card_cid
000f90   f005
                                           
                                           
                                               ; Z80 expects this number of bytes
000f92   0e11     movlw	0x11                   movlw       0x11
000f94   6f9c     movwf	0x9c, 0x1              movwf       slave_count
000f96   0e01     movlw	0x1                    movlw       0x01
000f98   6f9d     movwf	0x9d, 0x1              movwf       slave_count+1
                                           
000f9a   6ad9     clrf	0xd9, 0                 clrf        FSR2L
000f9c   50de     movf	0xde, 0, 0              movf        POSTINC2, w
000f9e   6e83     movwf	0x83, 0                movwf       PORTD
000fa0   079c     decf	0x9c, 0x1, 0x1          decf        slave_count, f
                                           
000fa2   919e     bcf	0x9e, 0, 0x1             bcf         slaveflags, busy
000fa4   939e     bcf	0x9e, 0x1, 0x1           bcf         slaveflags, rxbytes
000fa6   859e     bsf	0x9e, 0x2, 0x1           bsf         slaveflags, txbytes
                                           
000fa8   9c8a     bcf	0x8a, 0x6, 0             bcf         LATB, P_RXF
000faa   8a8a     bsf	0x8a, 0x5, 0             bsf         LATB, P_TXE
                                           
000fac   0012     return	0                     return
                                           
                                           ;-------------------------------------------------------------------------------
                                           ; slave_command_card_csd - get the CSD data from the attached SD card
                                           ;-------------------------------------------------------------------------------
                                           slave_command_card_csd
000fae   0e03     movlw	0x3                    movlw       0x03
000fb0   6eda     movwf	0xda, 0                movwf       FSR2H
000fb2   6ad9     clrf	0xd9, 0                 clrf        FSR2L
                                           
                                               ; put O at the start of the response.  This gets overwritten by errors
000fb4   0e4f     movlw	0x4f                   movlw       'O'
000fb6   6ede     movwf	0xde, 0                movwf       POSTINC2
000fb8   ec29     call	0xa52, 0                call        sd_card_csd
000fba   f005
                                           
                                               ; whatever happens the data we return must be 17 bytes
000fbc   0e11     movlw	0x11                   movlw       0x11
000fbe   6f9c     movwf	0x9c, 0x1              movwf       slave_count
000fc0   0e01     movlw	0x1                    movlw       0x01
000fc2   6f9d     movwf	0x9d, 0x1              movwf       slave_count+1
                                           
000fc4   6ad9     clrf	0xd9, 0                 clrf        FSR2L
000fc6   50de     movf	0xde, 0, 0              movf        POSTINC2, w
000fc8   6e83     movwf	0x83, 0                movwf       PORTD
000fca   079c     decf	0x9c, 0x1, 0x1          decf        slave_count, f
                                           
000fcc   919e     bcf	0x9e, 0, 0x1             bcf         slaveflags, busy
000fce   939e     bcf	0x9e, 0x1, 0x1           bcf         slaveflags, rxbytes
000fd0   859e     bsf	0x9e, 0x2, 0x1           bsf         slaveflags, txbytes
                                           
000fd2   9c8a     bcf	0x8a, 0x6, 0             bcf         LATB, P_RXF
000fd4   8a8a     bsf	0x8a, 0x5, 0             bsf         LATB, P_TXE
                                           
000fd6   0012     return	0                     return
                                           
                                           slave_command_reset
                                               ; reset the whole system
000fd8   00ff     reset                        reset
                                           
                                           ;-------------------------------------------------------------------------------
                                           ; slave_check_byte0 - returns 0 in w if the current byte number is zero
                                           ;-------------------------------------------------------------------------------
                                           slave_check_byte0
000fda   519d     movf	0x9d, 0, 0x1            movf        slave_count+1, w
000fdc   0a00     xorlw	0                      xorlw       0x00
000fde   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS,Z
000fe0   0cff     retlw	0xff                   retlw       0xff
000fe2   519c     movf	0x9c, 0, 0x1            movf        slave_count, w
000fe4   0a00     xorlw	0                      xorlw       0x00
000fe6   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS, Z
000fe8   0cff     retlw	0xff                   retlw       0xff
000fea   0c00     retlw	0                      retlw       0x00
                                           
                                           slave_command_lengths
000fec   0000     nop                          db          0x00, 0x00                      ;  0 (0x00): none
000fee   0000     nop                          db          0x00, 0x00                      ;  1 (0x01): none
000ff0   0000     nop                          db          0x00, 0x00                      ;  2 (0x02): none
000ff2   0000     nop                          db          0x00, 0x00                      ;  3 (0x03): none
000ff4   0000     nop                          db          0x00, 0x00                      ;  4 (0x04): none
000ff6   0000     nop                          db          0x00, 0x00                      ;  5 (0x05): none
000ff8   0000     nop                          db          0x00, 0x00                      ;  6 (0x06): none
000ffa   0000     nop                          db          0x00, 0x00                      ;  7 (0x07): none
000ffc   0000     nop                          db          0x00, 0x00                      ;  8 (0x08): none
000ffe   0000     nop                          db          0x00, 0x00                      ;  9 (0x09): none
001000   0101     movlb	0x1                    db          0x01, 0x01                      ; 10 (0x0A): read eeprom 1: addr
001002   0102     movlb	0x2                    db          0x02, 0x01                      ; 11 (0x0B): write eeprom 2: addr, data
001004   0000     nop                          db          0x00, 0x00                      ; 12 (0x0C): none
001006   0000     nop                          db          0x00, 0x00                      ; 13 (0x0D): none
001008   0000     nop                          db          0x00, 0x00                      ; 14 (0x0E): none
00100a   0000     nop                          db          0x00, 0x00                      ; 15 (0x0F): none
00100c   0000     nop                          db          0x00, 0x00                      ; 16 (0x10): none
00100e   0000     nop                          db          0x00, 0x00                      ; 17 (0x11): none
001010   0000     nop                          db          0x00, 0x00                      ; 18 (0x12): none
001012   0000     nop                          db          0x00, 0x00                      ; 19 (0x13): none
001014   0000     nop                          db          0x00, 0x00                      ; 20 (0x14): none
001016   0000     nop                          db          0x00, 0x00                      ; 21 (0x15): none
001018   0000     nop                          db          0x00, 0x00                      ; 22 (0x16): none
00101a   0000     nop                          db          0x00, 0x00                      ; 23 (0x17): none
00101c   0000     nop                          db          0x00, 0x00                      ; 24 (0x18): none
00101e   0000     nop                          db          0x00, 0x00                      ; 25 (0x19): none
001020   0000     nop                          db          0x00, 0x00                      ; 26 (0x1A): none
001022   0000     nop                          db          0x00, 0x00                      ; 27 (0x1B): none
001024   0000     nop                          db          0x00, 0x00                      ; 28 (0x1C): none
001026   0000     nop                          db          0x00, 0x00                      ; 29 (0x1D): none
001028   0000     nop                          db          0x00, 0x00                      ; 30 (0x1E): none
00102a   0000     nop                          db          0x00, 0x00                      ; 31 (0x1F): none
00102c   0000     nop                          db          0x00, 0x00                      ; 32 (0x20): sd_card_cid, no data
00102e   0000     nop                          db          0x00, 0x00                      ; 33 (0x21): sd_card_csd, no data
001030   0104     movlb	0x4                    db          0x04, 0x01                      ; 34 (0x22): sd_card_read_block 4: addr
001032   0000     nop                          db          0x00, 0x00                      ; 35 (0x23): none
001034   0000     nop                          db          0x00, 0x00                      ; 36 (0x24): none
001036   0000     nop                          db          0x00, 0x00                      ; 37 (0x25): none
001038   0000     nop                          db          0x00, 0x00                      ; 38 (0x26): none
00103a   0000     nop                          db          0x00, 0x00                      ; 39 (0x27): none
00103c   0000     nop                          db          0x00, 0x00                      ; 40 (0x28): none
00103e   0000     nop                          db          0x00, 0x00                      ; 41 (0x29): none
001040   0000     nop                          db          0x00, 0x00                      ; 42 (0x2A): none
001042   0000     nop                          db          0x00, 0x00                      ; 43 (0x2B): none
001044   0000     nop                          db          0x00, 0x00                      ; 44 (0x2C): none
001046   0000     nop                          db          0x00, 0x00                      ; 45 (0x2D): none
001048   0000     nop                          db          0x00, 0x00                      ; 46 (0x2E): none
00104a   0000     nop                          db          0x00, 0x00                      ; 47 (0x2F): none
00104c   0000     nop                          db          0x00, 0x00                      ; 48 (0x30): none
00104e   0000     nop                          db          0x00, 0x00                      ; 49 (0x31): none
001050   0000     nop                          db          0x00, 0x00                      ; 50 (0x32): none
001052   0000     nop                          db          0x00, 0x00                      ; 51 (0x33): none
001054   0000     nop                          db          0x00, 0x00                      ; 52 (0x34): none
001056   0000     nop                          db          0x00, 0x00                      ; 53 (0x35): none
001058   0000     nop                          db          0x00, 0x00                      ; 54 (0x36): none
00105a   0000     nop                          db          0x00, 0x00                      ; 55 (0x37): none
00105c   0000     nop                          db          0x00, 0x00                      ; 56 (0x38): none
00105e   0000     nop                          db          0x00, 0x00                      ; 57 (0x39): none
001060   0000     nop                          db          0x00, 0x00                      ; 58 (0x3A): none
001062   0000     nop                          db          0x00, 0x00                      ; 59 (0x3B): none
001064   0000     nop                          db          0x00, 0x00                      ; 60 (0x3C): none
001066   0000     nop                          db          0x00, 0x00                      ; 61 (0x3D): none
001068   0000     nop                          db          0x00, 0x00                      ; 62 (0x3E): none
00106a   0000     nop                          db          0x00, 0x00                      ; 63 (0x3F): reset, no data
                                           ; == Export these refs =========================================================
                                           
                                               GLOBAL      HI_ADDR
                                               GLOBAL      LO_ADDR
                                               GLOBAL      DREG
                                           
                                               GLOBAL      get_reset
                                               GLOBAL      get_dma
                                               GLOBAL      get_slave
                                               GLOBAL      ensure_master
                                               GLOBAL      revert_master
                                               GLOBAL      io_read
                                               GLOBAL      io_write
                                               GLOBAL      mem_read
                                               GLOBAL      mem_write
                                               GLOBAL      slave_int
                                               GLOBAL      slave_command_dispatch
                                               GLOBAL      slave_count
                                           end
                                           ;==============================================================================
                                           ;    boot.asm
                                           ;==============================================================================
                                           
                                           ;------------------------------------------------------------------------------
                                           ;
                                           ; Simple Debug Kernel for CPU supervisor on Z80 Project Mark 2
                                           ; File Version 2 - 17 Oct 09
                                           ; hairymnstr@gmail.com
                                           ;
                                           ; Copyright (C) 2009  Nathan Dumont
                                           ;
                                           ; This program is free software: you can redistribute it and/or modify
                                           ; it under the terms of the GNU General Public License as published by
                                           ; the Free Software Foundation, either version 3 of the License, or
                                           ; (at your option) any later version.
                                           ;
                                           ; This program is distributed in the hope that it will be useful,
                                           ; but WITHOUT ANY WARRANTY; without even the implied warranty of
                                           ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                           ; GNU General Public License for more details.
                                           ;
                                           ; You should have received a copy of the GNU General Public License
                                           ; along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                           ;
                                           ;
                                           ;------------------------------------------------------------------------------
                                           
                                           list p=18f4520
                                           #include <p18f4520.inc>
                                                   LIST
                                           
                                           ;==========================================================================
                                           ;  MPASM PIC18F4520 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2007 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           #include "portpins.inc"
                                           ;== PORT Definitions ==========================================================
                                           
                                           ;-- PORT A --------------------------------------------------------------------
                                           
                                           P_RESET         EQU     0
                                           P_BUSRQ         EQU     1
                                           P_MREQ          EQU     2
                                           P_IORQ          EQU     3
                                           P_WAIT          EQU     4
                                           P_HI_LAT        EQU     5
                                           
                                           ;-- PORT C --------------------------------------------------------------------
                                           
                                           P_BUSACK        EQU     0
                                           P_SD_CS         EQU     1
                                           P_CLK           EQU     2
                                           P_SD_CK         EQU     3
                                           P_SD_DI         EQU     4
                                           P_SD_DO         EQU     5
                                           P_TX            EQU     6
                                           P_RX            EQU     7
                                           
                                           ;-- PORT B ---------------------------------------------------------------------
                                           
                                           P_SD_FIND       EQU     4
                                           P_TXE           EQU     5
                                           P_RXF           EQU     6
                                           P_SD_PRES       EQU     7
                                           
                                           SLAVE_LATB_DEF EQU     b'11000000'
                                           SLAVE_TRISB_DEF EQU     b'00011111'
                                           
                                           ;-- PORT E --------------------------------------------------------------------
                                           
                                           P_RD            EQU     0
                                           P_WR            EQU     1
                                           P_CS            EQU     2
                                           
                                           ; -- Externals From host_bus.asm ----------------------------------------------
                                           
                                               EXTERN      ensure_master
                                               EXTERN      revert_master
                                               EXTERN      mem_write
                                           
                                               EXTERN      DREG
                                               EXTERN      HI_ADDR
                                               EXTERN      LO_ADDR
                                           
                                           ; -- Externals From eeprom.asm -------------------------------------------------
                                           
                                               EXTERN      eeprom_read
                                               EXTERN      eeprom_addr
                                               EXTERN      eeprom_data
                                           
                                             UDATA
                                           
                                           WRCOUNT         RES     1
                                           BOOTWR_FLAGS      RES     1
                                           
                                           high_jump               res     1
                                           low_jump                res     1
                                           
                                             CODE
                                           
                                           boot_init
00106c   0e01     movlw	0x1                    movlw       0x01
00106e   6f92     movwf	0x92, 0x1              movwf       eeprom_addr
                                           
001070   ec0c     call	0xc18, 0                call        eeprom_read
001072   f006
                                               ; option for clock speed now in eedata
                                           
001074   0e10     movlw	0x10                   movlw       high clock_jump_table
001076   6fa1     movwf	0xa1, 0x1              movwf       high_jump
                                           
001078   5193     movf	0x93, 0, 0x1            movf        eeprom_data, w
00107a   0b03     andlw	0x3                    andlw       0x03            ; make sure it's a valid clock setting
                                           
00107c   44e8     rlncf	0xe8, 0, 0             rlncf       WREG, w
00107e   44e8     rlncf	0xe8, 0, 0             rlncf       WREG, w
                                           
001080   0f90     addlw	0x90                   addlw       low clock_jump_table
001082   b0d8     btfsc	0xd8, 0, 0             btfsc       STATUS, C
001084   2ba1     incf	0xa1, 0x1, 0x1          incf        high_jump, f
                                           
001086   6fa2     movwf	0xa2, 0x1              movwf       low_jump
001088   51a1     movf	0xa1, 0, 0x1            movf        high_jump, w
00108a   6efa     movwf	0xfa, 0                movwf       PCLATH
                                           
00108c   51a2     movf	0xa2, 0, 0x1            movf        low_jump, w
00108e   6ef9     movwf	0xf9, 0                movwf       PCL
                                           
                                           clock_jump_table
001090   ef50     goto	0x10a0                  goto        clock_0
001092   f008
001094   ef5a     goto	0x10b4                  goto        clock_1
001096   f008
001098   ef64     goto	0x10c8                  goto        clock_2
00109a   f008
00109c   ef6e     goto	0x10dc                  goto        clock_3
00109e   f008
                                           
                                           clock_0                         ; 250kHz
                                           ; set up the PWM peripheral that's going to generate the clock
0010a0   0e27     movlw	0x27                   movlw       d'39'            ; Frequency setting  1 = 5MHz, 2 = 3.33MHz, 
                                                                            ;                    3 = 2.5MHz, 39 = 250kHz
0010a2   6ecb     movwf	0xcb, 0                movwf       PR2
                                           ; Duty cycle 1/2 
                                           ; 10 bit value bits <9:2> in CCPR1L
                                           ;              bits <1:0> in CCP1CON<5:4>
                                           ; 5MHz = 4    (b'0000000100' - 0x01 & b'00') - mode 03
                                           ; 3.33MHz = 6 (b'0000000110' - 0x01 & b'10') - mode 02
                                           ; 2.5MHz = 16 (b'0000010000' - 0x02 & b'00') - mode 01
                                           ; 250kHz = 80 (b'0001010000' - 0x14 & b'00') - mode 00
                                           ; CCP1CON<7:6> 00 - single output
                                           ; CCP1CON<5:4> xx - see above
                                           ; CCP1CON<3:0> 1100 - PWM mode
0010a4   0e0c     movlw	0xc                    movlw       b'00001100'
0010a6   6ebd     movwf	0xbd, 0                movwf       CCP1CON
0010a8   0e14     movlw	0x14                   movlw       0x14
0010aa   6ebe     movwf	0xbe, 0                movwf       CCPR1L          
                                           
0010ac   9494     bcf	0x94, 0x2, 0             bcf         TRISC,P_CLK     ; pin as output
                                               
0010ae   0e04     movlw	0x4                    movlw       b'00000100'     ; T2 on, no pre or post scale
0010b0   6eca     movwf	0xca, 0                movwf       T2CON
                                           
0010b2   0012     return	0                     return
                                           
                                           clock_1                         ; 2.5MHz
                                           ; set up the PWM peripheral that's going to generate the clock
0010b4   0e03     movlw	0x3                    movlw       d'3'            ; Frequency setting  1 = 5MHz, 2 = 3.33MHz, 
                                                                            ;                    3 = 2.5MHz, 39 = 250kHz
0010b6   6ecb     movwf	0xcb, 0                movwf       PR2
                                           ; Duty cycle 1/2 
                                           ; 10 bit value bits <9:2> in CCPR1L
                                           ;              bits <1:0> in CCP1CON<5:4>
                                           ; 5MHz = 4    (b'0000000100' - 0x01 & b'00') - mode 03
                                           ; 3.33MHz = 6 (b'0000000110' - 0x01 & b'10') - mode 02
                                           ; 2.5MHz = 16 (b'0000010000' - 0x02 & b'00') - mode 01
                                           ; 250kHz = 80 (b'0001010000' - 0x14 & b'00') - mode 00
                                           ; CCP1CON<7:6> 00 - single output
                                           ; CCP1CON<5:4> xx - see above
                                           ; CCP1CON<3:0> 1100 - PWM mode
0010b8   0e0c     movlw	0xc                    movlw       b'00001100'
0010ba   6ebd     movwf	0xbd, 0                movwf       CCP1CON
0010bc   0e02     movlw	0x2                    movlw       0x2
0010be   6ebe     movwf	0xbe, 0                movwf       CCPR1L          
                                           
0010c0   9494     bcf	0x94, 0x2, 0             bcf         TRISC,P_CLK     ; pin as output
                                               
0010c2   0e04     movlw	0x4                    movlw       b'00000100'     ; T2 on, no pre or post scale
0010c4   6eca     movwf	0xca, 0                movwf       T2CON
                                           
0010c6   0012     return	0                     return
                                           
                                           clock_2                         ; 3.33MHz
                                           ; set up the PWM peripheral that's going to generate the clock
0010c8   0e02     movlw	0x2                    movlw       d'2'            ; Frequency setting  1 = 5MHz, 2 = 3.33MHz, 
                                                                            ;                    3 = 2.5MHz, 39 = 250kHz
0010ca   6ecb     movwf	0xcb, 0                movwf       PR2
                                           ; Duty cycle 1/2 
                                           ; 10 bit value bits <9:2> in CCPR1L
                                           ;              bits <1:0> in CCP1CON<5:4>
                                           ; 5MHz = 4    (b'0000000100' - 0x01 & b'00') - mode 03
                                           ; 3.33MHz = 6 (b'0000000110' - 0x01 & b'10') - mode 02
                                           ; 2.5MHz = 16 (b'0000010000' - 0x02 & b'00') - mode 01
                                           ; 250kHz = 80 (b'0001010000' - 0x14 & b'00') - mode 00
                                           ; CCP1CON<7:6> 00 - single output
                                           ; CCP1CON<5:4> xx - see above
                                           ; CCP1CON<3:0> 1100 - PWM mode
0010cc   0e2c     movlw	0x2c                   movlw       b'00101100'
0010ce   6ebd     movwf	0xbd, 0                movwf       CCP1CON
0010d0   0e01     movlw	0x1                    movlw       0x1
0010d2   6ebe     movwf	0xbe, 0                movwf       CCPR1L          
                                           
0010d4   9494     bcf	0x94, 0x2, 0             bcf         TRISC,P_CLK     ; pin as output
                                               
0010d6   0e04     movlw	0x4                    movlw       b'00000100'     ; T2 on, no pre or post scale
0010d8   6eca     movwf	0xca, 0                movwf       T2CON
                                           
0010da   0012     return	0                     return
                                           
                                           clock_3                         ; 5MHz
                                           ; set up the PWM peripheral that's going to generate the clock
0010dc   0e01     movlw	0x1                    movlw       d'1'            ; Frequency setting  1 = 5MHz, 2 = 3.33MHz, 
                                                                            ;                    3 = 2.5MHz, 39 = 250kHz
0010de   6ecb     movwf	0xcb, 0                movwf       PR2
                                           ; Duty cycle 1/2 
                                           ; 10 bit value bits <9:2> in CCPR1L
                                           ;              bits <1:0> in CCP1CON<5:4>
                                           ; 5MHz = 4    (b'0000000100' - 0x01 & b'00') - mode 03
                                           ; 3.33MHz = 6 (b'0000000110' - 0x01 & b'10') - mode 02
                                           ; 2.5MHz = 16 (b'0000010000' - 0x02 & b'00') - mode 01
                                           ; 250kHz = 80 (b'0001010000' - 0x14 & b'00') - mode 00
                                           ; CCP1CON<7:6> 00 - single output
                                           ; CCP1CON<5:4> xx - see above
                                           ; CCP1CON<3:0> 1100 - PWM mode
0010e0   0e0c     movlw	0xc                    movlw       b'00001100'
0010e2   6ebd     movwf	0xbd, 0                movwf       CCP1CON
0010e4   0e01     movlw	0x1                    movlw       0x1
0010e6   6ebe     movwf	0xbe, 0                movwf       CCPR1L          
                                           
0010e8   9494     bcf	0x94, 0x2, 0             bcf         TRISC,P_CLK     ; pin as output
                                               
0010ea   0e04     movlw	0x4                    movlw       b'00000100'     ; T2 on, no pre or post scale
0010ec   6eca     movwf	0xca, 0                movwf       T2CON
                                           
0010ee   0012     return	0                     return
                                           
                                           ;===============================================================================
                                           ; boot_load - loads the boot ROM from the PIC's flash to system memory
                                           ;===============================================================================
                                           
                                           ;; There is an 8K image in Flash onboard this PIC.  This is loaded sequentially
                                           ;; into system memory but in two chunks; the first part loads up between 0 and
                                           ;; $100, then the remainder is loaded above $8000.
                                           
                                           boot_load
                                               ; make sure that the Z80 is a slave
0010f0   ec14     call	0xc28, 0                call        ensure_master
0010f2   f006
                                           
                                               ; set up the table read pointers
                                           
0010f4   6af8     clrf	0xf8, 0                 clrf        TBLPTRU
0010f6   0e60     movlw	0x60                   movlw       0x60
0010f8   6ef7     movwf	0xf7, 0                movwf       TBLPTRH
0010fa   6af6     clrf	0xf6, 0                 clrf        TBLPTRL
                                           
                                               ; set up EECON1 for Flash memory read
                                               
0010fc   0e80     movlw	0x80                   movlw       b'10000000'
0010fe   6ea6     movwf	0xa6, 0                movwf       EECON1
                                           
                                               ; now loop over all 8KB of data
001100   6b95     clrf	0x95, 0x1               clrf        HI_ADDR
001102   6b94     clrf	0x94, 0x1               clrf        LO_ADDR
                                           
                                           boot_load_loop
001104   0009     tblrd	*+                     tblrd*+             ; copy a byte into TABLAT
001106   cff5     movff	0xff5, 0x96            movff       TABLAT,DREG
001108   f096
00110a   ec96     call	0xd2c, 0                call        mem_write
00110c   f006
00110e   3f94     incfsz	0x94, 0x1, 0x1        incfsz      LO_ADDR,f
001110   d7f9     bra	0x1104                   bra         boot_load_loop
001112   2b95     incf	0x95, 0x1, 0x1          incf        HI_ADDR,f
001114   5195     movf	0x95, 0, 0x1            movf        HI_ADDR,w
001116   0a01     xorlw	0x1                    xorlw       0x01
001118   e006     bz	0x1126                    bz          boot_jump_8000
00111a   5195     movf	0x95, 0, 0x1            movf        HI_ADDR,w
00111c   0a9f     xorlw	0x9f                   xorlw       0x9F
00111e   e1f2     bnz	0x1104                   bnz         boot_load_loop
                                               
                                               ; all done, release the bus if we claimed it and return
001120   ec1c     call	0xc38, 0                call        revert_master
001122   f006
                                           
001124   0012     return	0                     return
                                           
                                           boot_jump_8000
001126   0e80     movlw	0x80                   movlw       0x80
001128   6f95     movwf	0x95, 0x1              movwf       HI_ADDR
00112a   d7ec     bra	0x1104                   bra         boot_load_loop
                                           
                                           ;*******************************************************************************
                                           ;*  boot_update - copy a 128 byte packet from RX buffer to flash               *
                                           ;*    This is called repeatedly from serial.asm after an update BIOS command   *
                                           ;*    is sent from a PC.                                                       *
                                           ;*******************************************************************************
                                           boot_update
                                               ; first two bytes in the RX buffer are the start address in FLASH
                                               ; they've already been checked so just trust them
                                               ; FSR0L is already pointing at the high address
                                           
00112c   6af8     clrf	0xf8, 0                 clrf        TBLPTRU
00112e   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
001130   6ef7     movwf	0xf7, 0                movwf       TBLPTRH
001132   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
001134   6ef6     movwf	0xf6, 0                movwf       TBLPTRL
                                           
001136   81a0     bsf	0xa0, 0, 0x1             bsf         BOOTWR_FLAGS,0
                                               ; next code gets run twice because you can only erase data in 64 byte blocks
                                           boot_update_erase
                                               ; erase a block
001138   8ea6     bsf	0xa6, 0x7, 0             bsf         EECON1, EEPGD
00113a   9ca6     bcf	0xa6, 0x6, 0             bcf         EECON1, CFGS
00113c   84a6     bsf	0xa6, 0x2, 0             bsf         EECON1, WREN
00113e   88a6     bsf	0xa6, 0x4, 0             bsf         EECON1, FREE
001140   9ef2     bcf	0xf2, 0x7, 0             bcf         INTCON, GIE
                                           
001142   0e55     movlw	0x55                   movlw       0x55
001144   6ea7     movwf	0xa7, 0                movwf       EECON2
001146   0eaa     movlw	0xaa                   movlw       0x0AA
001148   6ea7     movwf	0xa7, 0                movwf       EECON2
00114a   82a6     bsf	0xa6, 0x1, 0             bsf         EECON1, WR              ; actual erase command up to 2 ms
                                           
00114c   8ef2     bsf	0xf2, 0x7, 0             bsf         INTCON, GIE     ; re-enable interrupts
00114e   000a     tblrd	*-                     tblrd*-                     ; dummy decrement, we're going to use pre-inc
                                                                           ; to write so the pointer is still in the
                                                                           ; block when we call write
                                           
001150   83a0     bsf	0xa0, 0x1, 0x1           bsf         BOOTWR_FLAGS,1  ; flag to see how many times we've done this
                                               ; write a 32 byte block, happens twice
                                           boot_update_write
001152   0e20     movlw	0x20                   movlw       d'32'
001154   6f9f     movwf	0x9f, 0x1              movwf       WRCOUNT
                                           
                                           boot_update_write_loop
001156   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
001158   6ef5     movwf	0xf5, 0                movwf       TABLAT
00115a   000f     tblwt	+*                     tblwt+*
00115c   2f9f     decfsz	0x9f, 0x1, 0x1        decfsz      WRCOUNT,f
00115e   d7fb     bra	0x1156                   bra         boot_update_write_loop
                                           
                                               ; written 32 bytes to tablat, now need to initiate the write
001160   8ea6     bsf	0xa6, 0x7, 0             bsf         EECON1, EEPGD
001162   9ca6     bcf	0xa6, 0x6, 0             bcf         EECON1, CFGS
001164   84a6     bsf	0xa6, 0x2, 0             bsf         EECON1, WREN
001166   9ef2     bcf	0xf2, 0x7, 0             bcf         INTCON, GIE
                                           
001168   0e55     movlw	0x55                   movlw       0x55
00116a   6ea7     movwf	0xa7, 0                movwf       EECON2
00116c   0eaa     movlw	0xaa                   movlw       0x0AA
00116e   6ea7     movwf	0xa7, 0                movwf       EECON2
001170   82a6     bsf	0xa6, 0x1, 0             bsf         EECON1, WR
                                           
001172   8ef2     bsf	0xf2, 0x7, 0             bsf         INTCON, GIE
001174   94a6     bcf	0xa6, 0x2, 0             bcf         EECON1, WREN
                                           
001176   a3a0     btfss	0xa0, 0x1, 0x1         btfss       BOOTWR_FLAGS,1
001178   d002     bra	0x117e                   bra         boot_update_second_erase
                                           
00117a   93a0     bcf	0xa0, 0x1, 0x1           bcf         BOOTWR_FLAGS,1
00117c   d7ea     bra	0x1152                   bra         boot_update_write
                                           
                                           boot_update_second_erase
00117e   a1a0     btfss	0xa0, 0, 0x1           btfss       BOOTWR_FLAGS,0
001180   efc6     goto	0x118c                  goto        boot_verify
001182   f008
001184   91a0     bcf	0xa0, 0, 0x1             bcf         BOOTWR_FLAGS,0
001186   0009     tblrd	*+                     tblrd*+                     ; dummy increment to make sure we erase the next block
001188   ef9c     goto	0x1138                  goto        boot_update_erase
00118a   f008
                                           
                                           boot_verify
                                               ; check through all the bytes just written to flash and make sure they
                                               ; match.  Then build a report packet accordingly
00118c   85a0     bsf	0xa0, 0x2, 0x1           bsf         BOOTWR_FLAGS,2  ; set a flag, this gets cleared if we find an
                                                                           ; error
                                           
00118e   0e01     movlw	0x1                    movlw       0x1
001190   6eea     movwf	0xea, 0                movwf       FSR0H
001192   0e02     movlw	0x2                    movlw       0x02            ; need to skip the command and length bytes
001194   6ee9     movwf	0xe9, 0                movwf       FSR0L
                                           
                                               ; set the table pointer
001196   6af8     clrf	0xf8, 0                 clrf        TBLPTRU
001198   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
00119a   6ef7     movwf	0xf7, 0                movwf       TBLPTRH
00119c   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
00119e   6ef6     movwf	0xf6, 0                movwf       TBLPTRL
                                           
0011a0   0e80     movlw	0x80                   movlw       0x80
0011a2   6f9f     movwf	0x9f, 0x1              movwf       WRCOUNT
                                           
                                           boot_verify_loop
0011a4   50ee     movf	0xee, 0, 0              movf        POSTINC0,w
0011a6   0009     tblrd	*+                     tblrd*+
0011a8   18f5     xorwf	0xf5, 0, 0             xorwf       TABLAT,w
0011aa   a4d8     btfss	0xd8, 0x2, 0           btfss       STATUS,Z
0011ac   95a0     bcf	0xa0, 0x2, 0x1           bcf         BOOTWR_FLAGS,2
0011ae   2f9f     decfsz	0x9f, 0x1, 0x1        decfsz      WRCOUNT,f
0011b0   d7f9     bra	0x11a4                   bra         boot_verify_loop
                                           
                                               ; all verified, need to make a response packet based on the OK flag
0011b2   a5a0     btfss	0xa0, 0x2, 0x1         btfss       BOOTWR_FLAGS,2
0011b4   d00a     bra	0x11ca                   bra         boot_verify_nak
                                           
                                               ; got here so write went according to plan
0011b6   0e02     movlw	0x2                    movlw       0x2
0011b8   6ee2     movwf	0xe2, 0                movwf       FSR1H
0011ba   6ae1     clrf	0xe1, 0                 clrf        FSR1L
                                           
0011bc   0e08     movlw	0x8                    movlw       0x08            ; successful command 8 executed
0011be   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0011c0   0e00     movlw	0                      movlw       0x00            ; no data, just ack
0011c2   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0011c4   0e08     movlw	0x8                    movlw       0x08            ; hard coded checksum Oo
0011c6   6ee6     movwf	0xe6, 0                movwf       POSTINC1
                                           
0011c8   0012     return	0                     return
                                           
                                           boot_verify_nak
                                               ; there must have been an error in the memory writing, send a NAK
0011ca   0e02     movlw	0x2                    movlw       0x02
0011cc   6ee2     movwf	0xe2, 0                movwf       FSR1H
0011ce   6ae1     clrf	0xe1, 0                 clrf        FSR1L
                                           
                                               ; going to cheat and use the WRCOUNT as a checksum holder
0011d0   6b9f     clrf	0x9f, 0x1               clrf        WRCOUNT
                                           
0011d2   0e48     movlw	0x48                   movlw       0x48            ; nak for command 8
0011d4   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0011d6   1b9f     xorwf	0x9f, 0x1, 0x1         xorwf       WRCOUNT,f
0011d8   0e02     movlw	0x2                    movlw       0x02            ; only the error code to reply with
0011da   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0011dc   1b9f     xorwf	0x9f, 0x1, 0x1         xorwf       WRCOUNT,f
0011de   0e00     movlw	0                      movlw       0x00
0011e0   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0011e2   1b9f     xorwf	0x9f, 0x1, 0x1         xorwf       WRCOUNT,f
0011e4   0e08     movlw	0x8                    movlw       0x08            ; verification error number
0011e6   6ee6     movwf	0xe6, 0                movwf       POSTINC1
0011e8   1b9f     xorwf	0x9f, 0x1, 0x1         xorwf       WRCOUNT,f
0011ea   519f     movf	0x9f, 0, 0x1            movf        WRCOUNT,w
0011ec   6ee6     movwf	0xe6, 0                movwf       POSTINC1        ; add the checksum
                                           
0011ee   0012     return	0                     return
                                               
                                           
                                           ; == Export These ==============================================================
                                           
                                               GLOBAL      boot_init
                                               GLOBAL      boot_load
                                               GLOBAL      boot_update
                                           
                                           end
                                           
                                           list p=18f4520
                                           #include <p18f4520.inc>
                                                   LIST
                                           
                                           ;==========================================================================
                                           ;  MPASM PIC18F4520 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2007 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           
                                               org 0x6000
                                           
006000   90c3     bcf	0xc3, 0, 0               data 0x90C3, 0x008F, 0x0000, 0x0000 ; 6000
006002   008f     dw	0x8f  ;unknown opcode 
006004   0000     nop                      
006006   0000     nop                      
006008   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6008
00600a   0000     nop                      
00600c   0000     nop                      
00600e   0000     nop                      
006010   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6010
006012   0000     nop                      
006014   0000     nop                      
006016   0000     nop                      
006018   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6018
00601a   0000     nop                      
00601c   0000     nop                      
00601e   0000     nop                      
006020   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6020
006022   0000     nop                      
006024   0000     nop                      
006026   0000     nop                      
006028   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6028
00602a   0000     nop                      
00602c   0000     nop                      
00602e   0000     nop                      
006030   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6030
006032   0000     nop                      
006034   0000     nop                      
006036   0000     nop                      
006038   c5f5     movff	0x5f5, 0x5d5           data 0xC5F5, 0xE5D5, 0x06DB, 0x47CB ; 6038
00603a   e5d5
00603c   06db     decf	0xdb, 0x1, 0        
00603e   47cb     rlncf	0xcb, 0x1, 0x1     
006040   6cca     negf	0xca, 0                 data 0x6CCA, 0xCB00, 0xCA4F, 0x0055 ; 6040
006042   cb00     movff	0xb00, 0xa4f       
006044   ca4f
006046   0055     dw	0x55  ;unknown opcode 
006048   67cb     tstfsz	0xcb, 0x1             data 0x67CB, 0x72CA, 0xCB00, 0xCD6F ; 6048
00604a   72ca     btg	0xca, 0x1, 0         
00604c   cb00     movff	0xb00, 0xd6f       
00604e   cd6f
006050   8f49     bsf	0x49, 0x7, 0x1           data 0x8F49, 0x86C3, 0xDB00, 0x3203 ; 6050
006052   86c3     bsf	0xc3, 0x3, 0         
006054   db00     rcall	0x6656             
006056   3203     rrcf	0x3, 0x1, 0         
006058   99a1     bcf	0xa1, 0x4, 0x1           data 0x99A1, 0x4A32, 0x2181, 0x814A ; 6058
00605a   4a32     infsnz	0x32, 0x1, 0      
00605c   2181     addwfc	0x81, 0, 0x1      
00605e   814a     bsf	0x4a, 0, 0x1         
006060   023e     mulwf	0x3e, 0                data 0x023E, 0x0ACD, 0x3E81, 0xD320 ; 6060
006062   0acd     xorlw	0xcd               
006064   3e81     incfsz	0x81, 0x1, 0      
006066   d320     bra	0x66a8               
006068   c305     movff	0x305, 0x86            data 0xC305, 0x0086, 0x80CD, 0xC381 ; 6068
00606a   0086
00606c   80cd     bsf	0xcd, 0, 0           
00606e   c381     movff	0x381, 0x86        
006070   0086
006070   0086     dw	0x86  ;unknown opcode     data 0x0086, 0x02DB, 0x4A32, 0x2181 ; 6070
006072   02db     mulwf	0xdb, 0            
006074   4a32     infsnz	0x32, 0x1, 0      
006076   2181     addwfc	0x81, 0, 0x1      
006078   814a     bsf	0x4a, 0, 0x1             data 0x814A, 0x023E, 0x0ACD, 0x3E81 ; 6078
00607a   023e     mulwf	0x3e, 0            
00607c   0acd     xorlw	0xcd               
00607e   3e81     incfsz	0x81, 0x1, 0      
006080   d320     bra	0x66c2                   data 0xD320, 0xC305, 0x0086, 0xD1E1 ; 6080
006082   c305     movff	0x305, 0x86        
006084   0086
006086   d1e1     bra	0x644a               
006088   f1c1     dw	0xf1c1  ;unknown opcode     data 0xF1C1, 0xEDFB, 0x004D, 0x0000 ; 6088
00608a   edfb     call	0x9bf6, 0x1         
00608c   004d
00608e   0000     nop                      
006090   0300     mulwf	0, 0x1                 data 0x0300, 0xD090, 0x0003, 0x25A0 ; 6090
006092   d090     bra	0x61b4               
006094   0003     sleep                    
006096   25a0     addwf	0xa0, 0, 0x1       
006098   0026     dw	0x26  ;unknown opcode     data 0x0026, 0xDCD5, 0x0032, 0x4B40 ; 6098
00609a   dcd5     rcall	0x5a46             
00609c   0032     dw	0x32  ;unknown opcode 
00609e   4b40     infsnz	0x40, 0x1, 0x1    
0060a0   004c     dw	0x4c  ;unknown opcode     data 0x004C, 0x0000, 0x0000, 0x0000 ; 60A0
0060a2   0000     nop                      
0060a4   0000     nop                      
0060a6   0000     nop                      
0060a8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 60A8
0060aa   0000     nop                      
0060ac   0000     nop                      
0060ae   0000     nop                      
0060b0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 60B0
0060b2   0000     nop                      
0060b4   0000     nop                      
0060b6   0000     nop                      
0060b8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 60B8
0060ba   0000     nop                      
0060bc   0000     nop                      
0060be   0000     nop                      
0060c0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 60C0
0060c2   0000     nop                      
0060c4   0000     nop                      
0060c6   0000     nop                      
0060c8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 60C8
0060ca   0000     nop                      
0060cc   0000     nop                      
0060ce   0000     nop                      
0060d0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 60D0
0060d2   0000     nop                      
0060d4   0000     nop                      
0060d6   0000     nop                      
0060d8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 60D8
0060da   0000     nop                      
0060dc   0000     nop                      
0060de   0000     nop                      
0060e0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 60E0
0060e2   0000     nop                      
0060e4   0000     nop                      
0060e6   0000     nop                      
0060e8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 60E8
0060ea   0000     nop                      
0060ec   0000     nop                      
0060ee   0000     nop                      
0060f0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 60F0
0060f2   0000     nop                      
0060f4   0000     nop                      
0060f6   0000     nop                      
0060f8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 60F8
0060fa   0000     nop                      
0060fc   0000     nop                      
0060fe   0000     nop                      
006100   ebcd     dw	0xebcd  ;unknown opcode     data 0xEBCD, 0xF380, 0xF376, 0xA532 ; 6100
006102   f380     dw	0xf380  ;unknown opcode 
006104   f376     dw	0xf376  ;unknown opcode 
006106   a532     btfss	0x32, 0x2, 0x1     
006108   d300     bra	0x670a                   data 0xD300, 0xFB06, 0xF3C9, 0x2FC5 ; 6108
00610a   fb06     dw	0xfb06  ;unknown opcode 
00610c   f3c9     dw	0xf3c9  ;unknown opcode 
00610e   2fc5     decfsz	0xc5, 0x1, 0x1    
006110   3a47     swapf	0x47, 0x1, 0           data 0x3A47, 0x00A5, 0x32A0, 0x00A5 ; 6110
006112   00a5     dw	0xa5  ;unknown opcode 
006114   32a0     rrcf	0xa0, 0x1, 0        
006116   00a5     dw	0xa5  ;unknown opcode 
006118   06d3     decf	0xd3, 0x1, 0            data 0x06D3, 0xFBC1, 0xF3C9, 0x47C5 ; 6118
00611a   fbc1     dw	0xfbc1  ;unknown opcode 
00611c   f3c9     dw	0xf3c9  ;unknown opcode 
00611e   47c5     rlncf	0xc5, 0x1, 0x1     
006120   a53a     btfss	0x3a, 0x2, 0x1         data 0xA53A, 0xB000, 0xA532, 0xD300 ; 6120
006122   b000     btfsc	0, 0, 0            
006124   a532     btfss	0x32, 0x2, 0x1     
006126   d300     bra	0x6728               
006128   c106     movff	0x106, 0x9fb           data 0xC106, 0xC9FB, 0x3EF5, 0xCD0B ; 6128
00612a   c9fb
00612c   3ef5     incfsz	0xf5, 0x1, 0      
00612e   cd0b     movff	0xd0b, 0x69        
006130   8069
006130   8069     bsf	0x69, 0, 0               data 0x8069, 0xCD78, 0x8069, 0xCDF1 ; 6130
006132   cd78     movff	0xd78, 0x69        
006134   8069
006136   cdf1     movff	0xdf1, 0x69        
006138   8069
006138   8069     bsf	0x69, 0, 0               data 0x8069, 0x3EC9, 0xCD0A, 0x8069 ; 6138
00613a   3ec9     incfsz	0xc9, 0x1, 0      
00613c   cd0a     movff	0xd0a, 0x69        
00613e   8069
006140   cd78     movff	0xd78, 0x69            data 0xCD78, 0x8069, 0x48CD, 0xC980 ; 6140
006142   8069
006144   48cd     infsnz	0xcd, 0, 0        
006146   c980     movff	0x980, 0xac5       
006148   3ac5
006148   3ac5     swapf	0xc5, 0x1, 0           data 0x3AC5, 0x8372, 0x02C6, 0x3A47 ; 6148
00614a   8372     bsf	0x72, 0x1, 0x1       
00614c   02c6     mulwf	0xc6, 0            
00614e   3a47     swapf	0x47, 0x1, 0       
006150   8372     bsf	0x72, 0x1, 0x1           data 0x8372, 0x28A8, 0xDB0A, 0xCB08 ; 6150
006152   28a8     incf	0xa8, 0, 0          
006154   db0a     rcall	0x676a             
006156   cb08     movff	0xb08, 0x4f        
006158   204f
006158   204f     addwfc	0x4f, 0, 0            data 0x204F, 0xC1F4, 0x02DB, 0xE5C9 ; 6158
00615a   c1f4     movff	0x1f4, 0x2db       
00615c   02db
00615e   e5c9     bnov	0x60f2              
006160   a221     btfss	0x21, 0x1, 0           data 0xA221, 0xCD99, 0x80EB, 0xC1E1 ; 6160
006162   cd99     movff	0xd99, 0xeb        
006164   80eb
006166   c1e1     movff	0x1e1, 0x5c9       
006168   f5c9
006168   f5c9     dw	0xf5c9  ;unknown opcode     data 0xF5C9, 0x08DB, 0x47CB, 0xFA20 ; 6168
00616a   08db     sublw	0xdb               
00616c   47cb     rlncf	0xcb, 0x1, 0x1     
00616e   fa20     dw	0xfa20  ;unknown opcode 
006170   d3f1     bra	0x6954                   data 0xD3F1, 0xC902, 0x3F3E, 0x69CD ; 6170
006172   c902     movff	0x902, 0xf3e       
006174   3f3e
006176   69cd     setf	0xcd, 0x1           
006178   f380     dw	0xf380  ;unknown opcode     data 0xF380, 0x0676, 0x0EFF, 0x16FF ; 6178
00617a   0676     decf	0x76, 0x1, 0        
00617c   0eff     movlw	0xff               
00617e   16ff     andwf	0xff, 0x1, 0       
006180   3a20     swapf	0x20, 0x1, 0           data 0x3A20, 0x999D, 0x01EE, 0x01D3 ; 6180
006182   999d     bcf	0x9d, 0x4, 0x1       
006184   01ee     movlb	0xee               
006186   01d3     movlb	0xd3               
006188   9d32     bcf	0x32, 0x6, 0x1           data 0x9D32, 0x1099, 0x0DFE, 0xFB20 ; 6188
00618a   1099     iorwf	0x99, 0, 0         
00618c   0dfe     mullw	0xfe               
00618e   fb20     dw	0xfb20  ;unknown opcode 
006190   2015     addwfc	0x15, 0, 0            data 0x2015, 0xC3F8, 0x807B, 0x003E ; 6190
006192   c3f8     movff	0x3f8, 0x7b        
006194   807b
006196   003e     dw	0x3e  ;unknown opcode 
006198   04d3     decf	0xd3, 0, 0              data 0x04D3, 0x3EC9, 0xD310, 0xC904 ; 6198
00619a   3ec9     incfsz	0xc9, 0x1, 0      
00619c   d310     bra	0x67be               
00619e   c904     movff	0x904, 0x7e6       
0061a0   07e6
0061a0   07e6     decf	0xe6, 0x1, 0x1          data 0x07E6, 0x20C6, 0x08F6, 0x04D3 ; 61A0
0061a2   20c6     addwfc	0xc6, 0, 0        
0061a4   08f6     sublw	0xf6               
0061a6   04d3     decf	0xd3, 0, 0          
0061a8   3ec9     incfsz	0xc9, 0x1, 0          data 0x3EC9, 0xD320, 0xDB04, 0xC904 ; 61A8
0061aa   d320     bra	0x67ec               
0061ac   db04     rcall	0x67b6             
0061ae   c904     movff	0x904, 0xef5       
0061b0   3ef5
0061b0   3ef5     incfsz	0xf5, 0x1, 0          data 0x3EF5, 0xF630, 0xD308, 0xF104 ; 61B0
0061b2   f630     dw	0xf630  ;unknown opcode 
0061b4   d308     bra	0x67c6               
0061b6   f104     dw	0xf104  ;unknown opcode 
0061b8   04d3     decf	0xd3, 0, 0              data 0x04D3, 0x3EC9, 0xD330, 0xDB04 ; 61B8
0061ba   3ec9     incfsz	0xc9, 0x1, 0      
0061bc   d330     bra	0x681e               
0061be   db04     rcall	0x67c8             
0061c0   c904     movff	0x904, 0xef5           data 0xC904, 0x3EF5, 0xF640, 0xD308 ; 61C0
0061c2   3ef5
0061c4   f640     dw	0xf640  ;unknown opcode 
0061c6   d308     bra	0x67d8               
0061c8   f104     dw	0xf104  ;unknown opcode     data 0xF104, 0x04D3, 0x3EC9, 0xD340 ; 61C8
0061ca   04d3     decf	0xd3, 0, 0          
0061cc   3ec9     incfsz	0xc9, 0x1, 0      
0061ce   d340     bra	0x6850               
0061d0   db04     rcall	0x67da                 data 0xDB04, 0xC904, 0x07E6, 0x60C6 ; 61D0
0061d2   c904     movff	0x904, 0x7e6       
0061d4   07e6
0061d6   60c6     cpfslt	0xc6, 0           
0061d8   04d3     decf	0xd3, 0, 0              data 0x04D3, 0xE6C9, 0xC607, 0xD350 ; 61D8
0061da   e6c9     bn	0x616e                
0061dc   c607     movff	0x607, 0x350       
0061de   d350
0061e0   c904     movff	0x904, 0x3e6           data 0xC904, 0x03E6, 0x50C6, 0x08F6 ; 61E0
0061e2   03e6
0061e4   50c6     movf	0xc6, 0, 0          
0061e6   08f6     sublw	0xf6               
0061e8   04d3     decf	0xd3, 0, 0              data 0x04D3, 0x7EC9, 0x00EE, 0xD3C8 ; 61E8
0061ea   7ec9     btg	0xc9, 0x7, 0         
0061ec   00ee     dw	0xee  ;unknown opcode 
0061ee   d3c8     bra	0x6980               
0061f0   2305     addwfc	0x5, 0x1, 0x1         data 0x2305, 0xEBC3, 0xEE80, 0x2000 ; 61F0
0061f2   ebc3     dw	0xebc3  ;unknown opcode 
0061f4   ee80     dw	0xee80  ;unknown opcode 
0061f6   2000     addwfc	0, 0, 0           
0061f8   3e02     incfsz	0x2, 0x1, 0           data 0x3E02, 0x3D04, 0x03E6, 0xCD3C ; 61F8
0061fa   3d04     incfsz	0x4, 0, 0x1       
0061fc   03e6     mulwf	0xe6, 0x1          
0061fe   cd3c     movff	0xd3c, 0x5fc       
006200   85fc
006200   85fc     bsf	0xfc, 0x2, 0x1           data 0x85FC, 0x9821, 0x7886, 0x0ACD ; 6200
006202   9821     bcf	0x21, 0x4, 0         
006204   7886     btg	0x86, 0x4, 0         
006206   0acd     xorlw	0xcd               
006208   c981     movff	0x981, 0x5c5           data 0xC981, 0xD5C5, 0x47E5, 0xFEE6 ; 6208
00620a   d5c5
00620c   47e5     rlncf	0xe5, 0x1, 0x1     
00620e   fee6     dw	0xfee6  ;unknown opcode 
006210   cb0f     movff	0xb0f, 0x40            data 0xCB0F, 0x2040, 0x3D01, 0x3085 ; 6210
006212   2040
006214   3d01     incfsz	0x1, 0, 0x1       
006216   3085     rrcf	0x85, 0, 0          
006218   2401     addwf	0x1, 0, 0              data 0x2401, 0x7E6F, 0x40CB, 0x0328 ; 6218
00621a   7e6f     btg	0x6f, 0x7, 0         
00621c   40cb     rrncf	0xcb, 0, 0         
00621e   0328     mulwf	0x28, 0x1          
006220   182b     xorwf	0x2b, 0, 0             data 0x182B, 0x0F04, 0x0F0F, 0x110F ; 6220
006222   0f04     addlw	0x4                
006224   0f0f     addlw	0xf                
006226   110f     iorwf	0xf, 0, 0x1        
006228   813a     bsf	0x3a, 0, 0x1             data 0x813A, 0x0FE6, 0x3083, 0x1401 ; 6228
00622a   0fe6     addlw	0xe6               
00622c   3083     rrcf	0x83, 0, 0          
00622e   1401     andwf	0x1, 0, 0          
006230   1a5f     xorwf	0x5f, 0x1, 0           data 0x1A5F, 0x05D3, 0xE510, 0xD1E1 ; 6230
006232   05d3     decf	0xd3, 0, 0x1        
006234   e510     bnov	0x6256              
006236   d1e1     bra	0x65fa               
006238   c9c1     movff	0x9c1, 0x130           data 0xC9C1, 0x3130, 0x3332, 0x3534 ; 6238
00623a   3130
00623c   3332     rrcf	0x32, 0x1, 0x1      
00623e   3534     rlcf	0x34, 0, 0x1        
006240   3736     rlcf	0x36, 0x1, 0x1          data 0x3736, 0x3938, 0x4241, 0x4443 ; 6240
006242   3938     swapf	0x38, 0, 0x1       
006244   4241     rrncf	0x41, 0x1, 0       
006246   4443     rlncf	0x43, 0, 0         
006248   4645     rlncf	0x45, 0x1, 0           data 0x4645, 0x0000, 0x0000, 0x0000 ; 6248
00624a   0000     nop                      
00624c   0000     nop                      
00624e   0000     nop                      
006250   0000     nop                          data 0x0000, 0x0000, 0x803E, 0x01D3 ; 6250
006252   0000     nop                      
006254   803e     bsf	0x3e, 0, 0           
006256   01d3     movlb	0xd3               
006258   003e     dw	0x3e  ;unknown opcode     data 0x003E, 0x01D3, 0x3C06, 0xFE10 ; 6258
00625a   01d3     movlb	0xd3               
00625c   3c06     incfsz	0x6, 0, 0         
00625e   fe10     dw	0xfe10  ;unknown opcode 
006260   c5c9     movff	0x5c9, 0xb47           data 0xC5C9, 0xDB47, 0xE601, 0x2810 ; 6260
006262   db47
006264   e601     bn	0x6268                
006266   2810     incf	0x10, 0, 0          
006268   78fa     btg	0xfa, 0x4, 0             data 0x78FA, 0x00D3, 0x3EC9, 0xD307 ; 6268
00626a   00d3     dw	0xd3  ;unknown opcode 
00626c   3ec9     incfsz	0xc9, 0x1, 0      
00626e   d307     bra	0x687e               
006270   3e1e     incfsz	0x1e, 0x1, 0          data 0x3E1E, 0xD3C0, 0xD311, 0xD313 ; 6270
006272   d3c0     bra	0x69f4               
006274   d311     bra	0x6898               
006276   d313     bra	0x689e               
006278   d315     bra	0x68a4                   data 0xD315, 0x3E17, 0xD308, 0xC91C ; 6278
00627a   3e17     incfsz	0x17, 0x1, 0      
00627c   d308     bra	0x688e               
00627e   c91c     movff	0x91c, 0xddb       
006280   1ddb
006280   1ddb     comf	0xdb, 0, 0x1            data 0x1DDB, 0x5FCB, 0xCDC8, 0x8190 ; 6280
006282   5fcb     subwf	0xcb, 0x1, 0x1     
006284   cdc8     movff	0xdc8, 0x190       
006286   8190
006288   723a     btg	0x3a, 0x1, 0             data 0x723A, 0x3C83, 0x7232, 0xC983 ; 6288
00628a   3c83     incfsz	0x83, 0, 0        
00628c   7232     btg	0x32, 0x1, 0         
00628e   c983     movff	0x983, 0xedb       
006290   1edb
006290   1edb     comf	0xdb, 0x1, 0            data 0x1EDB, 0xDFCB, 0x1ED3, 0x10DB ; 6290
006292   dfcb     rcall	0x622a             
006294   1ed3     comf	0xd3, 0x1, 0        
006296   10db     iorwf	0xdb, 0, 0         
006298   6a32     clrf	0x32, 0                 data 0x6A32, 0xDB83, 0x3212, 0x836B ; 6298
00629a   db83     rcall	0x69a2             
00629c   3212     rrcf	0x12, 0x1, 0        
00629e   836b     bsf	0x6b, 0x1, 0x1       
0062a0   14db     andwf	0xdb, 0, 0             data 0x14DB, 0x7FE6, 0x6C32, 0xDB83 ; 62A0
0062a2   7fe6     btg	0xe6, 0x7, 0x1       
0062a4   6c32     negf	0x32, 0             
0062a6   db83     rcall	0x69ae             
0062a8   3216     rrcf	0x16, 0x1, 0            data 0x3216, 0x836D, 0x19DB, 0x6E32 ; 62A8
0062aa   836d     bsf	0x6d, 0x1, 0x1       
0062ac   19db     xorwf	0xdb, 0, 0x1       
0062ae   6e32     movwf	0x32, 0            
0062b0   db83     rcall	0x69b8                 data 0xDB83, 0x321A, 0x836F, 0x203E ; 62B0
0062b2   321a     rrcf	0x1a, 0x1, 0        
0062b4   836f     bsf	0x6f, 0x1, 0x1       
0062b6   203e     addwfc	0x3e, 0, 0        
0062b8   7032     btg	0x32, 0, 0               data 0x7032, 0xDB83, 0x3218, 0x8371 ; 62B8
0062ba   db83     rcall	0x69c2             
0062bc   3218     rrcf	0x18, 0x1, 0        
0062be   8371     bsf	0x71, 0x1, 0x1       
0062c0   1edb     comf	0xdb, 0x1, 0            data 0x1EDB, 0x9FCB, 0x1ED3, 0xDBC9 ; 62C0
0062c2   9fcb     bcf	0xcb, 0x7, 0x1       
0062c4   1ed3     comf	0xd3, 0x1, 0        
0062c6   dbc9     rcall	0x6a5a             
0062c8   cb1e     movff	0xb1e, 0x3df           data 0xCB1E, 0xD3DF, 0xC91E, 0x1EDB ; 62C8
0062ca   d3df
0062cc   c91e     movff	0x91e, 0xedb       
0062ce   1edb
0062d0   9fcb     bcf	0xcb, 0x7, 0x1           data 0x9FCB, 0x1ED3, 0xCDC9, 0x81C7 ; 62D0
0062d2   1ed3     comf	0xd3, 0x1, 0        
0062d4   cdc9     movff	0xdc9, 0x1c7       
0062d6   81c7
0062d8   1adb     xorwf	0xdb, 0x1, 0           data 0x1ADB, 0x273C, 0x1AD3, 0xCECD ; 62D8
0062da   273c     addwf	0x3c, 0x1, 0x1     
0062dc   1ad3     xorwf	0xd3, 0x1, 0       
0062de   cecd     movff	0xecd, 0xd81       
0062e0   cd81
0062e0   cd81     movff	0xd81, 0x190           data 0xCD81, 0x8190, 0xC7CD, 0x3A81 ; 62E0
0062e2   8190
0062e4   c7cd     movff	0x7cd, 0xa81       
0062e6   3a81
0062e8   836d     bsf	0x6d, 0x1, 0x1           data 0x836D, 0x5618, 0xC7CD, 0xDB81 ; 62E8
0062ea   5618     subfwb	0x18, 0x1, 0      
0062ec   c7cd     movff	0x7cd, 0xb81       
0062ee   db81
0062f0   3d1a     incfsz	0x1a, 0, 0x1          data 0x3D1A, 0xD327, 0xCD1A, 0x81CE ; 62F0
0062f2   d327     bra	0x6942               
0062f4   cd1a     movff	0xd1a, 0x1ce       
0062f6   81ce
0062f8   90cd     bcf	0xcd, 0, 0               data 0x90CD, 0xCD81, 0x81C7, 0x6D3A ; 62F8
0062fa   cd81     movff	0xd81, 0x1c7       
0062fc   81c7
0062fe   6d3a     negf	0x3a, 0x1           
006300   1883     xorwf	0x83, 0, 0             data 0x1883, 0xCD3F, 0x81C7, 0x19DB ; 6300
006302   cd3f     movff	0xd3f, 0x1c7       
006304   81c7
006306   19db     xorwf	0xdb, 0, 0x1       
006308   273c     addwf	0x3c, 0x1, 0x1         data 0x273C, 0x0718, 0xC7CD, 0xDB81 ; 6308
00630a   0718     decf	0x18, 0x1, 0x1      
00630c   c7cd     movff	0x7cd, 0xb81       
00630e   db81
006310   3d19     incfsz	0x19, 0, 0x1          data 0x3D19, 0x2827, 0x470A, 0x13D6 ; 6310
006312   2827     incf	0x27, 0, 0          
006314   470a     rlncf	0xa, 0x1, 0x1      
006316   13d6     iorwf	0xd6, 0x1, 0x1     
006318   21fa     addwfc	0xfa, 0, 0x1          data 0x21FA, 0x0682, 0x1801, 0x0602 ; 6318
00631a   0682     decf	0x82, 0x1, 0        
00631c   1801     xorwf	0x1, 0, 0          
00631e   0602     decf	0x2, 0x1, 0         
006320   7812     btg	0x12, 0x4, 0             data 0x7812, 0x19D3, 0xCECD, 0xCD81 ; 6320
006322   19d3     xorwf	0xd3, 0, 0x1       
006324   cecd     movff	0xecd, 0xd81       
006326   cd81
006328   8190     bsf	0x90, 0, 0x1             data 0x8190, 0xC7CD, 0x3A81, 0x836D ; 6328
00632a   c7cd     movff	0x7cd, 0xa81       
00632c   3a81
00632e   836d     bsf	0x6d, 0x1, 0x1       
006330   1018     iorwf	0x18, 0, 0             data 0x1018, 0xC7CD, 0xDB81, 0x3C16 ; 6330
006332   c7cd     movff	0x7cd, 0xb81       
006334   db81
006336   3c16     incfsz	0x16, 0, 0        
006338   1827     xorwf	0x27, 0, 0             data 0x1827, 0xCD07, 0x81C7, 0x16DB ; 6338
00633a   cd07     movff	0xd07, 0x1c7       
00633c   81c7
00633e   16db     andwf	0xdb, 0x1, 0       
006340   273d     addwf	0x3d, 0x1, 0x1         data 0x273D, 0xDB47, 0xEE19, 0x2802 ; 6340
006342   db47     rcall	0x69d2             
006344   ee19     lfsr	0x1, 0x902          
006346   2802
006348   ee27     lfsr	0x2, 0x702              data 0xEE27, 0x3D02, 0x9621, 0x8583 ; 6348
00634a   3d02
00634c   9621     bcf	0x21, 0x3, 0         
00634e   8583     bsf	0x83, 0x2, 0x1       
006350   0130     movlb	0x30                   data 0x0130, 0x6F24, 0xEE78, 0x2800 ; 6350
006352   6f24     movwf	0x24, 0x1          
006354   ee78     dw	0xee78  ;unknown opcode 
006356   2800     incf	0, 0, 0             
006358   3d09     incfsz	0x9, 0, 0x1           data 0x3D09, 0xFA96, 0x8263, 0x0106 ; 6358
00635a   fa96     dw	0xfa96  ;unknown opcode 
00635c   8263     bsf	0x63, 0x1, 0         
00635e   0106     movlb	0x6                
006360   0118     movlb	0x18                   data 0x0118, 0x7846, 0x16D3, 0xCECD ; 6360
006362   7846     btg	0x46, 0x4, 0         
006364   16d3     andwf	0xd3, 0x1, 0       
006366   cecd     movff	0xecd, 0xd81       
006368   cd81
006368   cd81     movff	0xd81, 0x190           data 0xCD81, 0x8190, 0x00CD, 0xC983 ; 6368
00636a   8190
00636c   00cd     dw	0xcd  ;unknown opcode 
00636e   c983     movff	0x983, 0xf3a       
006370   6f3a
006370   6f3a     movwf	0x3a, 0x1              data 0x6F3A, 0xCD83, 0x83AF, 0x9721 ; 6370
006372   cd83     movff	0xd83, 0x3af       
006374   83af
006376   9721     bcf	0x21, 0x3, 0x1       
006378   e683     bn	0x6280                    data 0xE683, 0x2003, 0x21D7, 0x83A2 ; 6378
00637a   2003     addwfc	0x3, 0, 0         
00637c   21d7     addwfc	0xd7, 0, 0x1      
00637e   83a2     bsf	0xa2, 0x1, 0x1       
006380   d218     bra	0x67b2                   data 0xD218, 0xC7CD, 0xDB81, 0x3C14 ; 6380
006382   c7cd     movff	0x7cd, 0xb81       
006384   db81
006386   3c14     incfsz	0x14, 0, 0        
006388   1827     xorwf	0x27, 0, 0             data 0x1827, 0xCD0F, 0x81C7, 0x14DB ; 6388
00638a   cd0f     movff	0xd0f, 0x1c7       
00638c   81c7
00638e   14db     andwf	0xdb, 0, 0         
006390   00ee     dw	0xee  ;unknown opcode     data 0x00EE, 0x0428, 0x273D, 0x0218 ; 6390
006392   0428     decf	0x28, 0, 0          
006394   273d     addwf	0x3d, 0x1, 0x1     
006396   0218     mulwf	0x18, 0            
006398   233e     addwfc	0x3e, 0x1, 0x1        data 0x233E, 0xD647, 0xFA24, 0x82A2 ; 6398
00639a   d647     bra	0x602a               
00639c   fa24     dw	0xfa24  ;unknown opcode 
00639e   82a2     bsf	0xa2, 0x1, 0         
0063a0   0006     pop                          data 0x0006, 0xD378, 0xCD14, 0x81CE ; 63A0
0063a2   d378     bra	0x6a94               
0063a4   cd14     movff	0xd14, 0x1ce       
0063a6   81ce
0063a8   90cd     bcf	0xcd, 0, 0               data 0x90CD, 0xC981, 0xC7CD, 0xDB81 ; 63A8
0063aa   c981     movff	0x981, 0x7cd       
0063ac   c7cd
0063ae   db81     rcall	0x6ab2             
0063b0   3c12     incfsz	0x12, 0, 0            data 0x3C12, 0x1827, 0xCD0F, 0x81C7 ; 63B0
0063b2   1827     xorwf	0x27, 0, 0         
0063b4   cd0f     movff	0xd0f, 0x1c7       
0063b6   81c7
0063b8   12db     iorwf	0xdb, 0x1, 0           data 0x12DB, 0x00EE, 0x0428, 0x273D ; 63B8
0063ba   00ee     dw	0xee  ;unknown opcode 
0063bc   0428     decf	0x28, 0, 0          
0063be   273d     addwf	0x3d, 0x1, 0x1     
0063c0   0218     mulwf	0x18, 0                data 0x0218, 0x593E, 0xD647, 0xFA60 ; 63C0
0063c2   593e     subwfb	0x3e, 0, 0x1      
0063c4   d647     bra	0x6054               
0063c6   fa60     dw	0xfa60  ;unknown opcode 
0063c8   82cc     bsf	0xcc, 0x1, 0             data 0x82CC, 0x0006, 0xD378, 0xCD12 ; 63C8
0063ca   0006     pop                      
0063cc   d378     bra	0x6abe               
0063ce   cd12     movff	0xd12, 0x1ce       
0063d0   81ce
0063d0   81ce     bsf	0xce, 0, 0x1             data 0x81CE, 0x90CD, 0xC981, 0xC7CD ; 63D0
0063d2   90cd     bcf	0xcd, 0, 0           
0063d4   c981     movff	0x981, 0x7cd       
0063d6   c7cd
0063d8   db81     rcall	0x6adc                 data 0xDB81, 0x3C10, 0x1827, 0xCD0F ; 63D8
0063da   3c10     incfsz	0x10, 0, 0        
0063dc   1827     xorwf	0x27, 0, 0         
0063de   cd0f     movff	0xd0f, 0x1c7       
0063e0   81c7
0063e0   81c7     bsf	0xc7, 0, 0x1             data 0x81C7, 0x10DB, 0x00EE, 0x0428 ; 63E0
0063e2   10db     iorwf	0xdb, 0, 0         
0063e4   00ee     dw	0xee  ;unknown opcode 
0063e6   0428     decf	0x28, 0, 0          
0063e8   273d     addwf	0x3d, 0x1, 0x1         data 0x273D, 0x0218, 0x593E, 0xD647 ; 63E8
0063ea   0218     mulwf	0x18, 0            
0063ec   593e     subwfb	0x3e, 0, 0x1      
0063ee   d647     bra	0x607e               
0063f0   fa60     dw	0xfa60  ;unknown opcode     data 0xFA60, 0x82F6, 0x0006, 0xD378 ; 63F0
0063f2   82f6     bsf	0xf6, 0x1, 0         
0063f4   0006     pop                      
0063f6   d378     bra	0x6ae8               
0063f8   cd10     movff	0xd10, 0x1ce           data 0xCD10, 0x81CE, 0x90CD, 0xC981 ; 63F8
0063fa   81ce
0063fc   90cd     bcf	0xcd, 0, 0           
0063fe   c981     movff	0x981, 0x7cd       
006400   c7cd
006400   c7cd     movff	0x7cd, 0x681           data 0xC7CD, 0x0681, 0x3A06, 0x836F ; 6400
006402   0681
006404   3a06     swapf	0x6, 0x1, 0        
006406   836f     bsf	0x6f, 0x1, 0x1       
006408   afcd     btfss	0xcd, 0x7, 0x1         data 0xAFCD, 0x8083, 0x3A47, 0x836F ; 6408
00640a   8083     bsf	0x83, 0, 0           
00640c   3a47     swapf	0x47, 0x1, 0       
00640e   836f     bsf	0x6f, 0x1, 0x1       
006410   afcd     btfss	0xcd, 0x7, 0x1         data 0xAFCD, 0xE683, 0x0FFC, 0x800F ; 6410
006412   e683     bn	0x631a                
006414   0ffc     addlw	0xfc               
006416   800f     bsf	0xf, 0, 0            
006418   2147     addwfc	0x47, 0, 0x1          data 0x2147, 0x83A3, 0x6E3A, 0x3D83 ; 6418
00641a   83a3     bsf	0xa3, 0x1, 0x1       
00641c   6e3a     movwf	0x3a, 0            
00641e   3d83     incfsz	0x83, 0, 0x1      
006420   3085     rrcf	0x85, 0, 0              data 0x3085, 0x2401, 0x7E6F, 0x4780 ; 6420
006422   2401     addwf	0x1, 0, 0          
006424   7e6f     btg	0x6f, 0x7, 0         
006426   4780     rlncf	0x80, 0x1, 0x1     
006428   6d3a     negf	0x3a, 0x1               data 0x6D3A, 0xCD83, 0x83AF, 0x4780 ; 6428
00642a   cd83     movff	0xd83, 0x3af       
00642c   83af
00642e   4780     rlncf	0x80, 0x1, 0x1     
006430   6e3a     movwf	0x3a, 0                data 0x6E3A, 0xD683, 0xF203, 0x8343 ; 6430
006432   d683     bra	0x613a               
006434   f203     dw	0xf203  ;unknown opcode 
006436   8343     bsf	0x43, 0x1, 0x1       
006438   6f3a     movwf	0x3a, 0x1              data 0x6F3A, 0xCD83, 0x83AF, 0x03E6 ; 6438
00643a   cd83     movff	0xd83, 0x3af       
00643c   83af
00643e   03e6     mulwf	0xe6, 0x1          
006440   0120     movlb	0x20                   data 0x0120, 0x7805, 0x0706, 0xC1CD ; 6440
006442   7805     btg	0x5, 0x4, 0          
006444   0706     decf	0x6, 0x1, 0x1       
006446   c1cd     movff	0x1cd, 0xc83       
006448   3c83
006448   3c83     incfsz	0x83, 0, 0            data 0x3C83, 0x18D3, 0xCECD, 0xCD81 ; 6448
00644a   18d3     xorwf	0xd3, 0, 0         
00644c   cecd     movff	0xecd, 0xd81       
00644e   cd81
006450   8190     bsf	0x90, 0, 0x1             data 0x8190, 0xEEC9, 0x2000, 0x3A03 ; 6450
006452   eec9     dw	0xeec9  ;unknown opcode 
006454   2000     addwfc	0, 0, 0           
006456   3a03     swapf	0x3, 0x1, 0        
006458   8371     bsf	0x71, 0x1, 0x1           data 0x8371, 0x07E6, 0xCB3D, 0xCB27 ; 6458
00645a   07e6     decf	0xe6, 0x1, 0x1      
00645c   cb3d     movff	0xb3d, 0xb27       
00645e   cb27
006460   2127     addwfc	0x27, 0, 0x1          data 0x2127, 0x837A, 0x3085, 0x2401 ; 6460
006462   837a     bsf	0x7a, 0x1, 0x1       
006464   3085     rrcf	0x85, 0, 0          
006466   2401     addwf	0x1, 0, 0          
006468   c96f     movff	0x96f, 0               data 0xC96F, 0x0000, 0x0000, 0x0000 ; 6468
00646a   0000
00646c   0000     nop                      
00646e   0000     nop                      
006470   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6470
006472   0000     nop                      
006474   0000     nop                      
006476   0000     nop                      
006478   0000     nop                          data 0x0000, 0x7553, 0x006E, 0x6F4D ; 6478
00647a   7553     btg	0x53, 0x2, 0x1       
00647c   006e     dw	0x6e  ;unknown opcode 
00647e   6f4d     movwf	0x4d, 0x1          
006480   006e     dw	0x6e  ;unknown opcode     data 0x006E, 0x7554, 0x0065, 0x6557 ; 6480
006482   7554     btg	0x54, 0x2, 0x1       
006484   0065     dw	0x65  ;unknown opcode 
006486   6557     cpfsgt	0x57, 0x1         
006488   0064     dw	0x64  ;unknown opcode     data 0x0064, 0x6854, 0x0075, 0x7246 ; 6488
00648a   6854     setf	0x54, 0             
00648c   0075     dw	0x75  ;unknown opcode 
00648e   7246     btg	0x46, 0x1, 0         
006490   0069     dw	0x69  ;unknown opcode     data 0x0069, 0x6153, 0x0074, 0x2831 ; 6490
006492   6153     cpfslt	0x53, 0x1         
006494   0074     dw	0x74  ;unknown opcode 
006496   2831     incf	0x31, 0, 0          
006498   3031     rrcf	0x31, 0, 0              data 0x3031, 0x3031, 0x3131, 0x3130 ; 6498
00649a   3031     rrcf	0x31, 0, 0          
00649c   3131     rrcf	0x31, 0, 0x1        
00649e   3130     rrcf	0x30, 0, 0x1        
0064a0   3130     rrcf	0x30, 0, 0x1            data 0x3130, 0x0029, 0x0303, 0x0106 ; 64A0
0064a2   0029     dw	0x29  ;unknown opcode 
0064a4   0303     mulwf	0x3, 0x1           
0064a6   0106     movlb	0x6                
0064a8   0604     decf	0x4, 0x1, 0             data 0x0604, 0x0502, 0x0300, 0xC505 ; 64A8
0064aa   0502     decf	0x2, 0, 0x1         
0064ac   0300     mulwf	0, 0x1             
0064ae   c505     movff	0x505, 0x64f       
0064b0   e64f
0064b0   e64f     bn	0x6550                    data 0xE64F, 0x0FF0, 0x0F47, 0x0F0F ; 64B0
0064b2   0ff0     addlw	0xf0               
0064b4   0f47     addlw	0x47               
0064b6   0f0f     addlw	0xf                
0064b8   8087     bsf	0x87, 0, 0               data 0x8087, 0x7947, 0x0FE6, 0xC180 ; 64B8
0064ba   7947     btg	0x47, 0x4, 0x1       
0064bc   0fe6     addlw	0xe6               
0064be   c180     movff	0x180, 0x5c9       
0064c0   d5c9
0064c0   d5c9     bra	0x6054                   data 0xD5C9, 0x60E5, 0x784F, 0x00EE ; 64C0
0064c2   60e5     cpfslt	0xe5, 0           
0064c4   784f     btg	0x4f, 0x4, 0         
0064c6   00ee     dw	0xee  ;unknown opcode 
0064c8   16c8     andwf	0xc8, 0x1, 0           data 0x16C8, 0x1E01, 0x1400, 0x20CB ; 64C8
0064ca   1e01     comf	0x1, 0x1, 0         
0064cc   1400     andwf	0, 0, 0            
0064ce   20cb     addwfc	0xcb, 0, 0        
0064d0   fb30     dw	0xfb30  ;unknown opcode     data 0xFB30, 0x0F78, 0x80F6, 0x7947 ; 64D0
0064d2   0f78     addlw	0x78               
0064d4   80f6     bsf	0xf6, 0, 0           
0064d6   7947     btg	0x47, 0x4, 0x1       
0064d8   3890     swapf	0x90, 0, 0             data 0x3890, 0x2806, 0x4F11, 0x837A ; 64D8
0064da   2806     incf	0x6, 0, 0           
0064dc   4f11     dcfsnz	0x11, 0x1, 0x1    
0064de   837a     bsf	0x7a, 0x1, 0x1       
0064e0   155f     andwf	0x5f, 0, 0x1           data 0x155F, 0xEE7A, 0x2801, 0xCB05 ; 64E0
0064e2   ee7a     dw	0xee7a  ;unknown opcode 
0064e4   2801     incf	0x1, 0, 0           
0064e6   cb05     movff	0xb05, 0x908       
0064e8   7908
0064e8   7908     btg	0x8, 0x4, 0x1            data 0x7908, 0xEC18, 0x1D79, 0x444B ; 64E8
0064ea   ec18     call	0x1af230, 0         
0064ec   1d79
0064ee   444b     rlncf	0x4b, 0, 0         
0064f0   d1e1     bra	0x68b4                   data 0xD1E1, 0xF5C9, 0x013E, 0xFBCD ; 64F0
0064f2   f5c9     dw	0xf5c9  ;unknown opcode 
0064f4   013e     movlb	0x3e               
0064f6   fbcd     dw	0xfbcd  ;unknown opcode 
0064f8   f183     dw	0xf183  ;unknown opcode     data 0xF183, 0xC5C9, 0x4FE5, 0x0406 ; 64F8
0064fa   c5c9     movff	0x5c9, 0xfe5       
0064fc   4fe5
0064fe   0406     decf	0x6, 0, 0           
006500   9321     bcf	0x21, 0x1, 0x1           data 0x9321, 0x3786, 0x7ECB, 0x0120 ; 6500
006502   3786     rlcf	0x86, 0x1, 0x1      
006504   7ecb     btg	0xcb, 0x7, 0         
006506   0120     movlb	0x20               
006508   7e3f     btg	0x3f, 0x7, 0             data 0x7E3F, 0x771F, 0x102B, 0x0DFA ; 6508
00650a   771f     btg	0x1f, 0x3, 0x1       
00650c   102b     iorwf	0x2b, 0, 0         
00650e   0dfa     mullw	0xfa               
006510   ec20     call	0x3c240, 0              data 0xEC20, 0xC1E1, 0xF5C9, 0x013E ; 6510
006512   c1e1
006514   f5c9     dw	0xf5c9  ;unknown opcode 
006516   013e     movlb	0x3e               
006518   1dcd     comf	0xcd, 0, 0x1            data 0x1DCD, 0xF184, 0xC5C9, 0x4FE5 ; 6518
00651a   f184     dw	0xf184  ;unknown opcode 
00651c   c5c9     movff	0x5c9, 0xfe5       
00651e   4fe5
006520   0406     decf	0x6, 0, 0               data 0x0406, 0x9021, 0x3786, 0x7E3F ; 6520
006522   9021     bcf	0x21, 0, 0           
006524   3786     rlcf	0x86, 0x1, 0x1      
006526   7e3f     btg	0x3f, 0x7, 0         
006528   7717     btg	0x17, 0x3, 0x1           data 0x7717, 0x1023, 0x0DFA, 0xF020 ; 6528
00652a   1023     iorwf	0x23, 0, 0         
00652c   0dfa     mullw	0xfa               
00652e   f020     dw	0xf020  ;unknown opcode 
006530   c1e1     movff	0x1e1, 0x5c9           data 0xC1E1, 0xE5C9, 0x9421, 0x1886 ; 6530
006532   e5c9
006534   9421     bcf	0x21, 0x2, 0         
006536   1886     xorwf	0x86, 0, 0         
006538   e50a     bnov	0x654e                  data 0xE50A, 0x9821, 0x1886, 0xE504 ; 6538
00653a   9821     bcf	0x21, 0x4, 0         
00653c   1886     xorwf	0x86, 0, 0         
00653e   e504     bnov	0x6548              
006540   9021     bcf	0x21, 0, 0               data 0x9021, 0xF586, 0xDDC5, 0xFDE5 ; 6540
006542   f586     dw	0xf586  ;unknown opcode 
006544   ddc5     rcall	0x60d0             
006546   fde5     dw	0xfde5  ;unknown opcode 
006548   3ee5     incfsz	0xe5, 0x1, 0          data 0x3EE5, 0x0E00, 0x0600, 0xDD04 ; 6548
00654a   0e00     movlw	0                  
00654c   0600     decf	0, 0x1, 0           
00654e   dd04     rcall	0x5f58             
006550   9021     bcf	0x21, 0, 0               data 0x9021, 0xFD86, 0x9421, 0xDD86 ; 6550
006552   fd86     dw	0xfd86  ;unknown opcode 
006554   9421     bcf	0x21, 0x2, 0         
006556   dd86     rcall	0x6064             
006558   0086     dw	0x86  ;unknown opcode     data 0x0086, 0x0130, 0xFD0C, 0x0086 ; 6558
00655a   0130     movlb	0x30               
00655c   fd0c     dw	0xfd0c  ;unknown opcode 
00655e   0086     dw	0x86  ;unknown opcode 
006560   0130     movlb	0x30                   data 0x0130, 0x770C, 0x23DD, 0x23FD ; 6560
006562   770c     btg	0xc, 0x3, 0x1        
006564   23dd     addwfc	0xdd, 0x1, 0x1    
006566   23fd     addwfc	0xfd, 0x1, 0x1    
006568   7923     btg	0x23, 0x4, 0x1           data 0x7923, 0x000E, 0xE910, 0xA03A ; 6568
00656a   000e     tblwt	*-                 
00656c   e910     dw	0xe910  ;unknown opcode 
00656e   a03a     btfss	0x3a, 0, 0         
006570   e686     bn	0x647e                    data 0xE686, 0xB1FC, 0x2B2B, 0x2B2B ; 6570
006572   b1fc     btfsc	0xfc, 0, 0x1       
006574   2b2b     incf	0x2b, 0x1, 0x1      
006576   2b2b     incf	0x2b, 0x1, 0x1      
006578   e4cd     bov	0x6514                   data 0xE4CD, 0x3285, 0x86A0, 0xE1FD ; 6578
00657a   3285     rrcf	0x85, 0x1, 0        
00657c   86a0     bsf	0xa0, 0x3, 0         
00657e   e1fd     bnz	0x657a               
006580   e1dd     bnz	0x653c                   data 0xE1DD, 0xF1C1, 0xC9E1, 0x21E5 ; 6580
006582   f1c1     dw	0xf1c1  ;unknown opcode 
006584   c9e1     movff	0x9e1, 0x1e5       
006586   21e5
006588   8694     bsf	0x94, 0x3, 0             data 0x8694, 0x0A18, 0x21E5, 0x8698 ; 6588
00658a   0a18     xorlw	0x18               
00658c   21e5     addwfc	0xe5, 0, 0x1      
00658e   8698     bsf	0x98, 0x3, 0         
006590   0418     decf	0x18, 0, 0              data 0x0418, 0x21E5, 0x8690, 0xC5F5 ; 6590
006592   21e5     addwfc	0xe5, 0, 0x1      
006594   8690     bsf	0x90, 0x3, 0         
006596   c5f5     movff	0x5f5, 0x5dd       
006598   e5dd
006598   e5dd     bnov	0x6554                  data 0xE5DD, 0xE5FD, 0x003E, 0x3F37 ; 6598
00659a   e5fd     bnov	0x6596              
00659c   003e     dw	0x3e  ;unknown opcode 
00659e   3f37     incfsz	0x37, 0x1, 0x1    
0065a0   000e     tblwt	*-                     data 0x000E, 0x0406, 0x21DD, 0x8690 ; 65A0
0065a2   0406     decf	0x6, 0, 0           
0065a4   21dd     addwfc	0xdd, 0, 0x1      
0065a6   8690     bsf	0x90, 0x3, 0         
0065a8   21fd     addwfc	0xfd, 0, 0x1          data 0x21FD, 0x8694, 0x7EDD, 0xFD00 ; 65A8
0065aa   8694     bsf	0x94, 0x3, 0         
0065ac   7edd     btg	0xdd, 0x7, 0         
0065ae   fd00     dw	0xfd00  ;unknown opcode 
0065b0   009e     dw	0x9e  ;unknown opcode     data 0x009E, 0xDD77, 0xFD23, 0x2323 ; 65B0
0065b2   dd77     rcall	0x60a2             
0065b4   fd23     dw	0xfd23  ;unknown opcode 
0065b6   2323     addwfc	0x23, 0x1, 0x1    
0065b8   f210     dw	0xf210  ;unknown opcode     data 0xF210, 0xA03A, 0xE686, 0x30FC ; 65B8
0065ba   a03a     btfss	0x3a, 0, 0         
0065bc   e686     bn	0x64ca                
0065be   30fc     rrcf	0xfc, 0, 0          
0065c0   f602     dw	0xf602  ;unknown opcode     data 0xF602, 0x2B01, 0x2B2B, 0xCD2B ; 65C0
0065c2   2b01     incf	0x1, 0x1, 0x1       
0065c4   2b2b     incf	0x2b, 0x1, 0x1      
0065c6   cd2b     movff	0xd2b, 0x5e4       
0065c8   85e4
0065c8   85e4     bsf	0xe4, 0x2, 0x1           data 0x85E4, 0xA032, 0xFD86, 0xDDE1 ; 65C8
0065ca   a032     btfss	0x32, 0, 0         
0065cc   fd86     dw	0xfd86  ;unknown opcode 
0065ce   dde1     rcall	0x6192             
0065d0   c1e1     movff	0x1e1, 0x1f1           data 0xC1E1, 0xE1F1, 0xE5C9, 0xC5D5 ; 65D0
0065d2   e1f1
0065d4   e5c9     bnov	0x6568              
0065d6   c5d5     movff	0x5d5, 0x21        
0065d8   0021
0065d8   0021     dw	0x21  ;unknown opcode     data 0x0021, 0x2200, 0x869E, 0x9A22 ; 65D8
0065da   2200     addwfc	0, 0x1, 0         
0065dc   869e     bsf	0x9e, 0x3, 0         
0065de   9a22     bcf	0x22, 0x5, 0         
0065e0   2286     addwfc	0x86, 0x1, 0          data 0x2286, 0x8698, 0x0121, 0x2200 ; 65E0
0065e2   8698     bsf	0x98, 0x3, 0         
0065e4   0121     movlb	0x21               
0065e6   2200     addwfc	0, 0x1, 0         
0065e8   869c     bsf	0x9c, 0x3, 0             data 0x869C, 0x3AAF, 0x8697, 0x7FCB ; 65E8
0065ea   3aaf     swapf	0xaf, 0x1, 0       
0065ec   8697     bsf	0x97, 0x3, 0         
0065ee   7fcb     btg	0xcb, 0x7, 0x1       
0065f0   3d20     incfsz	0x20, 0, 0x1          data 0x3D20, 0x9C3A, 0x1786, 0x9C32 ; 65F0
0065f2   9c3a     bcf	0x3a, 0x6, 0         
0065f4   1786     andwf	0x86, 0x1, 0x1     
0065f6   9c32     bcf	0x32, 0x6, 0         
0065f8   3a86     swapf	0x86, 0x1, 0           data 0x3A86, 0x869D, 0x3217, 0x869D ; 65F8
0065fa   869d     bsf	0x9d, 0x3, 0         
0065fc   3217     rrcf	0x17, 0x1, 0        
0065fe   869d     bsf	0x9d, 0x3, 0         
006600   9e3a     bcf	0x3a, 0x7, 0             data 0x9E3A, 0x1786, 0x9E32, 0x3A86 ; 6600
006602   1786     andwf	0x86, 0x1, 0x1     
006604   9e32     bcf	0x32, 0x7, 0         
006606   3a86     swapf	0x86, 0x1, 0       
006608   869f     bsf	0x9f, 0x3, 0             data 0x869F, 0x3217, 0x869F, 0xA4DA ; 6608
00660a   3217     rrcf	0x17, 0x1, 0        
00660c   869f     bsf	0x9f, 0x3, 0         
00660e   a4da     btfss	0xda, 0x2, 0       
006610   3a85     swapf	0x85, 0x1, 0           data 0x3A85, 0x8694, 0x3217, 0x8694 ; 6610
006612   8694     bsf	0x94, 0x3, 0         
006614   3217     rrcf	0x17, 0x1, 0        
006616   8694     bsf	0x94, 0x3, 0         
006618   953a     bcf	0x3a, 0x2, 0x1           data 0x953A, 0x1786, 0x9532, 0x3A86 ; 6618
00661a   1786     andwf	0x86, 0x1, 0x1     
00661c   9532     bcf	0x32, 0x2, 0x1       
00661e   3a86     swapf	0x86, 0x1, 0       
006620   8696     bsf	0x96, 0x3, 0             data 0x8696, 0x3217, 0x8696, 0x973A ; 6620
006622   3217     rrcf	0x17, 0x1, 0        
006624   8696     bsf	0x96, 0x3, 0         
006626   973a     bcf	0x3a, 0x3, 0x1       
006628   1786     andwf	0x86, 0x1, 0x1         data 0x1786, 0x9732, 0x1886, 0x2ABC ; 6628
00662a   9732     bcf	0x32, 0x3, 0x1       
00662c   1886     xorwf	0x86, 0, 0         
00662e   2abc     incf	0xbc, 0x1, 0        
006630   8690     bsf	0x90, 0x3, 0             data 0x8690, 0x5BED, 0x8694, 0x52ED ; 6630
006632   5bed     subwfb	0xed, 0x1, 0x1    
006634   8694     bsf	0x94, 0x3, 0         
006636   52ed     movf	0xed, 0x1, 0        
006638   2aeb     incf	0xeb, 0x1, 0            data 0x2AEB, 0x8692, 0x4BED, 0x8696 ; 6638
00663a   8692     bsf	0x92, 0x3, 0         
00663c   4bed     infsnz	0xed, 0x1, 0x1    
00663e   8696     bsf	0x96, 0x3, 0         
006640   42ed     rrncf	0xed, 0x1, 0           data 0x42ED, 0x1E38, 0x9222, 0xED86 ; 6640
006642   1e38     comf	0x38, 0x1, 0        
006644   9222     bcf	0x22, 0x1, 0         
006646   ed86     call	0xa70c, 0x1         
006648   9053
006648   9053     bcf	0x53, 0, 0               data 0x9053, 0x2A86, 0x869C, 0x5BED ; 6648
00664a   2a86     incf	0x86, 0x1, 0        
00664c   869c     bsf	0x9c, 0x3, 0         
00664e   5bed     subwfb	0xed, 0x1, 0x1    
006650   8698     bsf	0x98, 0x3, 0             data 0x8698, 0x2219, 0x8698, 0x9E2A ; 6650
006652   2219     addwfc	0x19, 0x1, 0      
006654   8698     bsf	0x98, 0x3, 0         
006656   9e2a     bcf	0x2a, 0x7, 0         
006658   ed86     call	0x14b70c, 0x1           data 0xED86, 0x9A5B, 0xED86, 0x225A ; 6658
00665a   9a5b
00665c   ed86     call	0x4b50c, 0x1        
00665e   225a
006660   869a     bsf	0x9a, 0x3, 0             data 0x869A, 0x3AAF, 0x869F, 0x321F ; 6660
006662   3aaf     swapf	0xaf, 0x1, 0       
006664   869f     bsf	0x9f, 0x3, 0         
006666   321f     rrcf	0x1f, 0x1, 0        
006668   869f     bsf	0x9f, 0x3, 0             data 0x869F, 0x9E3A, 0x1F86, 0x9E32 ; 6668
00666a   9e3a     bcf	0x3a, 0x7, 0         
00666c   1f86     comf	0x86, 0x1, 0x1      
00666e   9e32     bcf	0x32, 0x7, 0         
006670   3a86     swapf	0x86, 0x1, 0           data 0x3A86, 0x869D, 0x321F, 0x869D ; 6670
006672   869d     bsf	0x9d, 0x3, 0         
006674   321f     rrcf	0x1f, 0x1, 0        
006676   869d     bsf	0x9d, 0x3, 0         
006678   9c3a     bcf	0x3a, 0x6, 0             data 0x9C3A, 0x1F86, 0x9C32, 0x3886 ; 6678
00667a   1f86     comf	0x86, 0x1, 0x1      
00667c   9c32     bcf	0x32, 0x6, 0         
00667e   3886     swapf	0x86, 0, 0         
006680   3a1e     swapf	0x1e, 0x1, 0           data 0x3A1E, 0x8697, 0x321F, 0x8697 ; 6680
006682   8697     bsf	0x97, 0x3, 0         
006684   321f     rrcf	0x1f, 0x1, 0        
006686   8697     bsf	0x97, 0x3, 0         
006688   963a     bcf	0x3a, 0x3, 0             data 0x963A, 0x1F86, 0x9632, 0x3A86 ; 6688
00668a   1f86     comf	0x86, 0x1, 0x1      
00668c   9632     bcf	0x32, 0x3, 0         
00668e   3a86     swapf	0x86, 0x1, 0       
006690   8695     bsf	0x95, 0x3, 0             data 0x8695, 0x321F, 0x8695, 0x943A ; 6690
006692   321f     rrcf	0x1f, 0x1, 0        
006694   8695     bsf	0x95, 0x3, 0         
006696   943a     bcf	0x3a, 0x2, 0         
006698   1f86     comf	0x86, 0x1, 0x1          data 0x1F86, 0x9432, 0x1886, 0xC190 ; 6698
00669a   9432     bcf	0x32, 0x2, 0         
00669c   1886     xorwf	0x86, 0, 0         
00669e   c190     movff	0x190, 0x1d1       
0066a0   e1d1
0066a0   e1d1     bnz	0x6644                   data 0xE1D1, 0xC9AF, 0x973A, 0xCB86 ; 66A0
0066a2   c9af     movff	0x9af, 0x73a       
0066a4   973a
0066a6   cb86     movff	0xb86, 0x87f       
0066a8   287f
0066a8   287f     incf	0x7f, 0, 0              data 0x287F, 0x2A1A, 0x8690, 0x9822 ; 66A8
0066aa   2a1a     incf	0x1a, 0x1, 0        
0066ac   8690     bsf	0x90, 0x3, 0         
0066ae   9822     bcf	0x22, 0x4, 0         
0066b0   2a86     incf	0x86, 0x1, 0            data 0x2A86, 0x8692, 0x9A22, 0x2186 ; 66B0
0066b2   8692     bsf	0x92, 0x3, 0         
0066b4   9a22     bcf	0x22, 0x5, 0         
0066b6   2186     addwfc	0x86, 0, 0x1      
0066b8   0000     nop                          data 0x0000, 0x9022, 0x2286, 0x8692 ; 66B8
0066ba   9022     bcf	0x22, 0, 0           
0066bc   2286     addwfc	0x86, 0x1, 0      
0066be   8692     bsf	0x92, 0x3, 0         
0066c0   d1c1     bra	0x6a44                   data 0xD1C1, 0xAFE1, 0x21C9, 0xFFFF ; 66C0
0066c2   afe1     btfss	0xe1, 0x7, 0x1     
0066c4   21c9     addwfc	0xc9, 0, 0x1      
0066c6   ffff     dw	0xffff  ;unknown opcode 
0066c8   9022     bcf	0x22, 0, 0               data 0x9022, 0x2286, 0x8692, 0x9822 ; 66C8
0066ca   2286     addwfc	0x86, 0x1, 0      
0066cc   8692     bsf	0x92, 0x3, 0         
0066ce   9822     bcf	0x22, 0x4, 0         
0066d0   2286     addwfc	0x86, 0x1, 0          data 0x2286, 0x869A, 0xD1C1, 0x3EE1 ; 66D0
0066d2   869a     bsf	0x9a, 0x3, 0         
0066d4   d1c1     bra	0x6a58               
0066d6   3ee1     incfsz	0xe1, 0x1, 0      
0066d8   37ff     rlcf	0xff, 0x1, 0x1          data 0x37FF, 0xF5C9, 0x01C5, 0x0008 ; 66D8
0066da   f5c9     dw	0xf5c9  ;unknown opcode 
0066dc   01c5     movlb	0xc5               
0066de   0008     tblrd	*                  
0066e0   003e     dw	0x3e  ;unknown opcode     data 0x003E, 0x0718, 0xC5F5, 0x0401 ; 66E0
0066e2   0718     decf	0x18, 0x1, 0x1      
0066e4   c5f5     movff	0x5f5, 0x401       
0066e6   0401
0066e8   3e00     incfsz	0, 0x1, 0             data 0x3E00, 0xED00, 0x20A1, 0xEA08 ; 66E8
0066ea   ed00     call	0x14200, 0x1        
0066ec   20a1
0066ee   ea08     dw	0xea08  ;unknown opcode 
0066f0   85eb     bsf	0xeb, 0x2, 0x1           data 0x85EB, 0xF1C1, 0x02F6, 0xC1C9 ; 66F0
0066f2   f1c1     dw	0xf1c1  ;unknown opcode 
0066f4   02f6     mulwf	0xf6, 0            
0066f6   c1c9     movff	0x1c9, 0x6f1       
0066f8   e6f1
0066f8   e6f1     bn	0x66dc                    data 0xE6F1, 0xC9FD, 0xDDC5, 0x47E5 ; 66F8
0066fa   c9fd     movff	0x9fd, 0xdc5       
0066fc   ddc5
0066fe   47e5     rlncf	0xe5, 0x1, 0x1     
006700   043e     decf	0x3e, 0, 0              data 0x043E, 0x4F90, 0x21DD, 0x8694 ; 6700
006702   4f90     dcfsnz	0x90, 0x1, 0x1    
006704   21dd     addwfc	0xdd, 0, 0x1      
006706   8694     bsf	0x94, 0x3, 0         
006708   dd7e     rcall	0x6206                 data 0xDD7E, 0x0077, 0x23DD, 0x1023 ; 6708
00670a   0077     dw	0x77  ;unknown opcode 
00670c   23dd     addwfc	0xdd, 0x1, 0x1    
00670e   1023     iorwf	0x23, 0, 0         
006710   3ef7     incfsz	0xf7, 0x1, 0          data 0x3EF7, 0xA900, 0x0A28, 0x3E41 ; 6710
006712   a900     btfss	0, 0x4, 0x1        
006714   0a28     xorlw	0x28               
006716   3e41     incfsz	0x41, 0x1, 0      
006718   dd00     rcall	0x611a                 data 0xDD00, 0x0077, 0x23DD, 0xF910 ; 6718
00671a   0077     dw	0x77  ;unknown opcode 
00671c   23dd     addwfc	0xdd, 0x1, 0x1    
00671e   f910     dw	0xf910  ;unknown opcode 
006720   003e     dw	0x3e  ;unknown opcode     data 0x003E, 0x0806, 0x77DD, 0xDD00 ; 6720
006722   0806     sublw	0x6                
006724   77dd     btg	0xdd, 0x3, 0x1       
006726   dd00     rcall	0x6128             
006728   1023     iorwf	0x23, 0, 0             data 0x1023, 0x06F9, 0x2120, 0x8694 ; 6728
00672a   06f9     decf	0xf9, 0x1, 0        
00672c   2120     addwfc	0x20, 0, 0x1      
00672e   8694     bsf	0x94, 0x3, 0         
006730   e5c5     bnov	0x66bc                  data 0xE5C5, 0x0906, 0x177E, 0x2377 ; 6730
006732   0906     iorlw	0x6                
006734   177e     andwf	0x7e, 0x1, 0x1     
006736   2377     addwfc	0x77, 0x1, 0x1    
006738   fa10     dw	0xfa10  ;unknown opcode     data 0xFA10, 0xC1E1, 0xE5C5, 0xEE78 ; 6738
00673a   c1e1     movff	0x1e1, 0x5c5       
00673c   e5c5
00673e   ee78     dw	0xee78  ;unknown opcode 
006740   ca01     movff	0xa01, 0x688           data 0xCA01, 0x8688, 0x043E, 0x3085 ; 6740
006742   8688
006744   043e     decf	0x3e, 0, 0          
006746   3085     rrcf	0x85, 0, 0          
006748   2401     addwf	0x1, 0, 0              data 0x2401, 0x066F, 0x7E05, 0x0FE6 ; 6748
00674a   066f     decf	0x6f, 0x1, 0        
00674c   7e05     btg	0x5, 0x7, 0          
00674e   0fe6     addlw	0xe6               
006750   05d6     decf	0xd6, 0, 0x1            data 0x05D6, 0x69FA, 0xE586, 0x3EC5 ; 6750
006752   69fa     setf	0xfa, 0x1           
006754   e586     bnov	0x6662              
006756   3ec5     incfsz	0xc5, 0x1, 0      
006758   8603     bsf	0x3, 0x3, 0              data 0x8603, 0x3077, 0x230A, 0x2805 ; 6758
00675a   3077     rrcf	0x77, 0, 0          
00675c   230a     addwfc	0xa, 0x1, 0x1     
00675e   2805     incf	0x5, 0, 0           
006760   7e06     btg	0x6, 0x7, 0              data 0x7E06, 0x01C6, 0x1877, 0xC1F4 ; 6760
006762   01c6     movlb	0xc6               
006764   1877     xorwf	0x77, 0, 0         
006766   c1f4     movff	0x1f4, 0xee1       
006768   7ee1
006768   7ee1     btg	0xe1, 0x7, 0             data 0x7EE1, 0xF0E6, 0x50D6, 0x85FA ; 6768
00676a   f0e6     dw	0xf0e6  ;unknown opcode 
00676c   50d6     movf	0xd6, 0, 0          
00676e   85fa     bsf	0xfa, 0x2, 0x1       
006770   e586     bnov	0x667e                  data 0xE586, 0x3EC5, 0x8630, 0x3077 ; 6770
006772   3ec5     incfsz	0xc5, 0x1, 0      
006774   8630     bsf	0x30, 0x3, 0         
006776   3077     rrcf	0x77, 0, 0          
006778   230a     addwfc	0xa, 0x1, 0x1         data 0x230A, 0x2805, 0x7E06, 0x01C6 ; 6778
00677a   2805     incf	0x5, 0, 0           
00677c   7e06     btg	0x6, 0x7, 0          
00677e   01c6     movlb	0xc6               
006780   1877     xorwf	0x77, 0, 0             data 0x1877, 0xC1F4, 0x23E1, 0xC510 ; 6780
006782   c1f4     movff	0x1f4, 0x3e1       
006784   23e1
006786   c510     movff	0x510, 0x1e1       
006788   c1e1
006788   c1e1     movff	0x1e1, 0x410           data 0xC1E1, 0xA410, 0xE1DD, 0xC9C1 ; 6788
00678a   a410
00678c   e1dd     bnz	0x6748               
00678e   c9c1     movff	0x9c1, 0           
006790   0000
006790   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6790
006792   0000     nop                      
006794   0000     nop                      
006796   0000     nop                      
006798   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6798
00679a   0000     nop                      
00679c   0000     nop                      
00679e   0000     nop                      
0067a0   3e00     incfsz	0, 0x1, 0             data 0x3E00, 0xCD20, 0x8069, 0x48CD ; 67A0
0067a2   cd20     movff	0xd20, 0x69        
0067a4   8069
0067a6   48cd     infsnz	0xcd, 0, 0        
0067a8   2180     addwfc	0x80, 0, 0x1          data 0x2180, 0x8A46, 0xEBCD, 0xCD80 ; 67A8
0067aa   8a46     bsf	0x46, 0x5, 0         
0067ac   ebcd     dw	0xebcd  ;unknown opcode 
0067ae   cd80     movff	0xd80, 0x48        
0067b0   8048
0067b0   8048     bsf	0x48, 0, 0               data 0x8048, 0x4A32, 0x2181, 0x814A ; 67B0
0067b2   4a32     infsnz	0x32, 0x1, 0      
0067b4   2181     addwfc	0x81, 0, 0x1      
0067b6   814a     bsf	0x4a, 0, 0x1         
0067b8   023e     mulwf	0x3e, 0                data 0x023E, 0x0ACD, 0x3E81, 0xD30A ; 67B8
0067ba   0acd     xorlw	0xcd               
0067bc   3e81     incfsz	0x81, 0x1, 0      
0067be   d30a     bra	0x6dd4               
0067c0   2105     addwfc	0x5, 0, 0x1           data 0x2105, 0x8A59, 0xEBCD, 0xCD80 ; 67C0
0067c2   8a59     bsf	0x59, 0x5, 0         
0067c4   ebcd     dw	0xebcd  ;unknown opcode 
0067c6   cd80     movff	0xd80, 0x48        
0067c8   8048
0067c8   8048     bsf	0x48, 0, 0               data 0x8048, 0x05D3, 0x48CD, 0xD380 ; 67C8
0067ca   05d3     decf	0xd3, 0, 0x1        
0067cc   48cd     infsnz	0xcd, 0, 0        
0067ce   d380     bra	0x6ed0               
0067d0   3e05     incfsz	0x5, 0x1, 0           data 0x3E05, 0xD30A, 0x2105, 0x8A6C ; 67D0
0067d2   d30a     bra	0x6de8               
0067d4   2105     addwfc	0x5, 0, 0x1       
0067d6   8a6c     bsf	0x6c, 0x5, 0         
0067d8   ebcd     dw	0xebcd  ;unknown opcode     data 0xEBCD, 0xCD80, 0x8048, 0x05D3 ; 67D8
0067da   cd80     movff	0xd80, 0x48        
0067dc   8048
0067de   05d3     decf	0xd3, 0, 0x1        
0067e0   48cd     infsnz	0xcd, 0, 0            data 0x48CD, 0xD380, 0xCD05, 0x8048 ; 67E0
0067e2   d380     bra	0x6ee4               
0067e4   cd05     movff	0xd05, 0x48        
0067e6   8048
0067e8   05d3     decf	0xd3, 0, 0x1            data 0x05D3, 0x48CD, 0xD380, 0xCD05 ; 67E8
0067ea   48cd     infsnz	0xcd, 0, 0        
0067ec   d380     bra	0x6eee               
0067ee   cd05     movff	0xd05, 0x48        
0067f0   8048
0067f0   8048     bsf	0x48, 0, 0               data 0x8048, 0x05D3, 0x0A3E, 0x05D3 ; 67F0
0067f2   05d3     decf	0xd3, 0, 0x1        
0067f4   0a3e     xorlw	0x3e               
0067f6   05d3     decf	0xd3, 0, 0x1        
0067f8   7f21     btg	0x21, 0x7, 0x1           data 0x7F21, 0xCD8A, 0x80EB, 0x48CD ; 67F8
0067fa   cd8a     movff	0xd8a, 0xeb        
0067fc   80eb
0067fe   48cd     infsnz	0xcd, 0, 0        
006800   3280     rrcf	0x80, 0x1, 0            data 0x3280, 0x814A, 0x023E, 0x4A21 ; 6800
006802   814a     bsf	0x4a, 0, 0x1         
006804   023e     mulwf	0x3e, 0            
006806   4a21     infsnz	0x21, 0x1, 0      
006808   cd81     movff	0xd81, 0x10a           data 0xCD81, 0x810A, 0x0A3E, 0x05D3 ; 6808
00680a   810a
00680c   0a3e     xorlw	0x3e               
00680e   05d3     decf	0xd3, 0, 0x1        
006810   9221     bcf	0x21, 0x1, 0             data 0x9221, 0xCD8A, 0x80EB, 0x48CD ; 6810
006812   cd8a     movff	0xd8a, 0xeb        
006814   80eb
006816   48cd     infsnz	0xcd, 0, 0        
006818   3280     rrcf	0x80, 0x1, 0            data 0x3280, 0x814D, 0x48CD, 0x3280 ; 6818
00681a   814d     bsf	0x4d, 0, 0x1         
00681c   48cd     infsnz	0xcd, 0, 0        
00681e   3280     rrcf	0x80, 0x1, 0        
006820   814c     bsf	0x4c, 0, 0x1             data 0x814C, 0x48CD, 0x3280, 0x814B ; 6820
006822   48cd     infsnz	0xcd, 0, 0        
006824   3280     rrcf	0x80, 0x1, 0        
006826   814b     bsf	0x4b, 0, 0x1         
006828   48cd     infsnz	0xcd, 0, 0            data 0x48CD, 0x3280, 0x814A, 0x4A21 ; 6828
00682a   3280     rrcf	0x80, 0x1, 0        
00682c   814a     bsf	0x4a, 0, 0x1         
00682e   4a21     infsnz	0x21, 0x1, 0      
006830   3e81     incfsz	0x81, 0x1, 0          data 0x3E81, 0xCD08, 0x810A, 0x0A3E ; 6830
006832   cd08     movff	0xd08, 0x10a       
006834   810a
006836   0a3e     xorlw	0x3e               
006838   05d3     decf	0xd3, 0, 0x1            data 0x05D3, 0xA521, 0xCD8A, 0x80EB ; 6838
00683a   a521     btfss	0x21, 0x2, 0x1     
00683c   cd8a     movff	0xd8a, 0xeb        
00683e   80eb
006840   48cd     infsnz	0xcd, 0, 0            data 0x48CD, 0xE680, 0x4F0F, 0x48CD ; 6840
006842   e680     bn	0x6744                
006844   4f0f     dcfsnz	0xf, 0x1, 0x1     
006846   48cd     infsnz	0xcd, 0, 0        
006848   3280     rrcf	0x80, 0x1, 0            data 0x3280, 0x814A, 0xF0E6, 0x07B1 ; 6848
00684a   814a     bsf	0x4a, 0, 0x1         
00684c   f0e6     dw	0xf0e6  ;unknown opcode 
00684e   07b1     decf	0xb1, 0x1, 0x1      
006850   0707     decf	0x7, 0x1, 0x1           data 0x0707, 0x3207, 0x814B, 0x4A3A ; 6850
006852   3207     rrcf	0x7, 0x1, 0         
006854   814b     bsf	0x4b, 0, 0x1         
006856   4a3a     infsnz	0x3a, 0x1, 0      
006858   e681     bn	0x675c                    data 0xE681, 0x320F, 0x814A, 0x013E ; 6858
00685a   320f     rrcf	0xf, 0x1, 0         
00685c   814a     bsf	0x4a, 0, 0x1         
00685e   013e     movlb	0x3e               
006860   0206     mulwf	0x6, 0                 data 0x0206, 0x4B21, 0xCD81, 0x80F5 ; 6860
006862   4b21     infsnz	0x21, 0x1, 0x1    
006864   cd81     movff	0xd81, 0xf5        
006866   80f5
006868   203e     addwfc	0x3e, 0, 0            data 0x203E, 0x05D3, 0x013E, 0x0206 ; 6868
00686a   05d3     decf	0xd3, 0, 0x1        
00686c   013e     movlb	0x3e               
00686e   0206     mulwf	0x6, 0             
006870   4a21     infsnz	0x21, 0x1, 0          data 0x4A21, 0xCD81, 0x80F5, 0x0A3E ; 6870
006872   cd81     movff	0xd81, 0xf5        
006874   80f5
006876   0a3e     xorlw	0x3e               
006878   05d3     decf	0xd3, 0, 0x1            data 0x05D3, 0x48CD, 0xC980, 0x5E3A ; 6878
00687a   48cd     infsnz	0xcd, 0, 0        
00687c   c980     movff	0x980, 0xe3a       
00687e   5e3a
006880   328b     rrcf	0x8b, 0x1, 0            data 0x328B, 0x8690, 0x5F3A, 0x328B ; 6880
006882   8690     bsf	0x90, 0x3, 0         
006884   5f3a     subwf	0x3a, 0x1, 0x1     
006886   328b     rrcf	0x8b, 0x1, 0        
006888   8691     bsf	0x91, 0x3, 0             data 0x8691, 0x603A, 0x328B, 0x8692 ; 6888
00688a   603a     cpfslt	0x3a, 0           
00688c   328b     rrcf	0x8b, 0x1, 0        
00688e   8692     bsf	0x92, 0x3, 0         
006890   003e     dw	0x3e  ;unknown opcode     data 0x003E, 0x9332, 0x3E86, 0xCD03 ; 6890
006892   9332     bcf	0x32, 0x1, 0x1       
006894   3e86     incfsz	0x86, 0x1, 0      
006896   cd03     movff	0xd03, 0x3fb       
006898   83fb
006898   83fb     bsf	0xfb, 0x1, 0x1           data 0x83FB, 0xBA21, 0xCD8A, 0x80EB ; 6898
00689a   ba21     btfsc	0x21, 0x5, 0       
00689c   cd8a     movff	0xd8a, 0xeb        
00689e   80eb
0068a0   9021     bcf	0x21, 0, 0               data 0x9021, 0x3E86, 0x0603, 0xCD05 ; 68A0
0068a2   3e86     incfsz	0x86, 0x1, 0      
0068a4   0603     decf	0x3, 0x1, 0         
0068a6   cd05     movff	0xd05, 0xf5        
0068a8   80f5
0068a8   80f5     bsf	0xf5, 0, 0               data 0x80F5, 0x0A3E, 0x05D3, 0x3EC9 ; 68A8
0068aa   0a3e     xorlw	0x3e               
0068ac   05d3     decf	0xd3, 0, 0x1        
0068ae   3ec9     incfsz	0xc9, 0x1, 0      
0068b0   cd21     movff	0xd21, 0x69            data 0xCD21, 0x8069, 0x48CD, 0xCD80 ; 68B0
0068b2   8069
0068b4   48cd     infsnz	0xcd, 0, 0        
0068b6   cd80     movff	0xd80, 0x48        
0068b8   8048
0068b8   8048     bsf	0x48, 0, 0               data 0x8048, 0x77CB, 0x6EC2, 0x3A88 ; 68B8
0068ba   77cb     btg	0xcb, 0x3, 0x1       
0068bc   6ec2     movwf	0xc2, 0            
0068be   3a88     swapf	0x88, 0x1, 0       
0068c0   8b5b     bsf	0x5b, 0x5, 0x1           data 0x8B5B, 0xFEE6, 0x5B32, 0xCD8B ; 68C0
0068c2   fee6     dw	0xfee6  ;unknown opcode 
0068c4   5b32     subwfb	0x32, 0x1, 0x1    
0068c6   cd8b     movff	0xd8b, 0x48        
0068c8   8048
0068c8   8048     bsf	0x48, 0, 0               data 0x8048, 0x48CD, 0xCD80, 0x8048 ; 68C8
0068ca   48cd     infsnz	0xcd, 0, 0        
0068cc   cd80     movff	0xd80, 0x48        
0068ce   8048
0068d0   48cd     infsnz	0xcd, 0, 0            data 0x48CD, 0xCD80, 0x8048, 0x0FE6 ; 68D0
0068d2   cd80     movff	0xd80, 0x48        
0068d4   8048
0068d6   0fe6     addlw	0xe6               
0068d8   6132     cpfslt	0x32, 0x1             data 0x6132, 0xCD8B, 0x8048, 0x03E6 ; 68D8
0068da   cd8b     movff	0xd8b, 0x48        
0068dc   8048
0068de   03e6     mulwf	0xe6, 0x1          
0068e0   0707     decf	0x7, 0x1, 0x1           data 0x0707, 0xCD4F, 0x8048, 0x3007 ; 68E0
0068e2   cd4f     movff	0xd4f, 0x48        
0068e4   8048
0068e6   3007     rrcf	0x7, 0, 0           
0068e8   cb02     movff	0xb02, 0x7c9           data 0xCB02, 0x07C9, 0x0230, 0xC1CB ; 68E8
0068ea   07c9
0068ec   0230     mulwf	0x30, 0            
0068ee   c1cb     movff	0x1cb, 0xce6       
0068f0   7ce6
0068f0   7ce6     btg	0xe6, 0x6, 0             data 0x7CE6, 0xCD57, 0x8048, 0xC0E6 ; 68F0
0068f2   cd57     movff	0xd57, 0x48        
0068f4   8048
0068f6   c0e6     movff	0xe6, 0x707        
0068f8   0707
0068f8   0707     decf	0x7, 0x1, 0x1           data 0x0707, 0x32B2, 0x8B5D, 0x3279 ; 68F8
0068fa   32b2     rrcf	0xb2, 0x1, 0        
0068fc   8b5d     bsf	0x5d, 0x5, 0x1       
0068fe   3279     rrcf	0x79, 0x1, 0        
006900   8b5e     bsf	0x5e, 0x5, 0x1           data 0x8B5E, 0x48CD, 0xE680, 0x0703 ; 6900
006902   48cd     infsnz	0xcd, 0, 0        
006904   e680     bn	0x6806                
006906   0703     decf	0x3, 0x1, 0x1       
006908   cd4f     movff	0xd4f, 0x48            data 0xCD4F, 0x8048, 0x80E6, 0x0228 ; 6908
00690a   8048
00690c   80e6     bsf	0xe6, 0, 0           
00690e   0228     mulwf	0x28, 0            
006910   c1cb     movff	0x1cb, 0x679           data 0xC1CB, 0xC679, 0x3202, 0x8B60 ; 6910
006912   c679
006914   3202     rrcf	0x2, 0x1, 0         
006916   8b60     bsf	0x60, 0x5, 0x1       
006918   3a4f     swapf	0x4f, 0x1, 0           data 0x3A4F, 0x8B5D, 0x9032, 0x3A86 ; 6918
00691a   8b5d     bsf	0x5d, 0x5, 0x1       
00691c   9032     bcf	0x32, 0, 0           
00691e   3a86     swapf	0x86, 0x1, 0       
006920   8b5e     bsf	0x5e, 0x5, 0x1           data 0x8B5E, 0x9132, 0x3E86, 0x3200 ; 6920
006922   9132     bcf	0x32, 0, 0x1         
006924   3e86     incfsz	0x86, 0x1, 0      
006926   3200     rrcf	0, 0x1, 0           
006928   8692     bsf	0x92, 0x3, 0             data 0x8692, 0x9332, 0x3286, 0x8697 ; 6928
00692a   9332     bcf	0x32, 0x1, 0x1       
00692c   3286     rrcf	0x86, 0x1, 0        
00692e   8697     bsf	0x97, 0x3, 0         
006930   9632     bcf	0x32, 0x3, 0             data 0x9632, 0x3286, 0x8695, 0x013E ; 6930
006932   3286     rrcf	0x86, 0x1, 0        
006934   8695     bsf	0x95, 0x3, 0         
006936   013e     movlb	0x3e               
006938   9432     bcf	0x32, 0x2, 0             data 0x9432, 0xCD86, 0x843F, 0x613A ; 6938
00693a   cd86     movff	0xd86, 0x43f       
00693c   843f
00693e   613a     cpfslt	0x3a, 0x1         
006940   818b     bsf	0x8b, 0, 0x1             data 0x818B, 0x09D6, 0x1DCD, 0x3A84 ; 6940
006942   09d6     iorlw	0xd6               
006944   1dcd     comf	0xcd, 0, 0x1        
006946   3a84     swapf	0x84, 0x1, 0       
006948   8690     bsf	0x90, 0x3, 0             data 0x8690, 0x5D32, 0x3A8B, 0x8691 ; 6948
00694a   5d32     subwf	0x32, 0, 0x1       
00694c   3a8b     swapf	0x8b, 0x1, 0       
00694e   8691     bsf	0x91, 0x3, 0         
006950   5e32     subwf	0x32, 0x1, 0           data 0x5E32, 0x3A8B, 0x8692, 0x5F32 ; 6950
006952   3a8b     swapf	0x8b, 0x1, 0       
006954   8692     bsf	0x92, 0x3, 0         
006956   5f32     subwf	0x32, 0x1, 0x1     
006958   3e8b     incfsz	0x8b, 0x1, 0          data 0x3E8B, 0x3200, 0x8B60, 0x48CD ; 6958
00695a   3200     rrcf	0, 0x1, 0           
00695c   8b60     bsf	0x60, 0x5, 0x1       
00695e   48cd     infsnz	0xcd, 0, 0        
006960   cd80     movff	0xd80, 0x48            data 0xCD80, 0x8048, 0x48CD, 0xCD80 ; 6960
006962   8048
006964   48cd     infsnz	0xcd, 0, 0        
006966   cd80     movff	0xd80, 0x48        
006968   8048
006968   8048     bsf	0x48, 0, 0               data 0x8048, 0x48CD, 0xC980, 0x5B3A ; 6968
00696a   48cd     infsnz	0xcd, 0, 0        
00696c   c980     movff	0x980, 0xb3a       
00696e   5b3a
006970   f68b     dw	0xf68b  ;unknown opcode     data 0xF68B, 0x3201, 0x8B5B, 0x48CD ; 6970
006972   3201     rrcf	0x1, 0x1, 0         
006974   8b5b     bsf	0x5b, 0x5, 0x1       
006976   48cd     infsnz	0xcd, 0, 0        
006978   cd80     movff	0xd80, 0x48            data 0xCD80, 0x8048, 0x48CD, 0xCD80 ; 6978
00697a   8048
00697c   48cd     infsnz	0xcd, 0, 0        
00697e   cd80     movff	0xd80, 0x48        
006980   8048
006980   8048     bsf	0x48, 0, 0               data 0x8048, 0x48CD, 0xE680, 0x320F ; 6980
006982   48cd     infsnz	0xcd, 0, 0        
006984   e680     bn	0x6886                
006986   320f     rrcf	0xf, 0x1, 0         
006988   8b61     bsf	0x61, 0x5, 0x1           data 0x8B61, 0x48CD, 0xCD80, 0x8048 ; 6988
00698a   48cd     infsnz	0xcd, 0, 0        
00698c   cd80     movff	0xd80, 0x48        
00698e   8048
006990   3fe6     incfsz	0xe6, 0x1, 0x1        data 0x3FE6, 0x9232, 0xCD86, 0x8048 ; 6990
006992   9232     bcf	0x32, 0x1, 0         
006994   cd86     movff	0xd86, 0x48        
006996   8048
006998   9132     bcf	0x32, 0, 0x1             data 0x9132, 0xCD86, 0x8048, 0x9032 ; 6998
00699a   cd86     movff	0xd86, 0x48        
00699c   8048
00699e   9032     bcf	0x32, 0, 0           
0069a0   3e86     incfsz	0x86, 0x1, 0          data 0x3E86, 0x3200, 0x8693, 0x9732 ; 69A0
0069a2   3200     rrcf	0, 0x1, 0           
0069a4   8693     bsf	0x93, 0x3, 0         
0069a6   9732     bcf	0x32, 0x3, 0x1       
0069a8   3286     rrcf	0x86, 0x1, 0            data 0x3286, 0x8696, 0x9532, 0x3E86 ; 69A8
0069aa   8696     bsf	0x96, 0x3, 0         
0069ac   9532     bcf	0x32, 0x2, 0x1       
0069ae   3e86     incfsz	0x86, 0x1, 0      
0069b0   3201     rrcf	0x1, 0x1, 0             data 0x3201, 0x8694, 0x3FCD, 0x3E84 ; 69B0
0069b2   8694     bsf	0x94, 0x3, 0         
0069b4   3fcd     incfsz	0xcd, 0x1, 0x1    
0069b6   3e84     incfsz	0x84, 0x1, 0      
0069b8   cd02     movff	0xd02, 0x41d           data 0xCD02, 0x841D, 0x003E, 0x5D32 ; 69B8
0069ba   841d
0069bc   003e     dw	0x3e  ;unknown opcode 
0069be   5d32     subwf	0x32, 0, 0x1       
0069c0   3a8b     swapf	0x8b, 0x1, 0           data 0x3A8B, 0x8690, 0x5E32, 0x3A8B ; 69C0
0069c2   8690     bsf	0x90, 0x3, 0         
0069c4   5e32     subwf	0x32, 0x1, 0       
0069c6   3a8b     swapf	0x8b, 0x1, 0       
0069c8   8691     bsf	0x91, 0x3, 0             data 0x8691, 0x5F32, 0x3A8B, 0x8692 ; 69C8
0069ca   5f32     subwf	0x32, 0x1, 0x1     
0069cc   3a8b     swapf	0x8b, 0x1, 0       
0069ce   8692     bsf	0x92, 0x3, 0         
0069d0   6032     cpfslt	0x32, 0               data 0x6032, 0xCD8B, 0x8048, 0x48CD ; 69D0
0069d2   cd8b     movff	0xd8b, 0x48        
0069d4   8048
0069d6   48cd     infsnz	0xcd, 0, 0        
0069d8   cd80     movff	0xd80, 0x48            data 0xCD80, 0x8048, 0x48CD, 0xCD80 ; 69D8
0069da   8048
0069dc   48cd     infsnz	0xcd, 0, 0        
0069de   cd80     movff	0xd80, 0x48        
0069e0   8048
0069e0   8048     bsf	0x48, 0, 0               data 0x8048, 0x48CD, 0xC980, 0xF5E5 ; 69E0
0069e2   48cd     infsnz	0xcd, 0, 0        
0069e4   c980     movff	0x980, 0x5e5       
0069e6   f5e5
0069e8   21c5     addwfc	0xc5, 0, 0x1          data 0x21C5, 0x8B62, 0x5B3A, 0xE68B ; 69E8
0069ea   8b62     bsf	0x62, 0x5, 0x1       
0069ec   5b3a     subwfb	0x3a, 0x1, 0x1    
0069ee   e68b     bn	0x6906                
0069f0   2001     addwfc	0x1, 0, 0             data 0x2001, 0xAF1E, 0x6632, 0x378B ; 69F0
0069f2   af1e     btfss	0x1e, 0x7, 0x1     
0069f4   6632     tstfsz	0x32, 0           
0069f6   378b     rlcf	0x8b, 0x1, 0x1      
0069f8   3a3f     swapf	0x3f, 0x1, 0           data 0x3A3F, 0x8B62, 0x3217, 0x8B67 ; 69F8
0069fa   8b62     bsf	0x62, 0x5, 0x1       
0069fc   3217     rrcf	0x17, 0x1, 0        
0069fe   8b67     bsf	0x67, 0x5, 0x1       
006a00   633a     cpfseq	0x3a, 0x1             data 0x633A, 0x178B, 0x6832, 0x3A8B ; 6A00
006a02   178b     andwf	0x8b, 0x1, 0x1     
006a04   6832     setf	0x32, 0             
006a06   3a8b     swapf	0x8b, 0x1, 0       
006a08   8b64     bsf	0x64, 0x5, 0x1           data 0x8B64, 0x3217, 0x8B69, 0x6621 ; 6A08
006a0a   3217     rrcf	0x17, 0x1, 0        
006a0c   8b69     bsf	0x69, 0x5, 0x1       
006a0e   6621     tstfsz	0x21, 0           
006a10   3e8b     incfsz	0x8b, 0x1, 0          data 0x3E8B, 0xCD22, 0x8069, 0x0406 ; 6A10
006a12   cd22     movff	0xd22, 0x69        
006a14   8069
006a16   0406     decf	0x6, 0, 0           
006a18   cd7e     movff	0xd7e, 0x69            data 0xCD7E, 0x8069, 0x1023, 0xCDF9 ; 6A18
006a1a   8069
006a1c   1023     iorwf	0x23, 0, 0         
006a1e   cdf9     movff	0xdf9, 0x48        
006a20   8048
006a20   8048     bsf	0x48, 0, 0               data 0x8048, 0x5C32, 0x018B, 0x0200 ; 6A20
006a22   5c32     subwf	0x32, 0, 0         
006a24   018b     movlb	0x8b               
006a26   0200     mulwf	0, 0               
006a28   84cd     bsf	0xcd, 0x2, 0             data 0x84CD, 0xCD89, 0x8048, 0x48CD ; 6A28
006a2a   cd89     movff	0xd89, 0x48        
006a2c   8048
006a2e   48cd     infsnz	0xcd, 0, 0        
006a30   3a80     swapf	0x80, 0x1, 0           data 0x3A80, 0x8B5C, 0x4FFE, 0x0528 ; 6A30
006a32   8b5c     bsf	0x5c, 0x5, 0x1       
006a34   4ffe     dcfsnz	0xfe, 0x1, 0x1    
006a36   0528     decf	0x28, 0, 0x1        
006a38   f1c1     dw	0xf1c1  ;unknown opcode     data 0xF1C1, 0x37E1, 0xC1C9, 0xE1F1 ; 6A38
006a3a   37e1     rlcf	0xe1, 0x1, 0x1      
006a3c   c1c9     movff	0x1c9, 0x1f1       
006a3e   e1f1
006a40   3f37     incfsz	0x37, 0x1, 0x1        data 0x3F37, 0x21C9, 0x8B37, 0xEBCD ; 6A40
006a42   21c9     addwfc	0xc9, 0, 0x1      
006a44   8b37     bsf	0x37, 0x5, 0x1       
006a46   ebcd     dw	0xebcd  ;unknown opcode 
006a48   2180     addwfc	0x80, 0, 0x1          data 0x2180, 0x8B62, 0x083E, 0x0ACD ; 6A48
006a4a   8b62     bsf	0x62, 0x5, 0x1       
006a4c   083e     sublw	0x3e               
006a4e   0acd     xorlw	0xcd               
006a50   3e81     incfsz	0x81, 0x1, 0          data 0x3E81, 0xD30A, 0x2105, 0x7E00 ; 6A50
006a52   d30a     bra	0x7068               
006a54   2105     addwfc	0x5, 0, 0x1       
006a56   7e00     btg	0, 0x7, 0            
006a58   5c3a     subwf	0x3a, 0, 0             data 0x5C3A, 0xFE8B, 0xCA45, 0x8996 ; 6A58
006a5a   fe8b     dw	0xfe8b  ;unknown opcode 
006a5c   ca45     movff	0xa45, 0x996       
006a5e   8996
006a60   54fe     subfwb	0xfe, 0, 0            data 0x54FE, 0xB7CA, 0x0189, 0x0200 ; 6A60
006a62   b7ca     btfsc	0xca, 0x3, 0x1     
006a64   0189     movlb	0x89               
006a66   0200     mulwf	0, 0               
006a68   023e     mulwf	0x3e, 0                data 0x023E, 0x0ACD, 0x3E81, 0xD320 ; 6A68
006a6a   0acd     xorlw	0xcd               
006a6c   3e81     incfsz	0x81, 0x1, 0      
006a6e   d320     bra	0x70b0               
006a70   2305     addwfc	0x5, 0x1, 0x1         data 0x2305, 0x3E0B, 0xA11F, 0x0420 ; 6A70
006a72   3e0b     incfsz	0xb, 0x1, 0       
006a74   a11f     btfss	0x1f, 0, 0x1       
006a76   0420     decf	0x20, 0, 0          
006a78   0a3e     xorlw	0x3e                   data 0x0A3E, 0x05D3, 0xA8AF, 0xE820 ; 6A78
006a7a   05d3     decf	0xd3, 0, 0x1        
006a7c   a8af     btfss	0xaf, 0x4, 0       
006a7e   e820     dw	0xe820  ;unknown opcode 
006a80   20a9     addwfc	0xa9, 0, 0            data 0x20A9, 0xC9E5, 0x0021, 0xCD7E ; 6A80
006a82   c9e5     movff	0x9e5, 0x21        
006a84   0021
006a86   cd7e     movff	0xd7e, 0x48        
006a88   8048
006a88   8048     bsf	0x48, 0, 0               data 0x8048, 0x2377, 0x3E0B, 0xA800 ; 6A88
006a8a   2377     addwfc	0x77, 0x1, 0x1    
006a8c   3e0b     incfsz	0xb, 0x1, 0       
006a8e   a800     btfss	0, 0x4, 0          
006a90   f520     dw	0xf520  ;unknown opcode     data 0xF520, 0x20A9, 0xC9F2, 0xCB21 ; 6A90
006a92   20a9     addwfc	0xa9, 0, 0        
006a94   c9f2     movff	0x9f2, 0xb21       
006a96   cb21
006a98   cd8a     movff	0xd8a, 0xeb            data 0xCD8A, 0x80EB, 0x0121, 0x3E7E ; 6A98
006a9a   80eb
006a9c   0121     movlb	0x21               
006a9e   3e7e     incfsz	0x7e, 0x1, 0      
006aa0   cd02     movff	0xd02, 0x10a           data 0xCD02, 0x810A, 0xE821, 0xCD8A ; 6AA0
006aa2   810a
006aa4   e821     dw	0xe821  ;unknown opcode 
006aa6   cd8a     movff	0xd8a, 0xeb        
006aa8   80eb
006aa8   80eb     bsf	0xeb, 0, 0               data 0x80EB, 0x0221, 0x3E7E, 0xCD02 ; 6AA8
006aaa   0221     mulwf	0x21, 0            
006aac   3e7e     incfsz	0x7e, 0x1, 0      
006aae   cd02     movff	0xd02, 0x10a       
006ab0   810a
006ab0   810a     bsf	0xa, 0, 0x1              data 0x810A, 0x0A3E, 0x05D3, 0x21C9 ; 6AB0
006ab2   0a3e     xorlw	0x3e               
006ab4   05d3     decf	0xd3, 0, 0x1        
006ab6   21c9     addwfc	0xc9, 0, 0x1      
006ab8   8af4     bsf	0xf4, 0x5, 0             data 0x8AF4, 0xEBCD, 0x2180, 0x7E01 ; 6AB8
006aba   ebcd     dw	0xebcd  ;unknown opcode 
006abc   2180     addwfc	0x80, 0, 0x1      
006abe   7e01     btg	0x1, 0x7, 0          
006ac0   023e     mulwf	0x3e, 0                data 0x023E, 0x0ACD, 0x2181, 0x8B12 ; 6AC0
006ac2   0acd     xorlw	0xcd               
006ac4   2181     addwfc	0x81, 0, 0x1      
006ac6   8b12     bsf	0x12, 0x5, 0x1       
006ac8   ebcd     dw	0xebcd  ;unknown opcode     data 0xEBCD, 0x2180, 0x7E02, 0x023E ; 6AC8
006aca   2180     addwfc	0x80, 0, 0x1      
006acc   7e02     btg	0x2, 0x7, 0          
006ace   023e     mulwf	0x3e, 0            
006ad0   0acd     xorlw	0xcd                   data 0x0ACD, 0x3E81, 0xD30A, 0xC905 ; 6AD0
006ad2   3e81     incfsz	0x81, 0x1, 0      
006ad4   d30a     bra	0x70ea               
006ad6   c905     movff	0x905, 0x321       
006ad8   2321
006ad8   2321     addwfc	0x21, 0x1, 0x1        data 0x2321, 0xCD8B, 0x80EB, 0xDDC9 ; 6AD8
006ada   cd8b     movff	0xd8b, 0xeb        
006adc   80eb
006ade   ddc9     rcall	0x6672             
006ae0   0021     dw	0x21  ;unknown opcode     data 0x0021, 0xDD7E, 0xE1E5, 0xEE7E ; 6AE0
006ae2   dd7e     rcall	0x65e0             
006ae4   e1e5     bnz	0x6ab0               
006ae6   ee7e     dw	0xee7e  ;unknown opcode 
006ae8   c800     movff	0x800, 0x5ee           data 0xC800, 0xE5EE, 0x2E28, 0x7EDD ; 6AE8
006aea   e5ee
006aec   2e28     decfsz	0x28, 0x1, 0      
006aee   7edd     btg	0xdd, 0x7, 0         
006af0   fe0b     dw	0xfe0b  ;unknown opcode     data 0xFE0B, 0x280F, 0x0627, 0x7E08 ; 6AF0
006af2   280f     incf	0xf, 0, 0           
006af4   0627     decf	0x27, 0x1, 0        
006af6   7e08     btg	0x8, 0x7, 0          
006af8   05d3     decf	0xd3, 0, 0x1            data 0x05D3, 0x1023, 0x3EFA, 0xD32E ; 6AF8
006afa   1023     iorwf	0x23, 0, 0         
006afc   3efa     incfsz	0xfa, 0x1, 0      
006afe   d32e     bra	0x715c               
006b00   0605     decf	0x5, 0x1, 0             data 0x0605, 0x7E03, 0x05D3, 0x1023 ; 6B00
006b02   7e03     btg	0x3, 0x7, 0          
006b04   05d3     decf	0xd3, 0, 0x1        
006b06   1023     iorwf	0x23, 0, 0         
006b08   3efa     incfsz	0xfa, 0x1, 0          data 0x3EFA, 0xD320, 0x1105, 0x0011 ; 6B08
006b0a   d320     bra	0x714c               
006b0c   1105     iorwf	0x5, 0, 0x1        
006b0e   0011     retfie	0x1               
006b10   0619     decf	0x19, 0x1, 0            data 0x0619, 0x3E0A, 0xCD04, 0x80F5 ; 6B10
006b12   3e0a     incfsz	0xa, 0x1, 0       
006b14   cd04     movff	0xd04, 0xf5        
006b16   80f5
006b18   0a3e     xorlw	0x3e                   data 0x0A3E, 0x05D3, 0x2011, 0xDD00 ; 6B18
006b1a   05d3     decf	0xd3, 0, 0x1        
006b1c   2011     addwfc	0x11, 0, 0        
006b1e   dd00     rcall	0x6520             
006b20   dd19     rcall	0x6554                 data 0xDD19, 0xE1E5, 0x0011, 0x3780 ; 6B20
006b22   e1e5     bnz	0x6aee               
006b24   0011     retfie	0x1               
006b26   3780     rlcf	0x80, 0x1, 0x1      
006b28   ed3f     call	0xa47e, 0x1             data 0xED3F, 0x2052, 0xCDB6, 0x8DF5 ; 6B28
006b2a   2052
006b2c   cdb6     movff	0xdb6, 0xdf5       
006b2e   8df5
006b30   dfd2     rcall	0x6ad6                 data 0xDFD2, 0x3A89, 0x8B5C, 0x00FE ; 6B30
006b32   3a89     swapf	0x89, 0x1, 0       
006b34   8b5c     bsf	0x5c, 0x5, 0x1       
006b36   00fe     dw	0xfe  ;unknown opcode 
006b38   fec8     dw	0xfec8  ;unknown opcode     data 0xFEC8, 0xCA54, 0x89B7, 0x45FE ; 6B38
006b3a   ca54     movff	0xa54, 0x9b7       
006b3c   89b7
006b3e   45fe     rlncf	0xfe, 0, 0x1       
006b40   96ca     bcf	0xca, 0x3, 0             data 0x96CA, 0xC389, 0x89D8, 0x614D ; 6B40
006b42   c389     movff	0x389, 0x9d8       
006b44   89d8
006b46   614d     cpfslt	0x4d, 0x1         
006b48   756e     btg	0x6e, 0x2, 0x1           data 0x756E, 0x6166, 0x7463, 0x7275 ; 6B48
006b4a   6166     cpfslt	0x66, 0x1         
006b4c   7463     btg	0x63, 0x2, 0         
006b4e   7275     btg	0x75, 0x1, 0         
006b50   7265     btg	0x65, 0x1, 0             data 0x7265, 0x4920, 0x3A44, 0x2020 ; 6B50
006b52   4920     infsnz	0x20, 0, 0x1      
006b54   3a44     swapf	0x44, 0x1, 0       
006b56   2020     addwfc	0x20, 0, 0        
006b58   4f00     dcfsnz	0, 0x1, 0x1           data 0x4F00, 0x4D45, 0x4920, 0x3A44 ; 6B58
006b5a   4d45     dcfsnz	0x45, 0, 0x1      
006b5c   4920     infsnz	0x20, 0, 0x1      
006b5e   3a44     swapf	0x44, 0x1, 0       
006b60   2020     addwfc	0x20, 0, 0            data 0x2020, 0x2020, 0x2020, 0x2020 ; 6B60
006b62   2020     addwfc	0x20, 0, 0        
006b64   2020     addwfc	0x20, 0, 0        
006b66   2020     addwfc	0x20, 0, 0        
006b68   2020     addwfc	0x20, 0, 0            data 0x2020, 0x0020, 0x7250, 0x646F ; 6B68
006b6a   0020     dw	0x20  ;unknown opcode 
006b6c   7250     btg	0x50, 0x1, 0         
006b6e   646f     cpfsgt	0x6f, 0           
006b70   6375     cpfseq	0x75, 0x1             data 0x6375, 0x2074, 0x614E, 0x656D ; 6B70
006b72   2074     addwfc	0x74, 0, 0        
006b74   614e     cpfslt	0x4e, 0x1         
006b76   656d     cpfsgt	0x6d, 0x1         
006b78   203a     addwfc	0x3a, 0, 0            data 0x203A, 0x2020, 0x2020, 0x5000 ; 6B78
006b7a   2020     addwfc	0x20, 0, 0        
006b7c   2020     addwfc	0x20, 0, 0        
006b7e   5000     movf	0, 0, 0             
006b80   6f72     movwf	0x72, 0x1              data 0x6F72, 0x7564, 0x7463, 0x5220 ; 6B80
006b82   7564     btg	0x64, 0x2, 0x1       
006b84   7463     btg	0x63, 0x2, 0         
006b86   5220     movf	0x20, 0x1, 0        
006b88   7665     btg	0x65, 0x3, 0             data 0x7665, 0x7369, 0x6F69, 0x3A6E ; 6B88
006b8a   7369     btg	0x69, 0x1, 0x1       
006b8c   6f69     movwf	0x69, 0x1          
006b8e   3a6e     swapf	0x6e, 0x1, 0       
006b90   0020     dw	0x20  ;unknown opcode     data 0x0020, 0x7250, 0x646F, 0x6375 ; 6B90
006b92   7250     btg	0x50, 0x1, 0         
006b94   646f     cpfsgt	0x6f, 0           
006b96   6375     cpfseq	0x75, 0x1         
006b98   2074     addwfc	0x74, 0, 0            data 0x2074, 0x6553, 0x6972, 0x6C61 ; 6B98
006b9a   6553     cpfsgt	0x53, 0x1         
006b9c   6972     setf	0x72, 0x1           
006b9e   6c61     negf	0x61, 0             
006ba0   203a     addwfc	0x3a, 0, 0            data 0x203A, 0x2020, 0x4D00, 0x6E61 ; 6BA0
006ba2   2020     addwfc	0x20, 0, 0        
006ba4   4d00     dcfsnz	0, 0, 0x1         
006ba6   6e61     movwf	0x61, 0            
006ba8   6675     tstfsz	0x75, 0               data 0x6675, 0x6361, 0x7574, 0x6572 ; 6BA8
006baa   6361     cpfseq	0x61, 0x1         
006bac   7574     btg	0x74, 0x2, 0x1       
006bae   6572     cpfsgt	0x72, 0x1         
006bb0   4420     rlncf	0x20, 0, 0             data 0x4420, 0x7461, 0x3A65, 0x3220 ; 6BB0
006bb2   7461     btg	0x61, 0x2, 0         
006bb4   3a65     swapf	0x65, 0x1, 0       
006bb6   3220     rrcf	0x20, 0x1, 0        
006bb8   0030     dw	0x30  ;unknown opcode     data 0x0030, 0x6944, 0x6B73, 0x5320 ; 6BB8
006bba   6944     setf	0x44, 0x1           
006bbc   6b73     clrf	0x73, 0x1           
006bbe   5320     movf	0x20, 0x1, 0x1      
006bc0   7a69     btg	0x69, 0x5, 0             data 0x7A69, 0x2065, 0x4D28, 0x2942 ; 6BC0
006bc2   2065     addwfc	0x65, 0, 0        
006bc4   4d28     dcfsnz	0x28, 0, 0x1      
006bc6   2942     incf	0x42, 0, 0x1        
006bc8   203a     addwfc	0x3a, 0, 0            data 0x203A, 0x4400, 0x7369, 0x206B ; 6BC8
006bca   4400     rlncf	0, 0, 0            
006bcc   7369     btg	0x69, 0x1, 0x1       
006bce   206b     addwfc	0x6b, 0, 0        
006bd0   6f63     movwf	0x63, 0x1              data 0x6F63, 0x6D6D, 0x6E61, 0x2064 ; 6BD0
006bd2   6d6d     negf	0x6d, 0x1           
006bd4   6e61     movwf	0x61, 0            
006bd6   2064     addwfc	0x64, 0, 0        
006bd8   7265     btg	0x65, 0x1, 0             data 0x7265, 0x6F72, 0x2C72, 0x4320 ; 6BD8
006bda   6f72     movwf	0x72, 0x1          
006bdc   2c72     decfsz	0x72, 0, 0        
006bde   4320     rrncf	0x20, 0x1, 0x1     
006be0   6d6f     negf	0x6f, 0x1               data 0x6D6F, 0x616D, 0x646E, 0x0020 ; 6BE0
006be2   616d     cpfslt	0x6d, 0x1         
006be4   646e     cpfsgt	0x6e, 0           
006be6   0020     dw	0x20  ;unknown opcode 
006be8   202c     addwfc	0x2c, 0, 0            data 0x202C, 0x6552, 0x7073, 0x6E6F ; 6BE8
006bea   6552     cpfsgt	0x52, 0x1         
006bec   7073     btg	0x73, 0, 0           
006bee   6e6f     movwf	0x6f, 0            
006bf0   6573     cpfsgt	0x73, 0x1             data 0x6573, 0x0020, 0x6944, 0x6B73 ; 6BF0
006bf2   0020     dw	0x20  ;unknown opcode 
006bf4   6944     setf	0x44, 0x1           
006bf6   6b73     clrf	0x73, 0x1           
006bf8   6120     cpfslt	0x20, 0x1             data 0x6120, 0x6363, 0x7365, 0x2073 ; 6BF8
006bfa   6363     cpfseq	0x63, 0x1         
006bfc   7365     btg	0x65, 0x1, 0x1       
006bfe   2073     addwfc	0x73, 0, 0        
006c00   6974     setf	0x74, 0x1               data 0x6974, 0x656D, 0x756F, 0x2C74 ; 6C00
006c02   656d     cpfsgt	0x6d, 0x1         
006c04   756f     btg	0x6f, 0x2, 0x1       
006c06   2c74     decfsz	0x74, 0, 0        
006c08   4320     rrncf	0x20, 0x1, 0x1         data 0x4320, 0x6D6F, 0x616D, 0x646E ; 6C08
006c0a   6d6f     negf	0x6f, 0x1           
006c0c   616d     cpfslt	0x6d, 0x1         
006c0e   646e     cpfsgt	0x6e, 0           
006c10   0020     dw	0x20  ;unknown opcode     data 0x0020, 0x202C, 0x614C, 0x7473 ; 6C10
006c12   202c     addwfc	0x2c, 0, 0        
006c14   614c     cpfslt	0x4c, 0x1         
006c16   7473     btg	0x73, 0x2, 0         
006c18   5220     movf	0x20, 0x1, 0            data 0x5220, 0x7365, 0x6F70, 0x736E ; 6C18
006c1a   7365     btg	0x65, 0x1, 0x1       
006c1c   6f70     movwf	0x70, 0x1          
006c1e   736e     btg	0x6e, 0x1, 0x1       
006c20   2065     addwfc	0x65, 0, 0            data 0x2065, 0x5500, 0x6B6E, 0x6F6E ; 6C20
006c22   5500     subfwb	0, 0, 0x1         
006c24   6b6e     clrf	0x6e, 0x1           
006c26   6f6e     movwf	0x6e, 0x1          
006c28   6e77     movwf	0x77, 0                data 0x6E77, 0x6420, 0x7369, 0x206B ; 6C28
006c2a   6420     cpfsgt	0x20, 0           
006c2c   7369     btg	0x69, 0x1, 0x1       
006c2e   206b     addwfc	0x6b, 0, 0        
006c30   7265     btg	0x65, 0x1, 0             data 0x7265, 0x6F72, 0x0A72, 0x4C00 ; 6C30
006c32   6f72     movwf	0x72, 0x1          
006c34   0a72     xorlw	0x72               
006c36   4c00     dcfsnz	0, 0, 0           
006c38   616f     cpfslt	0x6f, 0x1             data 0x616F, 0x6964, 0x676E, 0x6220 ; 6C38
006c3a   6964     setf	0x64, 0x1           
006c3c   676e     tstfsz	0x6e, 0x1         
006c3e   6220     cpfseq	0x20, 0           
006c40   6f6c     movwf	0x6c, 0x1              data 0x6F6C, 0x6B63, 0x0020, 0x6163 ; 6C40
006c42   6b63     clrf	0x63, 0x1           
006c44   0020     dw	0x20  ;unknown opcode 
006c46   6163     cpfslt	0x63, 0x1         
006c48   6c6c     negf	0x6c, 0                 data 0x6C6C, 0x6E69, 0x2E67, 0x2E2E ; 6C48
006c4a   6e69     movwf	0x69, 0            
006c4c   2e67     decfsz	0x67, 0x1, 0      
006c4e   2e2e     decfsz	0x2e, 0x1, 0      
006c50   0020     dw	0x20  ;unknown opcode     data 0x0020, 0x6572, 0x7574, 0x6E72 ; 6C50
006c52   6572     cpfsgt	0x72, 0x1         
006c54   7574     btg	0x74, 0x2, 0x1       
006c56   6e72     movwf	0x72, 0            
006c58   6465     cpfsgt	0x65, 0               data 0x6465, 0x0000, 0x0000, 0x0000 ; 6C58
006c5a   0000     nop                      
006c5c   0000     nop                      
006c5e   0000     nop                      
006c60   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6C60
006c62   0000     nop                      
006c64   0000     nop                      
006c66   0000     nop                      
006c68   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6C68
006c6a   0000     nop                      
006c6c   0000     nop                      
006c6e   0000     nop                      
006c70   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 6C70
006c72   0000     nop                      
006c74   0000     nop                      
006c76   0000     nop                      
006c78   e500     bnov	0x6c7a                  data 0xE500, 0xC5D5, 0xCDF5, 0x88E6 ; 6C78
006c7a   c5d5     movff	0x5d5, 0xdf5       
006c7c   cdf5
006c7e   88e6     bsf	0xe6, 0x4, 0         
006c80   06da     decf	0xda, 0x1, 0            data 0x06DA, 0x3A8D, 0x7E0D, 0x3832 ; 6C80
006c82   3a8d     swapf	0x8d, 0x1, 0       
006c84   7e0d     btg	0xd, 0x7, 0          
006c86   3832     swapf	0x32, 0, 0         
006c88   2a8f     incf	0x8f, 0x1, 0            data 0x2A8F, 0x7E0E, 0x4322, 0x3A8F ; 6C88
006c8a   7e0e     btg	0xe, 0x7, 0          
006c8c   4322     rrncf	0x22, 0x1, 0x1     
006c8e   3a8f     swapf	0x8f, 0x1, 0       
006c90   7e10     btg	0x10, 0x7, 0             data 0x7E10, 0x3E32, 0x2A8F, 0x7E11 ; 6C90
006c92   3e32     incfsz	0x32, 0x1, 0      
006c94   2a8f     incf	0x8f, 0x1, 0        
006c96   7e11     btg	0x11, 0x7, 0         
006c98   0f7c     addlw	0x7c                   data 0x0F7C, 0x0F0F, 0x570F, 0xF0E6 ; 6C98
006c9a   0f0f     addlw	0xf                
006c9c   570f     subfwb	0xf, 0x1, 0x1     
006c9e   f0e6     dw	0xf0e6  ;unknown opcode 
006ca0   7a5f     btg	0x5f, 0x5, 0             data 0x7A5F, 0x0FE6, 0x7D57, 0xF0E6 ; 6CA0
006ca2   0fe6     addlw	0xe6               
006ca4   7d57     btg	0x57, 0x6, 0x1       
006ca6   f0e6     dw	0xf0e6  ;unknown opcode 
006ca8   0f0f     addlw	0xf                    data 0x0F0F, 0x0F0F, 0x5FB3, 0xE67D ; 6CA8
006caa   0f0f     addlw	0xf                
006cac   5fb3     subwf	0xb3, 0x1, 0x1     
006cae   e67d     bn	0x6daa                
006cb0   280f     incf	0xf, 0, 0               data 0x280F, 0x1301, 0x53ED, 0x8F2C ; 6CB0
006cb2   1301     iorwf	0x1, 0x1, 0x1      
006cb4   53ed     movf	0xed, 0x1, 0x1      
006cb6   8f2c     bsf	0x2c, 0x7, 0x1       
006cb8   0011     retfie	0x1                   data 0x0011, 0xED00, 0x2E53, 0x2A8F ; 6CB8
006cba   ed00     call	0x1ca600, 0x1       
006cbc   2e53
006cbe   2a8f     incf	0x8f, 0x1, 0        
006cc0   7e13     btg	0x13, 0x7, 0             data 0x7E13, 0x4522, 0x218F, 0x0000 ; 6CC0
006cc2   4522     rlncf	0x22, 0, 0x1       
006cc4   218f     addwfc	0x8f, 0, 0x1      
006cc6   0000     nop                      
006cc8   4722     rlncf	0x22, 0x1, 0x1         data 0x4722, 0x2A8F, 0x7E16, 0x3F22 ; 6CC8
006cca   2a8f     incf	0x8f, 0x1, 0        
006ccc   7e16     btg	0x16, 0x7, 0         
006cce   3f22     incfsz	0x22, 0x1, 0x1    
006cd0   218f     addwfc	0x8f, 0, 0x1          data 0x218F, 0x0000, 0x4122, 0x218F ; 6CD0
006cd2   0000     nop                      
006cd4   4122     rrncf	0x22, 0, 0x1       
006cd6   218f     addwfc	0x8f, 0, 0x1      
006cd8   8f45     bsf	0x45, 0x7, 0x1           data 0x8F45, 0x003E, 0xA1ED, 0x1020 ; 6CD8
006cda   003e     dw	0x3e  ;unknown opcode 
006cdc   a1ed     btfss	0xed, 0, 0x1       
006cde   1020     iorwf	0x20, 0, 0         
006ce0   a1ed     btfss	0xed, 0, 0x1           data 0xA1ED, 0x0C20, 0x202A, 0x227E ; 6CE0
006ce2   0c20     retlw	0x20               
006ce4   202a     addwfc	0x2a, 0, 0        
006ce6   227e     addwfc	0x7e, 0x1, 0      
006ce8   8f45     bsf	0x45, 0x7, 0x1           data 0x8F45, 0x222A, 0x227E, 0x8F47 ; 6CE8
006cea   222a     addwfc	0x2a, 0x1, 0      
006cec   227e     addwfc	0x7e, 0x1, 0      
006cee   8f47     bsf	0x47, 0x7, 0x1       
006cf0   0121     movlb	0x21                   data 0x0121, 0x2200, 0x8F39, 0x0021 ; 6CF0
006cf2   2200     addwfc	0, 0x1, 0         
006cf4   8f39     bsf	0x39, 0x7, 0x1       
006cf6   0021     dw	0x21  ;unknown opcode 
006cf8   3200     rrcf	0, 0x1, 0               data 0x3200, 0x8F3B, 0x003E, 0x3D32 ; 6CF8
006cfa   8f3b     bsf	0x3b, 0x7, 0x1       
006cfc   003e     dw	0x3e  ;unknown opcode 
006cfe   3d32     incfsz	0x32, 0, 0x1      
006d00   3a8f     swapf	0x8f, 0x1, 0           data 0x3A8F, 0x00A3, 0x06EE, 0x29CA ; 6D00
006d02   00a3     dw	0xa3  ;unknown opcode 
006d04   06ee     decf	0xee, 0x1, 0        
006d06   29ca     incf	0xca, 0, 0x1        
006d08   2a8c     incf	0x8c, 0x1, 0            data 0x2A8C, 0x7E24, 0x3F22, 0x2A8F ; 6D08
006d0a   7e24     btg	0x24, 0x7, 0         
006d0c   3f22     incfsz	0x22, 0x1, 0x1    
006d0e   2a8f     incf	0x8f, 0x1, 0        
006d10   7e26     btg	0x26, 0x7, 0             data 0x7E26, 0x4122, 0x3A8F, 0x7E28 ; 6D10
006d12   4122     rrncf	0x22, 0, 0x1       
006d14   3a8f     swapf	0x8f, 0x1, 0       
006d16   7e28     btg	0x28, 0x7, 0         
006d18   0fe6     addlw	0xe6                   data 0x0FE6, 0x3D32, 0x2A8F, 0x7E2C ; 6D18
006d1a   3d32     incfsz	0x32, 0, 0x1      
006d1c   2a8f     incf	0x8f, 0x1, 0        
006d1e   7e2c     btg	0x2c, 0x7, 0         
006d20   3922     swapf	0x22, 0, 0x1           data 0x3922, 0x2A8F, 0x7E2E, 0x3B22 ; 6D20
006d22   2a8f     incf	0x8f, 0x1, 0        
006d24   7e2e     btg	0x2e, 0x7, 0         
006d26   3b22     swapf	0x22, 0x1, 0x1     
006d28   2a8f     incf	0x8f, 0x1, 0            data 0x2A8F, 0x8F43, 0x9022, 0x2186 ; 6D28
006d2a   8f43     bsf	0x43, 0x7, 0x1       
006d2c   9022     bcf	0x22, 0, 0           
006d2e   2186     addwfc	0x86, 0, 0x1      
006d30   0000     nop                          data 0x0000, 0x9222, 0x2A86, 0x8B62 ; 6D30
006d32   9222     bcf	0x22, 0x1, 0         
006d34   2a86     incf	0x86, 0x1, 0        
006d36   8b62     bsf	0x62, 0x5, 0x1       
006d38   9422     bcf	0x22, 0x2, 0             data 0x9422, 0x2A86, 0x8B64, 0x9622 ; 6D38
006d3a   2a86     incf	0x86, 0x1, 0        
006d3c   8b64     bsf	0x64, 0x5, 0x1       
006d3e   9622     bcf	0x22, 0x3, 0         
006d40   cd86     movff	0xd86, 0x43f           data 0xCD86, 0x843F, 0x3F2A, 0x228F ; 6D40
006d42   843f
006d44   3f2a     incfsz	0x2a, 0x1, 0x1    
006d46   228f     addwfc	0x8f, 0x1, 0      
006d48   8694     bsf	0x94, 0x3, 0             data 0x8694, 0x412A, 0x228F, 0x8696 ; 6D48
006d4a   412a     rrncf	0x2a, 0, 0x1       
006d4c   228f     addwfc	0x8f, 0x1, 0      
006d4e   8696     bsf	0x96, 0x3, 0         
006d50   3d3a     incfsz	0x3a, 0, 0x1          data 0x3D3A, 0xFE8F, 0x2800, 0x4706 ; 6D50
006d52   fe8f     dw	0xfe8f  ;unknown opcode 
006d54   2800     incf	0, 0, 0             
006d56   4706     rlncf	0x6, 0x1, 0x1      
006d58   3fcd     incfsz	0xcd, 0x1, 0x1        data 0x3FCD, 0x1084, 0x2AFB, 0x8690 ; 6D58
006d5a   1084     iorwf	0x84, 0, 0         
006d5c   2afb     incf	0xfb, 0x1, 0        
006d5e   8690     bsf	0x90, 0x3, 0         
006d60   2822     incf	0x22, 0, 0              data 0x2822, 0x2A8F, 0x8692, 0x2A22 ; 6D60
006d62   2a8f     incf	0x8f, 0x1, 0        
006d64   8692     bsf	0x92, 0x3, 0         
006d66   2a22     incf	0x22, 0x1, 0        
006d68   3a8f     swapf	0x8f, 0x1, 0           data 0x3A8F, 0x8F3D, 0x3A47, 0x8F3E ; 6D68
006d6a   8f3d     bsf	0x3d, 0x7, 0x1       
006d6c   3a47     swapf	0x47, 0x1, 0       
006d6e   8f3e     bsf	0x3e, 0x7, 0x1       
006d70   4790     rlncf	0x90, 0x1, 0x1         data 0x4790, 0x3FCD, 0x1084, 0x3AFB ; 6D70
006d72   3fcd     incfsz	0xcd, 0x1, 0x1    
006d74   1084     iorwf	0x84, 0, 0         
006d76   3afb     swapf	0xfb, 0x1, 0       
006d78   00a3     dw	0xa3  ;unknown opcode     data 0x00A3, 0x06FE, 0x1B20, 0x902A ; 6D78
006d7a   06fe     decf	0xfe, 0x1, 0        
006d7c   1b20     xorwf	0x20, 0x1, 0x1     
006d7e   902a     bcf	0x2a, 0, 0           
006d80   2286     addwfc	0x86, 0x1, 0          data 0x2286, 0x8F30, 0x922A, 0x2286 ; 6D80
006d82   8f30     bsf	0x30, 0x7, 0x1       
006d84   922a     bcf	0x2a, 0x1, 0         
006d86   2286     addwfc	0x86, 0x1, 0      
006d88   8f32     bsf	0x32, 0x7, 0x1           data 0x8F32, 0x2C2A, 0x228F, 0x8694 ; 6D88
006d8a   2c2a     decfsz	0x2a, 0, 0        
006d8c   228f     addwfc	0x8f, 0x1, 0      
006d8e   8694     bsf	0x94, 0x3, 0         
006d90   2e2a     decfsz	0x2a, 0x1, 0          data 0x2E2A, 0x228F, 0x8696, 0x3FCD ; 6D90
006d92   228f     addwfc	0x8f, 0x1, 0      
006d94   8696     bsf	0x96, 0x3, 0         
006d96   3fcd     incfsz	0xcd, 0x1, 0x1    
006d98   3a84     swapf	0x84, 0x1, 0           data 0x3A84, 0x8F38, 0x266F, 0x2900 ; 6D98
006d9a   8f38     bsf	0x38, 0x7, 0x1       
006d9c   266f     addwf	0x6f, 0x1, 0       
006d9e   2900     incf	0, 0, 0x1           
006da0   5bed     subwfb	0xed, 0x1, 0x1        data 0x5BED, 0x8690, 0x37EB, 0xED3F ; 6DA0
006da2   8690     bsf	0x90, 0x3, 0         
006da4   37eb     rlcf	0xeb, 0x1, 0x1      
006da6   ed3f     call	0x4a47e, 0x1        
006da8   2252
006da8   2252     addwfc	0x52, 0x1, 0          data 0x2252, 0x8F34, 0x0011, 0x2A00 ; 6DA8
006daa   8f34     bsf	0x34, 0x7, 0x1       
006dac   0011     retfie	0x1               
006dae   2a00     incf	0, 0x1, 0           
006db0   8692     bsf	0x92, 0x3, 0             data 0x8692, 0x52ED, 0x3622, 0x2A8F ; 6DB0
006db2   52ed     movf	0xed, 0x1, 0        
006db4   3622     rlcf	0x22, 0x1, 0        
006db6   2a8f     incf	0x8f, 0x1, 0        
006db8   8f34     bsf	0x34, 0x7, 0x1           data 0x8F34, 0x9022, 0x2A86, 0x8F36 ; 6DB8
006dba   9022     bcf	0x22, 0, 0           
006dbc   2a86     incf	0x86, 0x1, 0        
006dbe   8f36     bsf	0x36, 0x7, 0x1       
006dc0   9222     bcf	0x22, 0x1, 0             data 0x9222, 0x2A86, 0x8B62, 0x9422 ; 6DC0
006dc2   2a86     incf	0x86, 0x1, 0        
006dc4   8b62     bsf	0x62, 0x5, 0x1       
006dc6   9422     bcf	0x22, 0x2, 0         
006dc8   2a86     incf	0x86, 0x1, 0            data 0x2A86, 0x8B64, 0x9622, 0xCD86 ; 6DC8
006dca   8b64     bsf	0x64, 0x5, 0x1       
006dcc   9622     bcf	0x22, 0x3, 0         
006dce   cd86     movff	0xd86, 0x486       
006dd0   8486
006dd0   8486     bsf	0x86, 0x2, 0             data 0x8486, 0x452A, 0x228F, 0x8690 ; 6DD0
006dd2   452a     rlncf	0x2a, 0, 0x1       
006dd4   228f     addwfc	0x8f, 0x1, 0      
006dd6   8690     bsf	0x90, 0x3, 0         
006dd8   472a     rlncf	0x2a, 0x1, 0x1         data 0x472A, 0x228F, 0x8692, 0x92CD ; 6DD8
006dda   228f     addwfc	0x8f, 0x1, 0      
006ddc   8692     bsf	0x92, 0x3, 0         
006dde   92cd     bcf	0xcd, 0x1, 0         
006de0   3a84     swapf	0x84, 0x1, 0           data 0x3A84, 0x8F38, 0x266F, 0x2200 ; 6DE0
006de2   8f38     bsf	0x38, 0x7, 0x1       
006de4   266f     addwf	0x6f, 0x1, 0       
006de6   2200     addwfc	0, 0x1, 0         
006de8   8694     bsf	0x94, 0x3, 0             data 0x8694, 0x0021, 0x2200, 0x8696 ; 6DE8
006dea   0021     dw	0x21  ;unknown opcode 
006dec   2200     addwfc	0, 0x1, 0         
006dee   8696     bsf	0x96, 0x3, 0         
006df0   d5cd     bra	0x698c                   data 0xD5CD, 0x2A84, 0x8698, 0x2422 ; 6DF0
006df2   2a84     incf	0x84, 0x1, 0        
006df4   8698     bsf	0x98, 0x3, 0         
006df6   2422     addwf	0x22, 0, 0         
006df8   2a8f     incf	0x8f, 0x1, 0            data 0x2A8F, 0x869A, 0x2622, 0xF18F ; 6DF8
006dfa   869a     bsf	0x9a, 0x3, 0         
006dfc   2622     addwf	0x22, 0x1, 0       
006dfe   f18f     dw	0xf18f  ;unknown opcode 
006e00   d1c1     bra	0x7184                   data 0xD1C1, 0x37E1, 0xC93F, 0xC1F1 ; 6E00
006e02   37e1     rlcf	0xe1, 0x1, 0x1      
006e04   c93f     movff	0x93f, 0x1f1       
006e06   c1f1
006e08   e1d1     bnz	0x6dac                   data 0xE1D1, 0xC937, 0xD5E5, 0xF5C5 ; 6E08
006e0a   c937     movff	0x937, 0x5e5       
006e0c   d5e5
006e0e   f5c5     dw	0xf5c5  ;unknown opcode 
006e10   a33a     btfss	0x3a, 0x1, 0x1         data 0xA33A, 0xEE00, 0x2806, 0x3E42 ; 6E10
006e12   ee00     lfsr	0, 0x6              
006e14   2806
006e16   3e42     incfsz	0x42, 0x1, 0      
006e18   2100     addwfc	0, 0, 0x1             data 0x2100, 0x8F19, 0x0301, 0xED00 ; 6E18
006e1a   8f19     bsf	0x19, 0x7, 0x1       
006e1c   0301     mulwf	0x1, 0x1           
006e1e   ed00     call	0x14200, 0x1        
006e20   20a1
006e20   20a1     addwfc	0xa1, 0, 0            data 0x20A1, 0xEA10, 0x8D1F, 0x183A ; 6E20
006e22   ea10     dw	0xea10  ;unknown opcode 
006e24   8d1f     bsf	0x1f, 0x6, 0x1       
006e26   183a     xorwf	0x3a, 0, 0         
006e28   fe8f     dw	0xfe8f  ;unknown opcode     data 0xFE8F, 0xCA00, 0x8DEB, 0x01FE ; 6E28
006e2a   ca00     movff	0xa00, 0xdeb       
006e2c   8deb
006e2e   01fe     movlb	0xfe               
006e30   ebca     dw	0xebca  ;unknown opcode     data 0xEBCA, 0x2A8D, 0x8F18, 0x9422 ; 6E30
006e32   2a8d     incf	0x8d, 0x1, 0        
006e34   8f18     bsf	0x18, 0x7, 0x1       
006e36   9422     bcf	0x22, 0x2, 0         
006e38   2a86     incf	0x86, 0x1, 0            data 0x2A86, 0x8F1A, 0x9622, 0x2A86 ; 6E38
006e3a   8f1a     bsf	0x1a, 0x7, 0x1       
006e3c   9622     bcf	0x22, 0x3, 0         
006e3e   2a86     incf	0x86, 0x1, 0        
006e40   8f24     bsf	0x24, 0x7, 0x1           data 0x8F24, 0x9022, 0x2A86, 0x8F26 ; 6E40
006e42   9022     bcf	0x22, 0, 0           
006e44   2a86     incf	0x86, 0x1, 0        
006e46   8f26     bsf	0x26, 0x7, 0x1       
006e48   9222     bcf	0x22, 0x1, 0             data 0x9222, 0xCD86, 0x8492, 0xA03A ; 6E48
006e4a   cd86     movff	0xd86, 0x492       
006e4c   8492
006e4e   a03a     btfss	0x3a, 0, 0         
006e50   cb86     movff	0xb86, 0x247           data 0xCB86, 0xC247, 0x8DEB, 0x98C3 ; 6E50
006e52   c247
006e54   8deb     bsf	0xeb, 0x6, 0x1       
006e56   98c3     bcf	0xc3, 0x4, 0         
006e58   af8d     btfss	0x8d, 0x7, 0x1         data 0xAF8D, 0x1921, 0xED8F, 0x20A9 ; 6E58
006e5a   1921     xorwf	0x21, 0, 0x1       
006e5c   ed8f     call	0x1531e, 0x1        
006e5e   20a9
006e60   be09     btfsc	0x9, 0x7, 0            data 0xBE09, 0xEBCA, 0x3E8D, 0xBE01 ; 6E60
006e62   ebca     dw	0xebca  ;unknown opcode 
006e64   3e8d     incfsz	0x8d, 0x1, 0      
006e66   be01     btfsc	0x1, 0x7, 0        
006e68   0e28     movlw	0x28                   data 0x0E28, 0x5BED, 0x8F18, 0x242A ; 6E68
006e6a   5bed     subwfb	0xed, 0x1, 0x1    
006e6c   8f18     bsf	0x18, 0x7, 0x1       
006e6e   242a     addwf	0x2a, 0, 0         
006e70   ed8f     call	0x10a51e, 0x1           data 0xED8F, 0x3852, 0xC376, 0x8D98 ; 6E70
006e72   3852
006e74   c376     movff	0x376, 0xd98       
006e76   8d98
006e78   302a     rrcf	0x2a, 0, 0              data 0x302A, 0x228F, 0x8F1C, 0x5BED ; 6E78
006e7a   228f     addwfc	0x8f, 0x1, 0      
006e7c   8f1c     bsf	0x1c, 0x7, 0x1       
006e7e   5bed     subwfb	0xed, 0x1, 0x1    
006e80   8f2c     bsf	0x2c, 0x7, 0x1           data 0x8F2C, 0x2219, 0x8F20, 0x322A ; 6E80
006e82   2219     addwfc	0x19, 0x1, 0      
006e84   8f20     bsf	0x20, 0x7, 0x1       
006e86   322a     rrcf	0x2a, 0x1, 0        
006e88   228f     addwfc	0x8f, 0x1, 0          data 0x228F, 0x8F1E, 0x5BED, 0x8F2E ; 6E88
006e8a   8f1e     bsf	0x1e, 0x7, 0x1       
006e8c   5bed     subwfb	0xed, 0x1, 0x1    
006e8e   8f2e     bsf	0x2e, 0x7, 0x1       
006e90   5aed     subwfb	0xed, 0x1, 0          data 0x5AED, 0x2222, 0xC38F, 0x8DD7 ; 6E90
006e92   2222     addwfc	0x22, 0x1, 0      
006e94   c38f     movff	0x38f, 0xdd7       
006e96   8dd7
006e98   182a     xorwf	0x2a, 0, 0             data 0x182A, 0x228F, 0x8694, 0x0021 ; 6E98
006e9a   228f     addwfc	0x8f, 0x1, 0      
006e9c   8694     bsf	0x94, 0x3, 0         
006e9e   0021     dw	0x21  ;unknown opcode 
006ea0   2200     addwfc	0, 0x1, 0             data 0x2200, 0x8696, 0x342A, 0x228F ; 6EA0
006ea2   8696     bsf	0x96, 0x3, 0         
006ea4   342a     rlcf	0x2a, 0, 0          
006ea6   228f     addwfc	0x8f, 0x1, 0      
006ea8   8690     bsf	0x90, 0x3, 0             data 0x8690, 0x362A, 0x228F, 0x8692 ; 6EA8
006eaa   362a     rlcf	0x2a, 0x1, 0        
006eac   228f     addwfc	0x8f, 0x1, 0      
006eae   8692     bsf	0x92, 0x3, 0         
006eb0   383a     swapf	0x3a, 0, 0             data 0x383A, 0x478F, 0x3FCD, 0x1084 ; 6EB0
006eb2   478f     rlncf	0x8f, 0x1, 0x1     
006eb4   3fcd     incfsz	0xcd, 0x1, 0x1    
006eb6   1084     iorwf	0x84, 0, 0         
006eb8   2afb     incf	0xfb, 0x1, 0            data 0x2AFB, 0x8690, 0x1C22, 0x3A8F ; 6EB8
006eba   8690     bsf	0x90, 0x3, 0         
006ebc   1c22     comf	0x22, 0, 0          
006ebe   3a8f     swapf	0x8f, 0x1, 0       
006ec0   8f38     bsf	0x38, 0x7, 0x1           data 0x8F38, 0x165F, 0x1B00, 0x2219 ; 6EC0
006ec2   165f     andwf	0x5f, 0x1, 0       
006ec4   1b00     xorwf	0, 0x1, 0x1        
006ec6   2219     addwfc	0x19, 0x1, 0      
006ec8   8f20     bsf	0x20, 0x7, 0x1           data 0x8F20, 0x922A, 0x2286, 0x8F1E ; 6EC8
006eca   922a     bcf	0x2a, 0x1, 0         
006ecc   2286     addwfc	0x86, 0x1, 0      
006ece   8f1e     bsf	0x1e, 0x7, 0x1       
006ed0   001e     dw	0x1e  ;unknown opcode     data 0x001E, 0x5AED, 0x2022, 0x2A8F ; 6ED0
006ed2   5aed     subwfb	0xed, 0x1, 0      
006ed4   2022     addwfc	0x22, 0, 0        
006ed6   2a8f     incf	0x8f, 0x1, 0        
006ed8   8f1c     bsf	0x1c, 0x7, 0x1           data 0x8F1C, 0x6222, 0x2A8B, 0x8F1E ; 6ED8
006eda   6222     cpfseq	0x22, 0           
006edc   2a8b     incf	0x8b, 0x1, 0        
006ede   8f1e     bsf	0x1e, 0x7, 0x1       
006ee0   6422     cpfsgt	0x22, 0               data 0x6422, 0xF18B, 0xD1C1, 0xCDE1 ; 6EE0
006ee2   f18b     dw	0xf18b  ;unknown opcode 
006ee4   d1c1     bra	0x7268               
006ee6   cde1     movff	0xde1, 0x8e6       
006ee8   88e6
006ee8   88e6     bsf	0xe6, 0x4, 0             data 0x88E6, 0xAFC9, 0x5C32, 0xF18B ; 6EE8
006eea   afc9     btfss	0xc9, 0x7, 0x1     
006eec   5c32     subwf	0x32, 0, 0         
006eee   f18b     dw	0xf18b  ;unknown opcode 
006ef0   d1c1     bra	0x7274                   data 0xD1C1, 0x37E1, 0xE5C9, 0xC5D5 ; 6EF0
006ef2   37e1     rlcf	0xe1, 0x1, 0x1      
006ef4   e5c9     bnov	0x6e88              
006ef6   c5d5     movff	0x5d5, 0x1f5       
006ef8   11f5
006ef8   11f5     iorwf	0xf5, 0, 0x1           data 0x11F5, 0x0000, 0x2A37, 0x8F1C ; 6EF8
006efa   0000     nop                      
006efc   2a37     incf	0x37, 0x1, 0        
006efe   8f1c     bsf	0x1c, 0x7, 0x1       
006f00   5aed     subwfb	0xed, 0x1, 0          data 0x5AED, 0x1C22, 0x2A8F, 0x8F1E ; 6F00
006f02   1c22     comf	0x22, 0, 0          
006f04   2a8f     incf	0x8f, 0x1, 0        
006f06   8f1e     bsf	0x1e, 0x7, 0x1       
006f08   5aed     subwfb	0xed, 0x1, 0          data 0x5AED, 0x1E22, 0x378F, 0xED3F ; 6F08
006f0a   1e22     comf	0x22, 0x1, 0        
006f0c   378f     rlcf	0x8f, 0x1, 0x1      
006f0e   ed3f     call	0x18b67e, 0x1       
006f10   1c5b
006f10   1c5b     comf	0x5b, 0, 0              data 0x1C5B, 0x2A8F, 0x8F20, 0x52ED ; 6F10
006f12   2a8f     incf	0x8f, 0x1, 0        
006f14   8f20     bsf	0x20, 0x7, 0x1       
006f16   52ed     movf	0xed, 0x1, 0        
006f18   5bed     subwfb	0xed, 0x1, 0x1        data 0x5BED, 0x8F1E, 0x222A, 0xED8F ; 6F18
006f1a   8f1e     bsf	0x1e, 0x7, 0x1       
006f1c   222a     addwfc	0x2a, 0x1, 0      
006f1e   ed8f     call	0x14a51e, 0x1       
006f20   da52
006f20   da52     rcall	0x73c6                 data 0xDA52, 0x8E3C, 0x1C2A, 0x228F ; 6F20
006f22   8e3c     bsf	0x3c, 0x7, 0         
006f24   1c2a     comf	0x2a, 0, 0          
006f26   228f     addwfc	0x8f, 0x1, 0      
006f28   8b62     bsf	0x62, 0x5, 0x1           data 0x8B62, 0x1E2A, 0x228F, 0x8B64 ; 6F28
006f2a   1e2a     comf	0x2a, 0x1, 0        
006f2c   228f     addwfc	0x8f, 0x1, 0      
006f2e   8b64     bsf	0x64, 0x5, 0x1       
006f30   c1f1     movff	0x1f1, 0x1d1           data 0xC1F1, 0xE1D1, 0xE6CD, 0xC988 ; 6F30
006f32   e1d1
006f34   e6cd     bn	0x6ed0                
006f36   c988     movff	0x988, 0x5e5       
006f38   d5e5
006f38   d5e5     bra	0x6b04                   data 0xD5E5, 0xF5C5, 0xA33A, 0xEE00 ; 6F38
006f3a   f5c5     dw	0xf5c5  ;unknown opcode 
006f3c   a33a     btfss	0x3a, 0x1, 0x1     
006f3e   ee00     lfsr	0, 0x6              
006f40   2806
006f40   2806     incf	0x6, 0, 0               data 0x2806, 0x2A55, 0x8F28, 0x9422 ; 6F40
006f42   2a55     incf	0x55, 0x1, 0        
006f44   8f28     bsf	0x28, 0x7, 0x1       
006f46   9422     bcf	0x22, 0x2, 0         
006f48   2a86     incf	0x86, 0x1, 0            data 0x2A86, 0x8F2A, 0x9422, 0x2A86 ; 6F48
006f4a   8f2a     bsf	0x2a, 0x7, 0x1       
006f4c   9422     bcf	0x22, 0x2, 0         
006f4e   2a86     incf	0x86, 0x1, 0        
006f50   8f18     bsf	0x18, 0x7, 0x1           data 0x8F18, 0x9022, 0x2A86, 0x8F1A ; 6F50
006f52   9022     bcf	0x22, 0, 0           
006f54   2a86     incf	0x86, 0x1, 0        
006f56   8f1a     bsf	0x1a, 0x7, 0x1       
006f58   9222     bcf	0x22, 0x1, 0             data 0x9222, 0x3E86, 0xCD07, 0x83FB ; 6F58
006f5a   3e86     incfsz	0x86, 0x1, 0      
006f5c   cd07     movff	0xd07, 0x3fb       
006f5e   83fb
006f60   3fcd     incfsz	0xcd, 0x1, 0x1        data 0x3FCD, 0x2A84, 0x8690, 0x6222 ; 6F60
006f62   2a84     incf	0x84, 0x1, 0        
006f64   8690     bsf	0x90, 0x3, 0         
006f66   6222     cpfseq	0x22, 0           
006f68   2a8b     incf	0x8b, 0x1, 0            data 0x2A8B, 0x8692, 0x6422, 0xCD8B ; 6F68
006f6a   8692     bsf	0x92, 0x3, 0         
006f6c   6422     cpfsgt	0x22, 0           
006f6e   cd8b     movff	0xd8b, 0x8e6       
006f70   88e6
006f70   88e6     bsf	0xe6, 0x4, 0             data 0x88E6, 0x0021, 0x3A7E, 0x8F18 ; 6F70
006f72   0021     dw	0x21  ;unknown opcode 
006f74   3a7e     swapf	0x7e, 0x1, 0       
006f76   8f18     bsf	0x18, 0x7, 0x1       
006f78   7fe6     btg	0xe6, 0x7, 0x1           data 0x7FE6, 0x1707, 0x3E5F, 0x1700 ; 6F78
006f7a   1707     andwf	0x7, 0x1, 0x1      
006f7c   3e5f     incfsz	0x5f, 0x1, 0      
006f7e   1700     andwf	0, 0x1, 0x1        
006f80   1957     xorwf	0x57, 0, 0x1           data 0x1957, 0x327E, 0x8F18, 0x7E23 ; 6F80
006f82   327e     rrcf	0x7e, 0x1, 0        
006f84   8f18     bsf	0x18, 0x7, 0x1       
006f86   7e23     btg	0x23, 0x7, 0         
006f88   1932     xorwf	0x32, 0, 0x1           data 0x1932, 0x238F, 0x327E, 0x8F1A ; 6F88
006f8a   238f     addwfc	0x8f, 0x1, 0x1    
006f8c   327e     rrcf	0x7e, 0x1, 0        
006f8e   8f1a     bsf	0x1a, 0x7, 0x1       
006f90   7e23     btg	0x23, 0x7, 0             data 0x7E23, 0x1B32, 0xC38F, 0x8D10 ; 6F90
006f92   1b32     xorwf	0x32, 0x1, 0x1     
006f94   c38f     movff	0x38f, 0xd10       
006f96   8d10
006f98   282a     incf	0x2a, 0, 0              data 0x282A, 0x228F, 0x8694, 0x2A2A ; 6F98
006f9a   228f     addwfc	0x8f, 0x1, 0      
006f9c   8694     bsf	0x94, 0x3, 0         
006f9e   2a2a     incf	0x2a, 0x1, 0        
006fa0   228f     addwfc	0x8f, 0x1, 0          data 0x228F, 0x8694, 0x192A, 0x228F ; 6FA0
006fa2   8694     bsf	0x94, 0x3, 0         
006fa4   192a     xorwf	0x2a, 0, 0x1       
006fa6   228f     addwfc	0x8f, 0x1, 0      
006fa8   8690     bsf	0x90, 0x3, 0             data 0x8690, 0x0026, 0x1B3A, 0x6F8F ; 6FA8
006faa   0026     dw	0x26  ;unknown opcode 
006fac   1b3a     xorwf	0x3a, 0x1, 0x1     
006fae   6f8f     movwf	0x8f, 0x1          
006fb0   9022     bcf	0x22, 0, 0               data 0x9022, 0xCD86, 0x843F, 0x902A ; 6FB0
006fb2   cd86     movff	0xd86, 0x43f       
006fb4   843f
006fb6   902a     bcf	0x2a, 0, 0           
006fb8   2286     addwfc	0x86, 0x1, 0          data 0x2286, 0x8B62, 0x922A, 0x2286 ; 6FB8
006fba   8b62     bsf	0x62, 0x5, 0x1       
006fbc   922a     bcf	0x2a, 0x1, 0         
006fbe   2286     addwfc	0x86, 0x1, 0      
006fc0   8b64     bsf	0x64, 0x5, 0x1           data 0x8B64, 0xE6CD, 0x2188, 0x7E00 ; 6FC0
006fc2   e6cd     bn	0x6f5e                
006fc4   2188     addwfc	0x88, 0, 0x1      
006fc6   7e00     btg	0, 0x7, 0            
006fc8   183a     xorwf	0x3a, 0, 0             data 0x183A, 0x378F, 0x173F, 0x3E5F ; 6FC8
006fca   378f     rlcf	0x8f, 0x1, 0x1      
006fcc   173f     andwf	0x3f, 0x1, 0x1     
006fce   3e5f     incfsz	0x5f, 0x1, 0      
006fd0   1700     andwf	0, 0x1, 0x1            data 0x1700, 0x1957, 0x32AF, 0x8F1B ; 6FD0
006fd2   1957     xorwf	0x57, 0, 0x1       
006fd4   32af     rrcf	0xaf, 0x1, 0        
006fd6   8f1b     bsf	0x1b, 0x7, 0x1       
006fd8   1a32     xorwf	0x32, 0x1, 0           data 0x1A32, 0x7E8F, 0x1932, 0x238F ; 6FD8
006fda   7e8f     btg	0x8f, 0x7, 0         
006fdc   1932     xorwf	0x32, 0, 0x1       
006fde   238f     addwfc	0x8f, 0x1, 0x1    
006fe0   327e     rrcf	0x7e, 0x1, 0            data 0x327E, 0x8F18, 0x10C3, 0x218D ; 6FE0
006fe2   8f18     bsf	0x18, 0x7, 0x1       
006fe4   10c3     iorwf	0xc3, 0, 0         
006fe6   218d     addwfc	0x8d, 0, 0x1      
006fe8   8f39     bsf	0x39, 0x7, 0x1           data 0x8F39, 0x083E, 0x0ACD, 0x3E81 ; 6FE8
006fea   083e     sublw	0x3e               
006fec   0acd     xorlw	0xcd               
006fee   3e81     incfsz	0x81, 0x1, 0      
006ff0   d320     bra	0x7632                   data 0xD320, 0x2105, 0x8F38, 0x023E ; 6FF0
006ff2   2105     addwfc	0x5, 0, 0x1       
006ff4   8f38     bsf	0x38, 0x7, 0x1       
006ff6   023e     mulwf	0x3e, 0            
006ff8   0acd     xorlw	0xcd                   data 0x0ACD, 0x3E81, 0xD320, 0x2105 ; 6FF8
006ffa   3e81     incfsz	0x81, 0x1, 0      
006ffc   d320     bra	0x763e               
006ffe   2105     addwfc	0x5, 0, 0x1       
007000   8f34     bsf	0x34, 0x7, 0x1           data 0x8F34, 0x083E, 0x0ACD, 0x3E81 ; 7000
007002   083e     sublw	0x3e               
007004   0acd     xorlw	0xcd               
007006   3e81     incfsz	0x81, 0x1, 0      
007008   d320     bra	0x764a                   data 0xD320, 0x2105, 0x8F2C, 0x083E ; 7008
00700a   2105     addwfc	0x5, 0, 0x1       
00700c   8f2c     bsf	0x2c, 0x7, 0x1       
00700e   083e     sublw	0x3e               
007010   0acd     xorlw	0xcd                   data 0x0ACD, 0x3E81, 0xD30A, 0xC905 ; 7010
007012   3e81     incfsz	0x81, 0x1, 0      
007014   d30a     bra	0x762a               
007016   c905     movff	0x905, 0           
007018   0000
007018   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7018
00701a   0000     nop                      
00701c   0000     nop                      
00701e   0000     nop                      
007020   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7020
007022   0000     nop                      
007024   0000     nop                      
007026   0000     nop                      
007028   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7028
00702a   0000     nop                      
00702c   0000     nop                      
00702e   0000     nop                      
007030   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7030
007032   0000     nop                      
007034   0000     nop                      
007036   0000     nop                      
007038   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7038
00703a   0000     nop                      
00703c   0000     nop                      
00703e   0000     nop                      
007040   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7040
007042   0000     nop                      
007044   0000     nop                      
007046   0000     nop                      
007048   c900     movff	0x900, 0x8db           data 0xC900, 0x08DB, 0x7FCB, 0xFA20 ; 7048
00704a   08db
00704c   7fcb     btg	0xcb, 0x7, 0x1       
00704e   fa20     dw	0xfa20  ;unknown opcode 
007050   07db     decf	0xdb, 0x1, 0x1          data 0x07DB, 0xF5C9, 0x08DB, 0x7FCB ; 7050
007052   f5c9     dw	0xf5c9  ;unknown opcode 
007054   08db     sublw	0xdb               
007056   7fcb     btg	0xcb, 0x7, 0x1       
007058   0828     sublw	0x28                   data 0x0828, 0x77CB, 0xF620, 0xD3F1 ; 7058
00705a   77cb     btg	0xcb, 0x3, 0x1       
00705c   f620     dw	0xf620  ;unknown opcode 
00705e   d3f1     bra	0x7842               
007060   c907     movff	0x907, 0x7db           data 0xC907, 0x07DB, 0xEE18, 0x0000 ; 7060
007062   07db
007064   ee18     lfsr	0x1, 0x800          
007066   0000
007068   0000     nop                          data 0x0000, 0x0000, 0x2001, 0x4F42 ; 7068
00706a   0000     nop                      
00706c   2001     addwfc	0x1, 0, 0         
00706e   4f42     dcfsnz	0x42, 0x1, 0x1    
007070   544f     subfwb	0x4f, 0, 0            data 0x544F, 0x5A2E, 0x4238, 0x0B0D ; 7070
007072   5a2e     subwfb	0x2e, 0x1, 0      
007074   4238     rrncf	0x38, 0x1, 0       
007076   0b0d     andlw	0xd                
007078   0020     dw	0x20  ;unknown opcode     data 0x0020, 0x0000, 0x0D03, 0x200E ; 7078
00707a   0000     nop                      
00707c   0d03     mullw	0x3                
00707e   200e     addwfc	0xe, 0, 0         
007080   4f42     dcfsnz	0x42, 0x1, 0x1        data 0x4F42, 0x544F, 0x5A2E, 0x4238 ; 7080
007082   544f     subfwb	0x4f, 0, 0        
007084   5a2e     subwfb	0x2e, 0x1, 0      
007086   4238     rrncf	0x38, 0x1, 0       
007088   280d     incf	0xd, 0, 0               data 0x280D, 0x0020, 0x0000, 0x0D00 ; 7088
00708a   0020     dw	0x20  ;unknown opcode 
00708c   0000     nop                      
00708e   0d00     mullw	0                  
007090   0001     dw	0x1  ;unknown opcode      data 0x0001, 0x2120, 0xFFFF, 0x777C ; 7090
007092   2120     addwfc	0x20, 0, 0x1      
007094   ffff     dw	0xffff  ;unknown opcode 
007096   777c     btg	0x7c, 0x3, 0x1       
007098   3f37     incfsz	0x37, 0x1, 0x1        data 0x3F37, 0x42ED, 0x1F3E, 0xCAAC ; 7098
00709a   42ed     rrncf	0xed, 0x1, 0       
00709c   1f3e     comf	0x3e, 0x1, 0x1      
00709e   caac     movff	0xaac, 0xfa5       
0070a0   8fa5
0070a0   8fa5     bsf	0xa5, 0x7, 0x1           data 0x8FA5, 0x96C3, 0x218F, 0xFFFF ; 70A0
0070a2   96c3     bcf	0xc3, 0x3, 0         
0070a4   218f     addwfc	0x8f, 0, 0x1      
0070a6   ffff     dw	0xffff  ;unknown opcode 
0070a8   ac7e     btfss	0x7e, 0x6, 0           data 0xAC7E, 0xBACA, 0x378F, 0xED3F ; 70A8
0070aa   baca     btfsc	0xca, 0x5, 0       
0070ac   378f     rlcf	0x8f, 0x1, 0x1      
0070ae   ed3f     call	0x1c847e, 0x1       
0070b0   3e42
0070b0   3e42     incfsz	0x42, 0x1, 0          data 0x3E42, 0xAC1F, 0xBACA, 0xC38F ; 70B0
0070b2   ac1f     btfss	0x1f, 0x6, 0       
0070b4   baca     btfsc	0xca, 0x5, 0       
0070b6   c38f     movff	0x38f, 0xfa8       
0070b8   8fa8
0070b8   8fa8     bsf	0xa8, 0x7, 0x1           data 0x8FA8, 0x8D22, 0x2100, 0x0000 ; 70B8
0070ba   8d22     bsf	0x22, 0x6, 0x1       
0070bc   2100     addwfc	0, 0, 0x1         
0070be   0000     nop                      
0070c0   8f22     bsf	0x22, 0x7, 0x1           data 0x8F22, 0x2100, 0x1FFF, 0xCDF9 ; 70C0
0070c2   2100     addwfc	0, 0, 0x1         
0070c4   1fff     comf	0xff, 0x1, 0x1      
0070c6   cdf9     movff	0xdf9, 0x154       
0070c8   8154
0070c8   8154     bsf	0x54, 0, 0x1             data 0x8154, 0x0106, 0x3BCD, 0xE680 ; 70C8
0070ca   0106     movlb	0x6                
0070cc   3bcd     swapf	0xcd, 0x1, 0x1     
0070ce   e680     bn	0x6fd0                
0070d0   3203     rrcf	0x3, 0x1, 0             data 0x3203, 0x0091, 0x0006, 0x3BCD ; 70D0
0070d2   0091     dw	0x91  ;unknown opcode 
0070d4   0006     pop                      
0070d6   3bcd     swapf	0xcd, 0x1, 0x1     
0070d8   e680     bn	0x6fda                    data 0xE680, 0x3203, 0x00A2, 0x08DB ; 70D8
0070da   3203     rrcf	0x3, 0x1, 0         
0070dc   00a2     dw	0xa2  ;unknown opcode 
0070de   08db     sublw	0xdb               
0070e0   6fcb     movwf	0xcb, 0x1              data 0x6FCB, 0xFA20, 0x96CD, 0x2180 ; 70E0
0070e2   fa20     dw	0xfa20  ;unknown opcode 
0070e4   96cd     bcf	0xcd, 0x3, 0         
0070e6   2180     addwfc	0x80, 0, 0x1      
0070e8   9360     bcf	0x60, 0x1, 0x1           data 0x9360, 0xEBCD, 0x2A80, 0x008D ; 70E8
0070ea   ebcd     dw	0xebcd  ;unknown opcode 
0070ec   2a80     incf	0x80, 0x1, 0        
0070ee   008d     dw	0x8d  ;unknown opcode 
0070f0   2223     addwfc	0x23, 0x1, 0          data 0x2223, 0x814A, 0x4A21, 0x3E81 ; 70F0
0070f2   814a     bsf	0x4a, 0, 0x1         
0070f4   4a21     infsnz	0x21, 0x1, 0      
0070f6   3e81     incfsz	0x81, 0x1, 0      
0070f8   0602     decf	0x2, 0x1, 0             data 0x0602, 0xCD05, 0x80F5, 0x8121 ; 70F8
0070fa   cd05     movff	0xd05, 0xf5        
0070fc   80f5
0070fe   8121     bsf	0x21, 0, 0x1         
007100   2293     addwfc	0x93, 0x1, 0          data 0x2293, 0x814A, 0xEBCD, 0xCD80 ; 7100
007102   814a     bsf	0x4a, 0, 0x1         
007104   ebcd     dw	0xebcd  ;unknown opcode 
007106   cd80     movff	0xd80, 0x16d       
007108   816d
007108   816d     bsf	0x6d, 0, 0x1             data 0x816D, 0xFE3E, 0x05CD, 0xED80 ; 7108
00710a   fe3e     dw	0xfe3e  ;unknown opcode 
00710c   05cd     decf	0xcd, 0, 0x1        
00710e   ed80     call	0x16ad00, 0x1       
007110   fb56
007110   fb56     dw	0xfb56  ;unknown opcode     data 0xFB56, 0x3D21, 0xDB93, 0xCB08 ; 7110
007112   3d21     incfsz	0x21, 0, 0x1      
007114   db93     rcall	0x783c             
007116   cb08     movff	0xb08, 0x25f       
007118   c25f
007118   c25f     movff	0x25f, 0               data 0xC25F, 0x8000, 0x723A, 0xC683 ; 7118
00711a   8000
00711c   723a     btg	0x3a, 0x1, 0         
00711e   c683     movff	0x683, 0xf02       
007120   4f02
007120   4f02     dcfsnz	0x2, 0x1, 0x1         data 0x4F02, 0x1D21, 0x3A93, 0x8372 ; 7120
007122   1d21     comf	0x21, 0, 0x1        
007124   3a93     swapf	0x93, 0x1, 0       
007126   8372     bsf	0x72, 0x1, 0x1       
007128   caa9     movff	0xaa9, 0               data 0xCAA9, 0x8000, 0x08DB, 0x67CB ; 7128
00712a   8000
00712c   08db     sublw	0xdb               
00712e   67cb     tstfsz	0xcb, 0x1         
007130   f320     dw	0xf320  ;unknown opcode     data 0xF320, 0xE03E, 0x03D3, 0x67C3 ; 7130
007132   e03e     bz	0x71b0                
007134   03d3     mulwf	0xd3, 0x1          
007136   67c3     tstfsz	0xc3, 0x1         
007138   3a90     swapf	0x90, 0x1, 0           data 0x3A90, 0x8372, 0x06C6, 0x3A4F ; 7138
00713a   8372     bsf	0x72, 0x1, 0x1       
00713c   06c6     decf	0xc6, 0x1, 0        
00713e   3a4f     swapf	0x4f, 0x1, 0       
007140   8372     bsf	0x72, 0x1, 0x1           data 0x8372, 0x28A9, 0xF322, 0x003E ; 7140
007142   28a9     incf	0xa9, 0, 0          
007144   f322     dw	0xf322  ;unknown opcode 
007146   003e     dw	0x3e  ;unknown opcode 
007148   06d3     decf	0xd3, 0x1, 0            data 0x06D3, 0x06DB, 0x4FCB, 0x0828 ; 7148
00714a   06db     decf	0xdb, 0x1, 0        
00714c   4fcb     dcfsnz	0xcb, 0x1, 0x1    
00714e   0828     sublw	0x28               
007150   a53a     btfss	0x3a, 0x2, 0x1         data 0xA53A, 0xD300, 0xFB06, 0xE718 ; 7150
007152   d300     bra	0x7754               
007154   fb06     dw	0xfb06  ;unknown opcode 
007156   e718     bnn	0x7188               
007158   03db     mulwf	0xdb, 0x1              data 0x03DB, 0x7FEE, 0xF220, 0xA53A ; 7158
00715a   7fee     btg	0xee, 0x7, 0x1       
00715c   f220     dw	0xf220  ;unknown opcode 
00715e   a53a     btfss	0x3a, 0x2, 0x1     
007160   d300     bra	0x7762                   data 0xD300, 0xFB06, 0xC0C3, 0xCD94 ; 7160
007162   fb06     dw	0xfb06  ;unknown opcode 
007164   c0c3     movff	0xc3, 0xd94        
007166   cd94
007168   9076     bcf	0x76, 0, 0               data 0x9076, 0x77CD, 0xC391, 0x807B ; 7168
00716a   77cd     btg	0xcd, 0x3, 0x1       
00716c   c391     movff	0x391, 0x7b        
00716e   807b
007170   f221     dw	0xf221  ;unknown opcode     data 0xF221, 0xC393, 0x8000, 0x08DB ; 7170
007172   c393     movff	0x393, 0           
007174   8000
007176   08db     sublw	0xdb               
007178   57cb     subfwb	0xcb, 0x1, 0x1        data 0x57CB, 0xAEC2, 0xCD90, 0x87AF ; 7178
00717a   aec2     btfss	0xc2, 0x7, 0       
00717c   cd90     movff	0xd90, 0x7af       
00717e   87af
007180   32af     rrcf	0xaf, 0x1, 0            data 0x32AF, 0x8B62, 0x6332, 0x328B ; 7180
007182   8b62     bsf	0x62, 0x5, 0x1       
007184   6332     cpfseq	0x32, 0x1         
007186   328b     rrcf	0x8b, 0x1, 0        
007188   8b64     bsf	0x64, 0x5, 0x1           data 0x8B64, 0x6532, 0xCD8B, 0x88E6 ; 7188
00718a   6532     cpfsgt	0x32, 0x1         
00718c   cd8b     movff	0xd8b, 0x8e6       
00718e   88e6
007190   21da     addwfc	0xda, 0, 0x1          data 0x21DA, 0x0691, 0x2104, 0x7FC2 ; 7190
007192   0691     decf	0x91, 0x1, 0        
007194   2104     addwfc	0x4, 0, 0x1       
007196   7fc2     btg	0xc2, 0x7, 0x1       
007198   fe7e     dw	0xfe7e  ;unknown opcode     data 0xFE7E, 0x2806, 0xFE18, 0x280B ; 7198
00719a   2806     incf	0x6, 0, 0           
00719c   fe18     dw	0xfe18  ;unknown opcode 
00719e   280b     incf	0xb, 0, 0           
0071a0   1114     iorwf	0x14, 0, 0x1           data 0x1114, 0x0010, 0x1019, 0x21F1 ; 71A0
0071a2   0010     retfie	0                 
0071a4   1019     iorwf	0x19, 0, 0         
0071a6   21f1     addwfc	0xf1, 0, 0x1      
0071a8   93a6     bcf	0xa6, 0x1, 0x1           data 0x93A6, 0xEBCD, 0xC980, 0xC421 ; 71A8
0071aa   ebcd     dw	0xebcd  ;unknown opcode 
0071ac   c980     movff	0x980, 0x421       
0071ae   c421
0071b0   cd93     movff	0xd93, 0xeb            data 0xCD93, 0x80EB, 0x32C9, 0x00A3 ; 71B0
0071b2   80eb
0071b4   32c9     rrcf	0xc9, 0x1, 0        
0071b6   00a3     dw	0xa3  ;unknown opcode 
0071b8   0401     decf	0x1, 0, 0               data 0x0401, 0x0900, 0x6211, 0xED8B ; 71B8
0071ba   0900     iorlw	0                  
0071bc   6211     cpfseq	0x11, 0           
0071be   ed8b     call	0x1b6116, 0x1       
0071c0   cdb0
0071c0   cdb0     movff	0xdb0, 0xb79           data 0xCDB0, 0x8B79, 0x21DA, 0x2A91 ; 71C0
0071c2   8b79
0071c4   21da     addwfc	0xda, 0, 0x1      
0071c6   2a91     incf	0x91, 0x1, 0        
0071c8   8f39     bsf	0x39, 0x7, 0x1           data 0x8F39, 0x1822, 0x2A8F, 0x8F3B ; 71C8
0071ca   1822     xorwf	0x22, 0, 0         
0071cc   2a8f     incf	0x8f, 0x1, 0        
0071ce   8f3b     bsf	0x3b, 0x7, 0x1       
0071d0   1a22     xorwf	0x22, 0x1, 0           data 0x1A22, 0xCD8F, 0x8D0C, 0x21DA ; 71D0
0071d2   cd8f     movff	0xd8f, 0xd0c       
0071d4   8d0c
0071d6   21da     addwfc	0xda, 0, 0x1      
0071d8   2191     addwfc	0x91, 0, 0x1          data 0x2191, 0x7E00, 0xFDE5, 0x7EE1 ; 71D8
0071da   7e00     btg	0, 0x7, 0            
0071dc   fde5     dw	0xfde5  ;unknown opcode 
0071de   7ee1     btg	0xe1, 0x7, 0         
0071e0   e5fe     bnov	0x71de                  data 0xE5FE, 0x05CA, 0xFE91, 0xCA00 ; 71E0
0071e2   05ca     decf	0xca, 0, 0x1        
0071e4   fe91     dw	0xfe91  ;unknown opcode 
0071e6   ca00     movff	0xa00, 0x11a       
0071e8   911a
0071e8   911a     bcf	0x1a, 0, 0x1             data 0x911A, 0x21DD, 0x943F, 0x0B01 ; 71E8
0071ea   21dd     addwfc	0xdd, 0, 0x1      
0071ec   943f     bcf	0x3f, 0x2, 0         
0071ee   0b01     andlw	0x1                
0071f0   dd00     rcall	0x6bf2                 data 0xDD00, 0xDD23, 0x007E, 0xA1ED ; 71F0
0071f2   dd23     rcall	0x6c3a             
0071f4   007e     dw	0x7e  ;unknown opcode 
0071f6   a1ed     btfss	0xed, 0, 0x1       
0071f8   0b20     andlw	0x20                   data 0x0B20, 0xF1EA, 0x3E90, 0xBE0F ; 71F8
0071fa   f1ea     dw	0xf1ea  ;unknown opcode 
0071fc   3e90     incfsz	0x90, 0x1, 0      
0071fe   be0f     btfsc	0xf, 0x7, 0        
007200   0328     mulwf	0x28, 0x1              data 0x0328, 0x34C3, 0xFD91, 0xE1E5 ; 7200
007202   34c3     rlcf	0xc3, 0, 0          
007204   fd91     dw	0xfd91  ;unknown opcode 
007206   e1e5     bnz	0x71d2               
007208   2011     addwfc	0x11, 0, 0            data 0x2011, 0x1900, 0x4CCB, 0xCC28 ; 7208
00720a   1900     xorwf	0, 0, 0x1          
00720c   4ccb     dcfsnz	0xcb, 0, 0        
00720e   cc28     movff	0xc28, 0x5cd       
007210   f5cd
007210   f5cd     dw	0xf5cd  ;unknown opcode     data 0xF5CD, 0x388D, 0x2105, 0x7E00 ; 7210
007212   388d     swapf	0x8d, 0, 0         
007214   2105     addwfc	0x5, 0, 0x1       
007216   7e00     btg	0, 0x7, 0            
007218   c218     movff	0x218, 0xb21           data 0xC218, 0x4B21, 0xCD94, 0x80EB ; 7218
00721a   4b21
00721c   cd94     movff	0xd94, 0xeb        
00721e   80eb
007220   21c9     addwfc	0xc9, 0, 0x1          data 0x21C9, 0x9423, 0xEBCD, 0x2180 ; 7220
007222   9423     bcf	0x23, 0x2, 0         
007224   ebcd     dw	0xebcd  ;unknown opcode 
007226   2180     addwfc	0x80, 0, 0x1      
007228   8b5c     bsf	0x5c, 0x5, 0x1           data 0x8B5C, 0x023E, 0x0ACD, 0x3E81 ; 7228
00722a   023e     mulwf	0x3e, 0            
00722c   0acd     xorlw	0xcd               
00722e   3e81     incfsz	0x81, 0x1, 0      
007230   d30a     bra	0x7846                   data 0xD30A, 0xC905, 0x0021, 0x2200 ; 7230
007232   c905     movff	0x905, 0x21        
007234   0021
007236   2200     addwfc	0, 0x1, 0         
007238   8f1a     bsf	0x1a, 0x7, 0x1           data 0x8F1A, 0x7EFD, 0x321A, 0x8F18 ; 7238
00723a   7efd     btg	0xfd, 0x7, 0         
00723c   321a     rrcf	0x1a, 0x1, 0        
00723e   8f18     bsf	0x18, 0x7, 0x1       
007240   7efd     btg	0xfd, 0x7, 0             data 0x7EFD, 0x321B, 0x8F19, 0xA33A ; 7240
007242   321b     rrcf	0x1b, 0x1, 0        
007244   8f19     bsf	0x19, 0x7, 0x1       
007246   a33a     btfss	0x3a, 0x1, 0x1     
007248   fe00     dw	0xfe00  ;unknown opcode     data 0xFE00, 0x2806, 0xFD0C, 0x147E ; 7248
00724a   2806     incf	0x6, 0, 0           
00724c   fd0c     dw	0xfd0c  ;unknown opcode 
00724e   147e     andwf	0x7e, 0, 0         
007250   1a32     xorwf	0x32, 0x1, 0           data 0x1A32, 0xFD8F, 0x157E, 0x1B32 ; 7250
007252   fd8f     dw	0xfd8f  ;unknown opcode 
007254   157e     andwf	0x7e, 0, 0x1       
007256   1b32     xorwf	0x32, 0x1, 0x1     
007258   cd8f     movff	0xd8f, 0xd0c           data 0xCD8F, 0x8D0C, 0x21DA, 0x3A91 ; 7258
00725a   8d0c
00725c   21da     addwfc	0xda, 0, 0x1      
00725e   3a91     swapf	0x91, 0x1, 0       
007260   7e00     btg	0, 0x7, 0                data 0x7E00, 0x02FE, 0x70C2, 0x3A91 ; 7260
007262   02fe     mulwf	0xfe, 0            
007264   70c2     btg	0xc2, 0, 0           
007266   3a91     swapf	0x91, 0x1, 0       
007268   7e01     btg	0x1, 0x7, 0              data 0x7E01, 0xCD47, 0x8DF5, 0xFB10 ; 7268
00726a   cd47     movff	0xd47, 0xdf5       
00726c   8df5
00726e   fb10     dw	0xfb10  ;unknown opcode 
007270   7621     btg	0x21, 0x3, 0             data 0x7621, 0xCD94, 0x80EB, 0x3AC9 ; 7270
007272   cd94     movff	0xd94, 0xeb        
007274   80eb
007276   3ac9     swapf	0xc9, 0x1, 0       
007278   8372     bsf	0x72, 0x1, 0x1           data 0x8372, 0x03C6, 0x3A47, 0x8372 ; 7278
00727a   03c6     mulwf	0xc6, 0x1          
00727c   3a47     swapf	0x47, 0x1, 0       
00727e   8372     bsf	0x72, 0x1, 0x1       
007280   28b8     incf	0xb8, 0, 0              data 0x28B8, 0xDB0B, 0xCB08, 0xC27F ; 7280
007282   db0b     rcall	0x789a             
007284   cb08     movff	0xb08, 0x27f       
007286   c27f
007288   917d     bcf	0x7d, 0, 0x1             data 0x917D, 0x07DB, 0xEF18, 0x533E ; 7288
00728a   07db     decf	0xdb, 0x1, 0x1      
00728c   ef18     goto	0x67c30             
00728e   533e
007290   05d3     decf	0xd3, 0, 0x1            data 0x05D3, 0x53CD, 0x3E8F, 0xD343 ; 7290
007292   53cd     movf	0xcd, 0x1, 0x1      
007294   3e8f     incfsz	0x8f, 0x1, 0      
007296   d343     bra	0x791e               
007298   cd05     movff	0xd05, 0xf53           data 0xCD05, 0x8F53, 0x533E, 0x05D3 ; 7298
00729a   8f53
00729c   533e     movf	0x3e, 0x1, 0x1      
00729e   05d3     decf	0xd3, 0, 0x1        
0072a0   53cd     movf	0xcd, 0x1, 0x1          data 0x53CD, 0x3E8F, 0xD30D, 0xCD05 ; 72A0
0072a2   3e8f     incfsz	0x8f, 0x1, 0      
0072a4   d30d     bra	0x78c0               
0072a6   cd05     movff	0xd05, 0xf53       
0072a8   8f53
0072a8   8f53     bsf	0x53, 0x7, 0x1           data 0x8F53, 0x4ACD, 0xD38F, 0xFE05 ; 72A8
0072aa   4acd     infsnz	0xcd, 0x1, 0      
0072ac   d38f     bra	0x79cc               
0072ae   fe05     dw	0xfe05  ;unknown opcode 
0072b0   c23e     movff	0x23e, 0x312           data 0xC23E, 0x9312, 0x4ACD, 0xFE8F ; 72B0
0072b2   9312
0072b4   4acd     infsnz	0xcd, 0x1, 0      
0072b6   fe8f     dw	0xfe8f  ;unknown opcode 
0072b8   c20d     movff	0x20d, 0x312           data 0xC20D, 0x9312, 0x913E, 0x05D3 ; 72B8
0072ba   9312
0072bc   913e     bcf	0x3e, 0, 0x1         
0072be   05d3     decf	0xd3, 0, 0x1        
0072c0   53cd     movf	0xcd, 0x1, 0x1          data 0x53CD, 0x3E8F, 0xD30D, 0xCD05 ; 72C0
0072c2   3e8f     incfsz	0x8f, 0x1, 0      
0072c4   d30d     bra	0x78e0               
0072c6   cd05     movff	0xd05, 0xf53       
0072c8   8f53
0072c8   8f53     bsf	0x53, 0x7, 0x1           data 0x8F53, 0x4ACD, 0xD38F, 0xFE05 ; 72C8
0072ca   4acd     infsnz	0xcd, 0x1, 0      
0072cc   d38f     bra	0x79ec               
0072ce   fe05     dw	0xfe05  ;unknown opcode 
0072d0   c23e     movff	0x23e, 0x312           data 0xC23E, 0x9312, 0x4ACD, 0xFE8F ; 72D0
0072d2   9312
0072d4   4acd     infsnz	0xcd, 0x1, 0      
0072d6   fe8f     dw	0xfe8f  ;unknown opcode 
0072d8   c20d     movff	0x20d, 0x312           data 0xC20D, 0x9312, 0x0D06, 0x6C21 ; 72D8
0072da   9312
0072dc   0d06     mullw	0x6                
0072de   6c21     negf	0x21, 0             
0072e0   7e8f     btg	0x8f, 0x7, 0             data 0x7E8F, 0xD323, 0xCD05, 0x8F53 ; 72E0
0072e2   d323     bra	0x792a               
0072e4   cd05     movff	0xd05, 0xf53       
0072e6   8f53
0072e8   f710     dw	0xf710  ;unknown opcode     data 0xF710, 0x4ACD, 0xFE8F, 0xC20D ; 72E8
0072ea   4acd     infsnz	0xcd, 0x1, 0      
0072ec   fe8f     dw	0xfe8f  ;unknown opcode 
0072ee   c20d     movff	0x20d, 0x312       
0072f0   9312
0072f0   9312     bcf	0x12, 0x1, 0x1           data 0x9312, 0x4ACD, 0xFE8F, 0xC242 ; 72F0
0072f2   4acd     infsnz	0xcd, 0x1, 0      
0072f4   fe8f     dw	0xfe8f  ;unknown opcode 
0072f6   c242     movff	0x242, 0x312       
0072f8   9312
0072f8   9312     bcf	0x12, 0x1, 0x1           data 0x9312, 0x4ACD, 0xFE8F, 0xC24F ; 72F8
0072fa   4acd     infsnz	0xcd, 0x1, 0      
0072fc   fe8f     dw	0xfe8f  ;unknown opcode 
0072fe   c24f     movff	0x24f, 0x312       
007300   9312
007300   9312     bcf	0x12, 0x1, 0x1           data 0x9312, 0x4ACD, 0xFE8F, 0xC24F ; 7300
007302   4acd     infsnz	0xcd, 0x1, 0      
007304   fe8f     dw	0xfe8f  ;unknown opcode 
007306   c24f     movff	0x24f, 0x312       
007308   9312
007308   9312     bcf	0x12, 0x1, 0x1           data 0x9312, 0x4ACD, 0xFE8F, 0xC254 ; 7308
00730a   4acd     infsnz	0xcd, 0x1, 0      
00730c   fe8f     dw	0xfe8f  ;unknown opcode 
00730e   c254     movff	0x254, 0x312       
007310   9312
007310   9312     bcf	0x12, 0x1, 0x1           data 0x9312, 0x4ACD, 0xFE8F, 0xC22E ; 7310
007312   4acd     infsnz	0xcd, 0x1, 0      
007314   fe8f     dw	0xfe8f  ;unknown opcode 
007316   c22e     movff	0x22e, 0x312       
007318   9312
007318   9312     bcf	0x12, 0x1, 0x1           data 0x9312, 0x4ACD, 0xFE8F, 0xC25A ; 7318
00731a   4acd     infsnz	0xcd, 0x1, 0      
00731c   fe8f     dw	0xfe8f  ;unknown opcode 
00731e   c25a     movff	0x25a, 0x312       
007320   9312
007320   9312     bcf	0x12, 0x1, 0x1           data 0x9312, 0x4ACD, 0xFE8F, 0xC238 ; 7320
007322   4acd     infsnz	0xcd, 0x1, 0      
007324   fe8f     dw	0xfe8f  ;unknown opcode 
007326   c238     movff	0x238, 0x312       
007328   9312
007328   9312     bcf	0x12, 0x1, 0x1           data 0x9312, 0x4ACD, 0xFE8F, 0xC242 ; 7328
00732a   4acd     infsnz	0xcd, 0x1, 0      
00732c   fe8f     dw	0xfe8f  ;unknown opcode 
00732e   c242     movff	0x242, 0x312       
007330   9312
007330   9312     bcf	0x12, 0x1, 0x1           data 0x9312, 0x4ACD, 0xFE8F, 0xC220 ; 7330
007332   4acd     infsnz	0xcd, 0x1, 0      
007334   fe8f     dw	0xfe8f  ;unknown opcode 
007336   c220     movff	0x220, 0x312       
007338   9312
007338   9312     bcf	0x12, 0x1, 0x1           data 0x9312, 0x4ACD, 0x328F, 0x8F6B ; 7338
00733a   4acd     infsnz	0xcd, 0x1, 0      
00733c   328f     rrcf	0x8f, 0x1, 0        
00733e   8f6b     bsf	0x6b, 0x7, 0x1       
007340   4acd     infsnz	0xcd, 0x1, 0          data 0x4ACD, 0x328F, 0x8F6A, 0x4ACD ; 7340
007342   328f     rrcf	0x8f, 0x1, 0        
007344   8f6a     bsf	0x6a, 0x7, 0x1       
007346   4acd     infsnz	0xcd, 0x1, 0      
007348   328f     rrcf	0x8f, 0x1, 0            data 0x328F, 0x8F69, 0x4ACD, 0x328F ; 7348
00734a   8f69     bsf	0x69, 0x7, 0x1       
00734c   4acd     infsnz	0xcd, 0x1, 0      
00734e   328f     rrcf	0x8f, 0x1, 0        
007350   8f68     bsf	0x68, 0x7, 0x1           data 0x8F68, 0x4ACD, 0xCD8F, 0x8F4A ; 7350
007352   4acd     infsnz	0xcd, 0x1, 0      
007354   cd8f     movff	0xd8f, 0xf4a       
007356   8f4a
007358   7e21     btg	0x21, 0x7, 0             data 0x7E21, 0x068F, 0x7E0B, 0x53CD ; 7358
00735a   068f     decf	0x8f, 0x1, 0        
00735c   7e0b     btg	0xb, 0x7, 0          
00735e   53cd     movf	0xcd, 0x1, 0x1      
007360   108f     iorwf	0x8f, 0, 0             data 0x108F, 0xCDFA, 0x8F4A, 0x0DFE ; 7360
007362   cdfa     movff	0xdfa, 0xf4a       
007364   8f4a
007366   0dfe     mullw	0xfe               
007368   12c2     iorwf	0xc2, 0x1, 0           data 0x12C2, 0xCD93, 0x8F4A, 0x3EFE ; 7368
00736a   cd93     movff	0xd93, 0xf4a       
00736c   8f4a
00736e   3efe     incfsz	0xfe, 0x1, 0      
007370   12c2     iorwf	0xc2, 0x1, 0           data 0x12C2, 0x2193, 0x8F77, 0x0706 ; 7370
007372   2193     addwfc	0x93, 0, 0x1      
007374   8f77     bsf	0x77, 0x7, 0x1       
007376   0706     decf	0x6, 0x1, 0x1       
007378   cd7e     movff	0xd7e, 0xf53           data 0xCD7E, 0x8F53, 0xFA10, 0x4ACD ; 7378
00737a   8f53
00737c   fa10     dw	0xfa10  ;unknown opcode 
00737e   4acd     infsnz	0xcd, 0x1, 0      
007380   fe8f     dw	0xfe8f  ;unknown opcode     data 0xFE8F, 0xC202, 0x9170, 0x9BCD ; 7380
007382   c202     movff	0x202, 0x170       
007384   9170
007386   9bcd     bcf	0xcd, 0x5, 0x1       
007388   2180     addwfc	0x80, 0, 0x1          data 0x2180, 0x94B4, 0xEBCD, 0xCD80 ; 7388
00738a   94b4     bcf	0xb4, 0x2, 0         
00738c   ebcd     dw	0xebcd  ;unknown opcode 
00738e   cd80     movff	0xd80, 0xf4a       
007390   8f4a
007390   8f4a     bsf	0x4a, 0x7, 0x1           data 0x8F4A, 0xCD57, 0x8F4A, 0xED5F ; 7390
007392   cd57     movff	0xd57, 0xf4a       
007394   8f4a
007396   ed5f     call	0x8a6be, 0x1        
007398   9453
007398   9453     bcf	0x53, 0x2, 0             data 0x9453, 0x2186, 0x0000, 0x9622 ; 7398
00739a   2186     addwfc	0x86, 0, 0x1      
00739c   0000     nop                      
00739e   9622     bcf	0x22, 0x3, 0         
0073a0   2a86     incf	0x86, 0x1, 0            data 0x2A86, 0x8F68, 0x9022, 0x2A86 ; 73A0
0073a2   8f68     bsf	0x68, 0x7, 0x1       
0073a4   9022     bcf	0x22, 0, 0           
0073a6   2a86     incf	0x86, 0x1, 0        
0073a8   8f6a     bsf	0x6a, 0x7, 0x1           data 0x8F6A, 0x9222, 0xCD86, 0x8492 ; 73A8
0073aa   9222     bcf	0x22, 0x1, 0         
0073ac   cd86     movff	0xd86, 0x492       
0073ae   8492
0073b0   4bed     infsnz	0xed, 0x1, 0x1        data 0x4BED, 0x8690, 0x0021, 0x2280 ; 73B0
0073b2   8690     bsf	0x90, 0x3, 0         
0073b4   0021     dw	0x21  ;unknown opcode 
0073b6   2280     addwfc	0x80, 0x1, 0      
0073b8   8694     bsf	0x94, 0x3, 0             data 0x8694, 0x92CD, 0x3A84, 0x86A0 ; 73B8
0073ba   92cd     bcf	0xcd, 0x1, 0         
0073bc   3a84     swapf	0x84, 0x1, 0       
0073be   86a0     bsf	0xa0, 0x3, 0         
0073c0   47cb     rlncf	0xcb, 0x1, 0x1         data 0x47CB, 0xC8C2, 0x0192, 0x8000 ; 73C0
0073c2   c8c2     movff	0x8c2, 0x192       
0073c4   0192
0073c6   8000     bsf	0, 0, 0              
0073c8   3279     rrcf	0x79, 0x1, 0            data 0x3279, 0x8F7C, 0x8E32, 0x788F ; 73C8
0073ca   8f7c     bsf	0x7c, 0x7, 0x1       
0073cc   8e32     bsf	0x32, 0x7, 0         
0073ce   788f     btg	0x8f, 0x4, 0         
0073d0   7b32     btg	0x32, 0x5, 0x1           data 0x7B32, 0x328F, 0x8F8D, 0x21C5 ; 73D0
0073d2   328f     rrcf	0x8f, 0x1, 0        
0073d4   8f8d     bsf	0x8d, 0x7, 0x1       
0073d6   21c5     addwfc	0xc5, 0, 0x1      
0073d8   8f89     bsf	0x89, 0x7, 0x1           data 0x8F89, 0x0706, 0xCD7E, 0x8F53 ; 73D8
0073da   0706     decf	0x6, 0x1, 0x1       
0073dc   cd7e     movff	0xd7e, 0xf53       
0073de   8f53
0073e0   fa10     dw	0xfa10  ;unknown opcode     data 0xFA10, 0x4ACD, 0xFE8F, 0xC23E ; 73E0
0073e2   4acd     infsnz	0xcd, 0x1, 0      
0073e4   fe8f     dw	0xfe8f  ;unknown opcode 
0073e6   c23e     movff	0x23e, 0x312       
0073e8   9312
0073e8   9312     bcf	0x12, 0x1, 0x1           data 0x9312, 0x4ACD, 0xFE8F, 0xC20D ; 73E8
0073ea   4acd     infsnz	0xcd, 0x1, 0      
0073ec   fe8f     dw	0xfe8f  ;unknown opcode 
0073ee   c20d     movff	0x20d, 0x312       
0073f0   9312
0073f0   9312     bcf	0x12, 0x1, 0x1           data 0x9312, 0x21F3, 0x8F77, 0x0706 ; 73F0
0073f2   21f3     addwfc	0xf3, 0, 0x1      
0073f4   8f77     bsf	0x77, 0x7, 0x1       
0073f6   0706     decf	0x6, 0x1, 0x1       
0073f8   cd7e     movff	0xd7e, 0xf53           data 0xCD7E, 0x8F53, 0xFA10, 0x21C1 ; 73F8
0073fa   8f53
0073fc   fa10     dw	0xfa10  ;unknown opcode 
0073fe   21c1     addwfc	0xc1, 0, 0x1      
007400   0000     nop                          data 0x0000, 0x4ACD, 0x778F, 0x0B23 ; 7400
007402   4acd     infsnz	0xcd, 0x1, 0      
007404   778f     btg	0x8f, 0x3, 0x1       
007406   0b23     andlw	0x23               
007408   80af     bsf	0xaf, 0, 0               data 0x80AF, 0xF620, 0x2081, 0xC3F3 ; 7408
00740a   f620     dw	0xf620  ;unknown opcode 
00740c   2081     addwfc	0x81, 0, 0        
00740e   c3f3     movff	0x3f3, 0           
007410   0000
007410   0000     nop                          data 0x0000, 0x05D3, 0x08DB, 0x7FCB ; 7410
007412   05d3     decf	0xd3, 0, 0x1        
007414   08db     sublw	0xdb               
007416   7fcb     btg	0xcb, 0x7, 0x1       
007418   dbc0     rcall	0x7b9a                 data 0xDBC0, 0x1807, 0x0AF5, 0x5245 ; 7418
00741a   1807     xorwf	0x7, 0, 0          
00741c   0af5     xorlw	0xf5               
00741e   5245     movf	0x45, 0x1, 0        
007420   4f52     dcfsnz	0x52, 0x1, 0x1        data 0x4F52, 0x3A52, 0x4B20, 0x7965 ; 7420
007422   3a52     swapf	0x52, 0x1, 0       
007424   4b20     infsnz	0x20, 0x1, 0x1    
007426   7965     btg	0x65, 0x4, 0x1       
007428   6f62     movwf	0x62, 0x1              data 0x6F62, 0x7261, 0x2064, 0x6F4E ; 7428
00742a   7261     btg	0x61, 0x1, 0         
00742c   2064     addwfc	0x64, 0, 0        
00742e   6f4e     movwf	0x4e, 0x1          
007430   2074     addwfc	0x74, 0, 0            data 0x2074, 0x6544, 0x6574, 0x7463 ; 7430
007432   6544     cpfsgt	0x44, 0x1         
007434   6574     cpfsgt	0x74, 0x1         
007436   7463     btg	0x63, 0x2, 0         
007438   6465     cpfsgt	0x65, 0               data 0x6465, 0x0A2E, 0x0A00, 0x5245 ; 7438
00743a   0a2e     xorlw	0x2e               
00743c   0a00     xorlw	0                  
00743e   5245     movf	0x45, 0x1, 0        
007440   4f52     dcfsnz	0x52, 0x1, 0x1        data 0x4F52, 0x3A52, 0x4B20, 0x7965 ; 7440
007442   3a52     swapf	0x52, 0x1, 0       
007444   4b20     infsnz	0x20, 0x1, 0x1    
007446   7965     btg	0x65, 0x4, 0x1       
007448   6f62     movwf	0x62, 0x1              data 0x6F62, 0x7261, 0x2064, 0x6F63 ; 7448
00744a   7261     btg	0x61, 0x1, 0         
00744c   2064     addwfc	0x64, 0, 0        
00744e   6f63     movwf	0x63, 0x1          
007450   746e     btg	0x6e, 0x2, 0             data 0x746E, 0x6F72, 0x6C6C, 0x7265 ; 7450
007452   6f72     movwf	0x72, 0x1          
007454   6c6c     negf	0x6c, 0             
007456   7265     btg	0x65, 0x1, 0         
007458   6520     cpfsgt	0x20, 0x1             data 0x6520, 0x7272, 0x726F, 0x000A ; 7458
00745a   7272     btg	0x72, 0x1, 0         
00745c   726f     btg	0x6f, 0x1, 0         
00745e   000a     tblrd	*-                 
007460   385a     swapf	0x5a, 0, 0             data 0x385A, 0x2030, 0x7250, 0x6A6F ; 7460
007462   2030     addwfc	0x30, 0, 0        
007464   7250     btg	0x50, 0x1, 0         
007466   6a6f     clrf	0x6f, 0             
007468   6365     cpfseq	0x65, 0x1             data 0x6365, 0x2074, 0x614D, 0x6B72 ; 7468
00746a   2074     addwfc	0x74, 0, 0        
00746c   614d     cpfslt	0x4d, 0x1         
00746e   6b72     clrf	0x72, 0x1           
007470   3220     rrcf	0x20, 0x1, 0            data 0x3220, 0x203A, 0x6F42, 0x746F ; 7470
007472   203a     addwfc	0x3a, 0, 0        
007474   6f42     movwf	0x42, 0x1          
007476   746f     btg	0x6f, 0x2, 0         
007478   6e69     movwf	0x69, 0                data 0x6E69, 0x0A67, 0x4152, 0x204D ; 7478
00747a   0a67     xorlw	0x67               
00747c   4152     rrncf	0x52, 0, 0x1       
00747e   204d     addwfc	0x4d, 0, 0        
007480   2000     addwfc	0, 0, 0               data 0x2000, 0x7962, 0x6574, 0x0A73 ; 7480
007482   7962     btg	0x62, 0x4, 0x1       
007484   6574     cpfsgt	0x74, 0x1         
007486   0a73     xorlw	0x73               
007488   500a     movf	0xa, 0, 0               data 0x500A, 0x6572, 0x7373, 0x4420 ; 7488
00748a   6572     cpfsgt	0x72, 0x1         
00748c   7373     btg	0x73, 0x1, 0x1       
00748e   4420     rlncf	0x20, 0, 0         
007490   4c45     dcfsnz	0x45, 0, 0            data 0x4C45, 0x5445, 0x2045, 0x6F74 ; 7490
007492   5445     subfwb	0x45, 0, 0        
007494   2045     addwfc	0x45, 0, 0        
007496   6f74     movwf	0x74, 0x1          
007498   6520     cpfsgt	0x20, 0x1             data 0x6520, 0x746E, 0x7265, 0x7320 ; 7498
00749a   746e     btg	0x6e, 0x2, 0         
00749c   7265     btg	0x65, 0x1, 0         
00749e   7320     btg	0x20, 0x1, 0x1       
0074a0   7465     btg	0x65, 0x2, 0             data 0x7465, 0x7075, 0x000A, 0x6F4E ; 74A0
0074a2   7075     btg	0x75, 0, 0           
0074a4   000a     tblrd	*-                 
0074a6   6f4e     movwf	0x4e, 0x1          
0074a8   6220     cpfseq	0x20, 0               data 0x6220, 0x6F6F, 0x6174, 0x6C62 ; 74A8
0074aa   6f6f     movwf	0x6f, 0x1          
0074ac   6174     cpfslt	0x74, 0x1         
0074ae   6c62     negf	0x62, 0             
0074b0   2065     addwfc	0x65, 0, 0            data 0x2065, 0x6170, 0x7472, 0x7469 ; 74B0
0074b2   6170     cpfslt	0x70, 0x1         
0074b4   7472     btg	0x72, 0x2, 0         
0074b6   7469     btg	0x69, 0x2, 0         
0074b8   6f69     movwf	0x69, 0x1              data 0x6F69, 0x736E, 0x6F20, 0x206E ; 74B8
0074ba   736e     btg	0x6e, 0x1, 0x1       
0074bc   6f20     movwf	0x20, 0x1          
0074be   206e     addwfc	0x6e, 0, 0        
0074c0   4453     rlncf	0x53, 0, 0             data 0x4453, 0x000A, 0x6F4E, 0x5320 ; 74C0
0074c2   000a     tblrd	*-                 
0074c4   6f4e     movwf	0x4e, 0x1          
0074c6   5320     movf	0x20, 0x1, 0x1      
0074c8   2044     addwfc	0x44, 0, 0            data 0x2044, 0x6163, 0x6472, 0x6920 ; 74C8
0074ca   6163     cpfslt	0x63, 0x1         
0074cc   6472     cpfsgt	0x72, 0           
0074ce   6920     setf	0x20, 0x1           
0074d0   736e     btg	0x6e, 0x1, 0x1           data 0x736E, 0x7265, 0x6574, 0x0A64 ; 74D0
0074d2   7265     btg	0x65, 0x1, 0         
0074d4   6574     cpfsgt	0x74, 0x1         
0074d6   0a64     xorlw	0x64               
0074d8   4300     rrncf	0, 0x1, 0x1            data 0x4300, 0x6E6F, 0x6574, 0x746E ; 74D8
0074da   6e6f     movwf	0x6f, 0            
0074dc   6574     cpfsgt	0x74, 0x1         
0074de   746e     btg	0x6e, 0x2, 0         
0074e0   2073     addwfc	0x73, 0, 0            data 0x2073, 0x666F, 0x7220, 0x6F6F ; 74E0
0074e2   666f     tstfsz	0x6f, 0           
0074e4   7220     btg	0x20, 0x1, 0         
0074e6   6f6f     movwf	0x6f, 0x1          
0074e8   2074     addwfc	0x74, 0, 0            data 0x2074, 0x6F66, 0x646C, 0x7265 ; 74E8
0074ea   6f66     movwf	0x66, 0x1          
0074ec   646c     cpfsgt	0x6c, 0           
0074ee   7265     btg	0x65, 0x1, 0         
0074f0   000a     tblrd	*-                     data 0x000A, 0x6F4E, 0x4F20, 0x2053 ; 74F0
0074f2   6f4e     movwf	0x4e, 0x1          
0074f4   4f20     dcfsnz	0x20, 0x1, 0x1    
0074f6   2053     addwfc	0x53, 0, 0        
0074f8   6f66     movwf	0x66, 0x1              data 0x6F66, 0x6E75, 0x2C64, 0x6920 ; 74F8
0074fa   6e75     movwf	0x75, 0            
0074fc   2c64     decfsz	0x64, 0, 0        
0074fe   6920     setf	0x20, 0x1           
007500   736e     btg	0x6e, 0x1, 0x1           data 0x736E, 0x7265, 0x2074, 0x7973 ; 7500
007502   7265     btg	0x65, 0x1, 0         
007504   2074     addwfc	0x74, 0, 0        
007506   7973     btg	0x73, 0x4, 0x1       
007508   7473     btg	0x73, 0x2, 0             data 0x7473, 0x6D65, 0x6420, 0x7369 ; 7508
00750a   6d65     negf	0x65, 0x1           
00750c   6420     cpfsgt	0x20, 0           
00750e   7369     btg	0x69, 0x1, 0x1       
007510   206b     addwfc	0x6b, 0, 0            data 0x206B, 0x6E61, 0x2064, 0x7270 ; 7510
007512   6e61     movwf	0x61, 0            
007514   2064     addwfc	0x64, 0, 0        
007516   7270     btg	0x70, 0x1, 0         
007518   7365     btg	0x65, 0x1, 0x1           data 0x7365, 0x2073, 0x4552, 0x4553 ; 7518
00751a   2073     addwfc	0x73, 0, 0        
00751c   4552     rlncf	0x52, 0, 0x1       
00751e   4553     rlncf	0x53, 0, 0x1       
007520   0a54     xorlw	0x54                   data 0x0A54, 0x5500, 0x6B6E, 0x6F6E ; 7520
007522   5500     subfwb	0, 0, 0x1         
007524   6b6e     clrf	0x6e, 0x1           
007526   6f6e     movwf	0x6e, 0x1          
007528   6e77     movwf	0x77, 0                data 0x6E77, 0x6520, 0x7272, 0x726F ; 7528
00752a   6520     cpfsgt	0x20, 0x1         
00752c   7272     btg	0x72, 0x1, 0         
00752e   726f     btg	0x6f, 0x1, 0         
007530   6920     setf	0x20, 0x1               data 0x6920, 0x206E, 0x4146, 0x2054 ; 7530
007532   206e     addwfc	0x6e, 0, 0        
007534   4146     rrncf	0x46, 0, 0x1       
007536   2054     addwfc	0x54, 0, 0        
007538   7264     btg	0x64, 0x1, 0             data 0x7264, 0x7669, 0x7265, 0x0020 ; 7538
00753a   7669     btg	0x69, 0x3, 0         
00753c   7265     btg	0x65, 0x1, 0         
00753e   0020     dw	0x20  ;unknown opcode 
007540   4f42     dcfsnz	0x42, 0x1, 0x1        data 0x4F42, 0x544F, 0x2020, 0x2020 ; 7540
007542   544f     subfwb	0x4f, 0, 0        
007544   2020     addwfc	0x20, 0, 0        
007546   2020     addwfc	0x20, 0, 0        
007548   385a     swapf	0x5a, 0, 0             data 0x385A, 0x4E42, 0x206F, 0x654B ; 7548
00754a   4e42     dcfsnz	0x42, 0x1, 0      
00754c   206f     addwfc	0x6f, 0, 0        
00754e   654b     cpfsgt	0x4b, 0x1         
007550   6e72     movwf	0x72, 0                data 0x6E72, 0x6C65, 0x6620, 0x756F ; 7550
007552   6c65     negf	0x65, 0             
007554   6620     tstfsz	0x20, 0           
007556   756f     btg	0x6f, 0x2, 0x1       
007558   646e     cpfsgt	0x6e, 0               data 0x646E, 0x0A2E, 0x4600, 0x756F ; 7558
00755a   0a2e     xorlw	0x2e               
00755c   4600     rlncf	0, 0x1, 0          
00755e   756f     btg	0x6f, 0x2, 0x1       
007560   646e     cpfsgt	0x6e, 0               data 0x646E, 0x6120, 0x6220, 0x6F6F ; 7560
007562   6120     cpfslt	0x20, 0x1         
007564   6220     cpfseq	0x20, 0           
007566   6f6f     movwf	0x6f, 0x1          
007568   6174     cpfslt	0x74, 0x1             data 0x6174, 0x6C62, 0x2065, 0x654B ; 7568
00756a   6c62     negf	0x62, 0             
00756c   2065     addwfc	0x65, 0, 0        
00756e   654b     cpfsgt	0x4b, 0x1         
007570   6e72     movwf	0x72, 0                data 0x6E72, 0x6C65, 0x000A, 0x6854 ; 7570
007572   6c65     negf	0x65, 0             
007574   000a     tblrd	*-                 
007576   6854     setf	0x54, 0             
007578   2065     addwfc	0x65, 0, 0            data 0x2065, 0x656B, 0x6E72, 0x6C65 ; 7578
00757a   656b     cpfsgt	0x6b, 0x1         
00757c   6e72     movwf	0x72, 0            
00757e   6c65     negf	0x65, 0             
007580   6f20     movwf	0x20, 0x1              data 0x6F20, 0x206E, 0x6874, 0x7369 ; 7580
007582   206e     addwfc	0x6e, 0, 0        
007584   6874     setf	0x74, 0             
007586   7369     btg	0x69, 0x1, 0x1       
007588   6420     cpfsgt	0x20, 0               data 0x6420, 0x7369, 0x206B, 0x7369 ; 7588
00758a   7369     btg	0x69, 0x1, 0x1       
00758c   206b     addwfc	0x6b, 0, 0        
00758e   7369     btg	0x69, 0x1, 0x1       
007590   6e20     movwf	0x20, 0                data 0x6E20, 0x746F, 0x6320, 0x6D6F ; 7590
007592   746f     btg	0x6f, 0x2, 0         
007594   6320     cpfseq	0x20, 0x1         
007596   6d6f     negf	0x6f, 0x1           
007598   6170     cpfslt	0x70, 0x1             data 0x6170, 0x6974, 0x6C62, 0x2065 ; 7598
00759a   6974     setf	0x74, 0x1           
00759c   6c62     negf	0x62, 0             
00759e   2065     addwfc	0x65, 0, 0        
0075a0   6977     setf	0x77, 0x1               data 0x6977, 0x6874, 0x7420, 0x6568 ; 75A0
0075a2   6874     setf	0x74, 0             
0075a4   7420     btg	0x20, 0x2, 0         
0075a6   6568     cpfsgt	0x68, 0x1         
0075a8   6820     setf	0x20, 0                 data 0x6820, 0x7261, 0x7764, 0x7261 ; 75A8
0075aa   7261     btg	0x61, 0x1, 0         
0075ac   7764     btg	0x64, 0x3, 0x1       
0075ae   7261     btg	0x61, 0x1, 0         
0075b0   2e65     decfsz	0x65, 0x1, 0          data 0x2E65, 0x000A, 0x6F42, 0x746F ; 75B0
0075b2   000a     tblrd	*-                 
0075b4   6f42     movwf	0x42, 0x1          
0075b6   746f     btg	0x6f, 0x2, 0         
0075b8   6e69     movwf	0x69, 0                data 0x6E69, 0x2E67, 0x2E2E, 0x000A ; 75B8
0075ba   2e67     decfsz	0x67, 0x1, 0      
0075bc   2e2e     decfsz	0x2e, 0x1, 0      
0075be   000a     tblrd	*-                 
0075c0   9bcd     bcf	0xcd, 0x5, 0x1           data 0x9BCD, 0x2180, 0x977B, 0xEBCD ; 75C0
0075c2   2180     addwfc	0x80, 0, 0x1      
0075c4   977b     bcf	0x7b, 0x3, 0x1       
0075c6   ebcd     dw	0xebcd  ;unknown opcode 
0075c8   cd80     movff	0xd80, 0x647           data 0xCD80, 0x9647, 0x78CD, 0xCD96 ; 75C8
0075ca   9647
0075cc   78cd     btg	0xcd, 0x4, 0         
0075ce   cd96     movff	0xd96, 0x72f       
0075d0   972f
0075d0   972f     bcf	0x2f, 0x3, 0x1           data 0x972F, 0xA13A, 0xEE99, 0x28A5 ; 75D0
0075d2   a13a     btfss	0x3a, 0, 0x1       
0075d4   ee99     dw	0xee99  ;unknown opcode 
0075d6   28a5     incf	0xa5, 0, 0          
0075d8   3a2f     swapf	0x2f, 0x1, 0           data 0x3A2F, 0x99A1, 0xA4EE, 0x3D28 ; 75D8
0075da   99a1     bcf	0xa1, 0x4, 0x1       
0075dc   a4ee     btfss	0xee, 0x2, 0       
0075de   3d28     incfsz	0x28, 0, 0x1      
0075e0   a13a     btfss	0x3a, 0, 0x1           data 0xA13A, 0xEE99, 0x28A6, 0x3A50 ; 75E0
0075e2   ee99     dw	0xee99  ;unknown opcode 
0075e4   28a6     incf	0xa6, 0, 0          
0075e6   3a50     swapf	0x50, 0x1, 0       
0075e8   99a1     bcf	0xa1, 0x4, 0x1           data 0x99A1, 0xA7EE, 0x5328, 0xA13A ; 75E8
0075ea   a7ee     btfss	0xee, 0x3, 0x1     
0075ec   5328     movf	0x28, 0x1, 0x1      
0075ee   a13a     btfss	0x3a, 0, 0x1       
0075f0   ee99     dw	0xee99  ;unknown opcode     data 0xEE99, 0xCA8B, 0x974D, 0xA13A ; 75F0
0075f2   ca8b     movff	0xa8b, 0x74d       
0075f4   974d
0075f6   a13a     btfss	0x3a, 0, 0x1       
0075f8   ee99     dw	0xee99  ;unknown opcode     data 0xEE99, 0xCA8A, 0x9765, 0xA13A ; 75F8
0075fa   ca8a     movff	0xa8a, 0x765       
0075fc   9765
0075fe   a13a     btfss	0x3a, 0, 0x1       
007600   ee99     dw	0xee99  ;unknown opcode     data 0xEE99, 0xCA80, 0x9778, 0x5018 ; 7600
007602   ca80     movff	0xa80, 0x778       
007604   9778
007606   5018     movf	0x18, 0, 0          
007608   003e     dw	0x3e  ;unknown opcode     data 0x003E, 0xA132, 0x3A99, 0x993C ; 7608
00760a   a132     btfss	0x32, 0, 0x1       
00760c   3a99     swapf	0x99, 0x1, 0       
00760e   993c     bcf	0x3c, 0x4, 0x1       
007610   323c     rrcf	0x3c, 0x1, 0            data 0x323C, 0x993C, 0x08EE, 0x4020 ; 7610
007612   993c     bcf	0x3c, 0x4, 0x1       
007614   08ee     sublw	0xee               
007616   4020     rrncf	0x20, 0, 0         
007618   3c32     incfsz	0x32, 0, 0            data 0x3C32, 0x1899, 0x3E3B, 0x3200 ; 7618
00761a   1899     xorwf	0x99, 0, 0         
00761c   3e3b     incfsz	0x3b, 0x1, 0      
00761e   3200     rrcf	0, 0x1, 0           
007620   99a1     bcf	0xa1, 0x4, 0x1           data 0x99A1, 0x3C3A, 0xEE99, 0x2800 ; 7620
007622   3c3a     incfsz	0x3a, 0, 0        
007624   ee99     dw	0xee99  ;unknown opcode 
007626   2800     incf	0, 0, 0             
007628   3d06     incfsz	0x6, 0, 0x1           data 0x3D06, 0x3C32, 0x1899, 0x3E29 ; 7628
00762a   3c32     incfsz	0x32, 0, 0        
00762c   1899     xorwf	0x99, 0, 0         
00762e   3e29     incfsz	0x29, 0x1, 0      
007630   3d08     incfsz	0x8, 0, 0x1           data 0x3D08, 0x3C32, 0x1899, 0x3E21 ; 7630
007632   3c32     incfsz	0x32, 0, 0        
007634   1899     xorwf	0x99, 0, 0         
007636   3e21     incfsz	0x21, 0x1, 0      
007638   3200     rrcf	0, 0x1, 0               data 0x3200, 0x99A1, 0x5521, 0x1899 ; 7638
00763a   99a1     bcf	0xa1, 0x4, 0x1       
00763c   5521     subfwb	0x21, 0, 0x1      
00763e   1899     xorwf	0x99, 0, 0         
007640   3e08     incfsz	0x8, 0x1, 0           data 0x3E08, 0x3200, 0x99A1, 0x6521 ; 7640
007642   3200     rrcf	0, 0x1, 0           
007644   99a1     bcf	0xa1, 0x4, 0x1       
007646   6521     cpfsgt	0x21, 0x1         
007648   3a99     swapf	0x99, 0x1, 0           data 0x3A99, 0x993C, 0x27CB, 0x3085 ; 7648
00764a   993c     bcf	0x3c, 0x4, 0x1       
00764c   27cb     addwf	0xcb, 0x1, 0x1     
00764e   3085     rrcf	0x85, 0, 0          
007650   2401     addwf	0x1, 0, 0              data 0x2401, 0x5E6F, 0x5623, 0xE9EB ; 7650
007652   5e6f     subwf	0x6f, 0x1, 0       
007654   5623     subfwb	0x23, 0x1, 0      
007656   e9eb     dw	0xe9eb  ;unknown opcode 
007658   8fcd     bsf	0xcd, 0x7, 0x1           data 0x8FCD, 0x2195, 0x993D, 0x000E ; 7658
00765a   2195     addwfc	0x95, 0, 0x1      
00765c   993d     bcf	0x3d, 0x4, 0x1       
00765e   000e     tblwt	*-                 
007660   cd7e     movff	0xd7e, 0xc2            data 0xCD7E, 0x80C2, 0x7E23, 0xB0CD ; 7660
007662   80c2
007664   7e23     btg	0x23, 0x7, 0         
007666   b0cd     btfsc	0xcd, 0, 0         
007668   2380     addwfc	0x80, 0x1, 0x1        data 0x2380, 0x2346, 0x3C3A, 0xA999 ; 7668
00766a   2346     addwfc	0x46, 0x1, 0x1    
00766c   3c3a     incfsz	0x3a, 0, 0        
00766e   a999     btfss	0x99, 0x4, 0x1     
007670   0428     decf	0x28, 0, 0              data 0x0428, 0x003E, 0x0218, 0x013E ; 7670
007672   003e     dw	0x3e  ;unknown opcode 
007674   0218     mulwf	0x18, 0            
007676   013e     movlb	0x3e               
007678   a0cd     btfss	0xcd, 0, 0             data 0xA0CD, 0xDB80, 0xD305, 0x1005 ; 7678
00767a   db80     rcall	0x7d7c             
00767c   d305     bra	0x7c88               
00767e   1005     iorwf	0x5, 0, 0          
007680   0cfa     retlw	0xfa                   data 0x0CFA, 0x083E, 0x20A9, 0x3ED9 ; 7680
007682   083e     sublw	0x3e               
007684   20a9     addwfc	0xa9, 0, 0        
007686   3ed9     incfsz	0xd9, 0x1, 0      
007688   cd00     movff	0xd00, 0xa0            data 0xCD00, 0x80A0, 0xCFC3, 0x3E94 ; 7688
00768a   80a0
00768c   cfc3     movff	0xfc3, 0xe94       
00768e   3e94
007690   cd03     movff	0xd03, 0xb0            data 0xCD03, 0x80B0, 0x043E, 0xC2CD ; 7690
007692   80b0
007694   043e     decf	0x3e, 0, 0          
007696   c2cd     movff	0x2cd, 0xe80       
007698   3e80
007698   3e80     incfsz	0x80, 0x1, 0          data 0x3E80, 0xCD00, 0x8353, 0xEBCD ; 7698
00769a   cd00     movff	0xd00, 0x353       
00769c   8353
00769e   ebcd     dw	0xebcd  ;unknown opcode 
0076a0   3e80     incfsz	0x80, 0x1, 0          data 0x3E80, 0xCD08, 0x80B0, 0x3C3A ; 76A0
0076a2   cd08     movff	0xd08, 0xb0        
0076a4   80b0
0076a6   3c3a     incfsz	0x3a, 0, 0        
0076a8   ee99     dw	0xee99  ;unknown opcode     data 0xEE99, 0x2000, 0x3E05, 0xCD01 ; 76A8
0076aa   2000     addwfc	0, 0, 0           
0076ac   3e05     incfsz	0x5, 0x1, 0       
0076ae   cd01     movff	0xd01, 0xa0        
0076b0   80a0
0076b0   80a0     bsf	0xa0, 0, 0               data 0x80A0, 0x6F21, 0x3E83, 0xCD04 ; 76B0
0076b2   6f21     movwf	0x21, 0x1          
0076b4   3e83     incfsz	0x83, 0x1, 0      
0076b6   cd04     movff	0xd04, 0x10a       
0076b8   810a
0076b8   810a     bsf	0xa, 0, 0x1              data 0x810A, 0x003E, 0xA0CD, 0x3E80 ; 76B8
0076ba   003e     dw	0x3e  ;unknown opcode 
0076bc   a0cd     btfss	0xcd, 0, 0         
0076be   3e80     incfsz	0x80, 0x1, 0      
0076c0   d32d     bra	0x7d1c                   data 0xD32D, 0x2B05, 0x3C3A, 0xEE99 ; 76C0
0076c2   2b05     incf	0x5, 0x1, 0x1       
0076c4   3c3a     incfsz	0x3a, 0, 0        
0076c6   ee99     dw	0xee99  ;unknown opcode 
0076c8   2001     addwfc	0x1, 0, 0             data 0x2001, 0x3E05, 0xCD01, 0x80A0 ; 76C8
0076ca   3e05     incfsz	0x5, 0x1, 0       
0076cc   cd01     movff	0xd01, 0xa0        
0076ce   80a0
0076d0   023e     mulwf	0x3e, 0                data 0x023E, 0x0ACD, 0x3E81, 0xCD00 ; 76D0
0076d2   0acd     xorlw	0xcd               
0076d4   3e81     incfsz	0x81, 0x1, 0      
0076d6   cd00     movff	0xd00, 0xa0        
0076d8   80a0
0076d8   80a0     bsf	0xa0, 0, 0               data 0x80A0, 0x2D3E, 0x05D3, 0x3A2B ; 76D8
0076da   2d3e     decfsz	0x3e, 0, 0x1      
0076dc   05d3     decf	0xd3, 0, 0x1        
0076de   3a2b     swapf	0x2b, 0x1, 0       
0076e0   993c     bcf	0x3c, 0x4, 0x1           data 0x993C, 0x02EE, 0x0520, 0x013E ; 76E0
0076e2   02ee     mulwf	0xee, 0            
0076e4   0520     decf	0x20, 0, 0x1        
0076e6   013e     movlb	0x3e               
0076e8   a0cd     btfss	0xcd, 0, 0             data 0xA0CD, 0x3E80, 0xCD02, 0x810A ; 76E8
0076ea   3e80     incfsz	0x80, 0x1, 0      
0076ec   cd02     movff	0xd02, 0x10a       
0076ee   810a
0076f0   003e     dw	0x3e  ;unknown opcode     data 0x003E, 0xA0CD, 0x3E80, 0xD320 ; 76F0
0076f2   a0cd     btfss	0xcd, 0, 0         
0076f4   3e80     incfsz	0x80, 0x1, 0      
0076f6   d320     bra	0x7d38               
0076f8   2b05     incf	0x5, 0x1, 0x1           data 0x2B05, 0x3C3A, 0xEE99, 0x2003 ; 76F8
0076fa   3c3a     incfsz	0x3a, 0, 0        
0076fc   ee99     dw	0xee99  ;unknown opcode 
0076fe   2003     addwfc	0x3, 0, 0         
007700   3e05     incfsz	0x5, 0x1, 0           data 0x3E05, 0xCD01, 0x80A0, 0x023E ; 7700
007702   cd01     movff	0xd01, 0xa0        
007704   80a0
007706   023e     mulwf	0x3e, 0            
007708   0acd     xorlw	0xcd                   data 0x0ACD, 0x3E81, 0xCD00, 0x80A0 ; 7708
00770a   3e81     incfsz	0x81, 0x1, 0      
00770c   cd00     movff	0xd00, 0xa0        
00770e   80a0
007710   3a3e     swapf	0x3e, 0x1, 0           data 0x3A3E, 0x05D3, 0x3A2B, 0x993C ; 7710
007712   05d3     decf	0xd3, 0, 0x1        
007714   3a2b     swapf	0x2b, 0x1, 0       
007716   993c     bcf	0x3c, 0x4, 0x1       
007718   04ee     decf	0xee, 0, 0              data 0x04EE, 0x0520, 0x013E, 0xA0CD ; 7718
00771a   0520     decf	0x20, 0, 0x1        
00771c   013e     movlb	0x3e               
00771e   a0cd     btfss	0xcd, 0, 0         
007720   3e80     incfsz	0x80, 0x1, 0          data 0x3E80, 0xCD02, 0x810A, 0x003E ; 7720
007722   cd02     movff	0xd02, 0x10a       
007724   810a
007726   003e     dw	0x3e  ;unknown opcode 
007728   a0cd     btfss	0xcd, 0, 0             data 0xA0CD, 0x3E80, 0xD33A, 0x2B05 ; 7728
00772a   3e80     incfsz	0x80, 0x1, 0      
00772c   d33a     bra	0x7da2               
00772e   2b05     incf	0x5, 0x1, 0x1       
007730   3c3a     incfsz	0x3a, 0, 0            data 0x3C3A, 0xEE99, 0x2005, 0x3E05 ; 7730
007732   ee99     dw	0xee99  ;unknown opcode 
007734   2005     addwfc	0x5, 0, 0         
007736   3e05     incfsz	0x5, 0x1, 0       
007738   cd01     movff	0xd01, 0xa0            data 0xCD01, 0x80A0, 0x023E, 0x0ACD ; 7738
00773a   80a0
00773c   023e     mulwf	0x3e, 0            
00773e   0acd     xorlw	0xcd               
007740   3e81     incfsz	0x81, 0x1, 0          data 0x3E81, 0xCD00, 0x80A0, 0x3EC9 ; 7740
007742   cd00     movff	0xd00, 0xa0        
007744   80a0
007746   3ec9     incfsz	0xc9, 0x1, 0      
007748   cd0f     movff	0xd0f, 0xb0            data 0xCD0F, 0x80B0, 0x063E, 0xC2CD ; 7748
00774a   80b0
00774c   063e     decf	0x3e, 0x1, 0        
00774e   c2cd     movff	0x2cd, 0xa80       
007750   3a80
007750   3a80     swapf	0x80, 0x1, 0           data 0x3A80, 0x0091, 0x1717, 0x9221 ; 7750
007752   0091     dw	0x91  ;unknown opcode 
007754   1717     andwf	0x17, 0x1, 0x1     
007756   9221     bcf	0x21, 0x1, 0         
007758   8500     bsf	0, 0x2, 0x1              data 0x8500, 0x0130, 0x6F24, 0x043E ; 7758
00775a   0130     movlb	0x30               
00775c   6f24     movwf	0x24, 0x1          
00775e   043e     decf	0x3e, 0, 0          
007760   fccd     dw	0xfccd  ;unknown opcode     data 0xFCCD, 0x2185, 0x869B, 0x023E ; 7760
007762   2185     addwfc	0x85, 0, 0x1      
007764   869b     bsf	0x9b, 0x3, 0         
007766   023e     mulwf	0x3e, 0            
007768   0acd     xorlw	0xcd                   data 0x0ACD, 0x3E81, 0xD32E, 0x2105 ; 7768
00776a   3e81     incfsz	0x81, 0x1, 0      
00776c   d32e     bra	0x7dca               
00776e   2105     addwfc	0x5, 0, 0x1       
007770   869a     bsf	0x9a, 0x3, 0             data 0x869A, 0x023E, 0x0ACD, 0xC981 ; 7770
007772   023e     mulwf	0x3e, 0            
007774   0acd     xorlw	0xcd               
007776   c981     movff	0x981, 0x83e       
007778   083e
007778   083e     sublw	0x3e                   data 0x083E, 0xC2CD, 0x3E80, 0xCD0F ; 7778
00777a   c2cd     movff	0x2cd, 0xe80       
00777c   3e80
00777e   cd0f     movff	0xd0f, 0xb0        
007780   80b0
007780   80b0     bsf	0xb0, 0, 0               data 0x80B0, 0xA23A, 0x2100, 0x9975 ; 7780
007782   a23a     btfss	0x3a, 0x1, 0       
007784   2100     addwfc	0, 0, 0x1         
007786   9975     bcf	0x75, 0x4, 0x1       
007788   27cb     addwf	0xcb, 0x1, 0x1         data 0x27CB, 0x3085, 0x2401, 0x5E6F ; 7788
00778a   3085     rrcf	0x85, 0, 0          
00778c   2401     addwf	0x1, 0, 0          
00778e   5e6f     subwf	0x6f, 0x1, 0       
007790   5623     subfwb	0x23, 0x1, 0          data 0x5623, 0xCDEB, 0x80EB, 0xCDC9 ; 7790
007792   cdeb     movff	0xdeb, 0xeb        
007794   80eb
007796   cdc9     movff	0xdc9, 0x1d5       
007798   81d5
007798   81d5     bsf	0xd5, 0, 0x1             data 0x81D5, 0x58C3, 0xCD95, 0x8203 ; 7798
00779a   58c3     subwfb	0xc3, 0, 0        
00779c   cd95     movff	0xd95, 0x203       
00779e   8203
0077a0   58c3     subwfb	0xc3, 0, 0            data 0x58C3, 0xCD95, 0x8232, 0x58C3 ; 77A0
0077a2   cd95     movff	0xd95, 0x232       
0077a4   8232
0077a6   58c3     subwfb	0xc3, 0, 0        
0077a8   cd95     movff	0xd95, 0x282           data 0xCD95, 0x8282, 0x58C3, 0xCD95 ; 77A8
0077aa   8282
0077ac   58c3     subwfb	0xc3, 0, 0        
0077ae   cd95     movff	0xd95, 0x2ac       
0077b0   82ac
0077b0   82ac     bsf	0xac, 0x1, 0             data 0x82AC, 0x58C3, 0xCD95, 0x82D6 ; 77B0
0077b2   58c3     subwfb	0xc3, 0, 0        
0077b4   cd95     movff	0xd95, 0x2d6       
0077b6   82d6
0077b8   58c3     subwfb	0xc3, 0, 0            data 0x58C3, 0x3A95, 0x0091, 0xEE3C ; 77B8
0077ba   3a95     swapf	0x95, 0x1, 0       
0077bc   0091     dw	0x91  ;unknown opcode 
0077be   ee3c     lfsr	0x3, 0xc04          
0077c0   2004
0077c0   2004     addwfc	0x4, 0, 0             data 0x2004, 0x3E02, 0xEE04, 0x3204 ; 77C0
0077c2   3e02     incfsz	0x2, 0x1, 0       
0077c4   ee04     lfsr	0, 0x404            
0077c6   3204
0077c8   0091     dw	0x91  ;unknown opcode     data 0x0091, 0x47CD, 0xC396, 0x9558 ; 77C8
0077ca   47cd     rlncf	0xcd, 0x1, 0x1     
0077cc   c396     movff	0x396, 0x558       
0077ce   9558
0077d0   a23a     btfss	0x3a, 0x1, 0           data 0xA23A, 0x3C00, 0x04EE, 0x0220 ; 77D0
0077d2   3c00     incfsz	0, 0, 0           
0077d4   04ee     decf	0xee, 0, 0          
0077d6   0220     mulwf	0x20, 0            
0077d8   043e     decf	0x3e, 0, 0              data 0x043E, 0x04EE, 0xA232, 0xCD00 ; 77D8
0077da   04ee     decf	0xee, 0, 0          
0077dc   a232     btfss	0x32, 0x1, 0       
0077de   cd00     movff	0xd00, 0x678       
0077e0   9678
0077e0   9678     bcf	0x78, 0x3, 0             data 0x9678, 0x58C3, 0xCD95, 0x81EC ; 77E0
0077e2   58c3     subwfb	0xc3, 0, 0        
0077e4   cd95     movff	0xd95, 0x1ec       
0077e6   81ec
0077e8   58c3     subwfb	0xc3, 0, 0            data 0x58C3, 0xCD95, 0x820C, 0x58C3 ; 77E8
0077ea   cd95     movff	0xd95, 0x20c       
0077ec   820c
0077ee   58c3     subwfb	0xc3, 0, 0        
0077f0   cd95     movff	0xd95, 0x23b           data 0xCD95, 0x823B, 0x58C3, 0xCD95 ; 77F0
0077f2   823b
0077f4   58c3     subwfb	0xc3, 0, 0        
0077f6   cd95     movff	0xd95, 0x28b       
0077f8   828b
0077f8   828b     bsf	0x8b, 0x1, 0             data 0x828B, 0x58C3, 0xCD95, 0x82B5 ; 77F8
0077fa   58c3     subwfb	0xc3, 0, 0        
0077fc   cd95     movff	0xd95, 0x2b5       
0077fe   82b5
007800   58c3     subwfb	0xc3, 0, 0            data 0x58C3, 0xCD95, 0x82DF, 0x58C3 ; 7800
007802   cd95     movff	0xd95, 0x2df       
007804   82df
007806   58c3     subwfb	0xc3, 0, 0        
007808   3a95     swapf	0x95, 0x1, 0           data 0x3A95, 0x0091, 0x00EE, 0x0220 ; 7808
00780a   0091     dw	0x91  ;unknown opcode 
00780c   00ee     dw	0xee  ;unknown opcode 
00780e   0220     mulwf	0x20, 0            
007810   043e     decf	0x3e, 0, 0              data 0x043E, 0x323D, 0x0091, 0x47CD ; 7810
007812   323d     rrcf	0x3d, 0x1, 0        
007814   0091     dw	0x91  ;unknown opcode 
007816   47cd     rlncf	0xcd, 0x1, 0x1     
007818   c396     movff	0x396, 0x558           data 0xC396, 0x9558, 0xA23A, 0xEE00 ; 7818
00781a   9558
00781c   a23a     btfss	0x3a, 0x1, 0       
00781e   ee00     lfsr	0, 0                
007820   2000
007820   2000     addwfc	0, 0, 0               data 0x2000, 0x3E02, 0x3D04, 0xA232 ; 7820
007822   3e02     incfsz	0x2, 0x1, 0       
007824   3d04     incfsz	0x4, 0, 0x1       
007826   a232     btfss	0x32, 0x1, 0       
007828   cd00     movff	0xd00, 0x678           data 0xCD00, 0x9678, 0x58C3, 0xF395 ; 7828
00782a   9678
00782c   58c3     subwfb	0xc3, 0, 0        
00782e   f395     dw	0xf395  ;unknown opcode 
007830   003e     dw	0x3e  ;unknown opcode     data 0x003E, 0x06D3, 0x06DB, 0x4FCB ; 7830
007832   06d3     decf	0xd3, 0x1, 0        
007834   06db     decf	0xdb, 0x1, 0        
007836   4fcb     dcfsnz	0xcb, 0x1, 0x1    
007838   0720     decf	0x20, 0x1, 0x1          data 0x0720, 0x03DB, 0xA132, 0x1899 ; 7838
00783a   03db     mulwf	0xdb, 0x1          
00783c   a132     btfss	0x32, 0, 0x1       
00783e   1899     xorwf	0x99, 0, 0         
007840   3e05     incfsz	0x5, 0x1, 0           data 0x3E05, 0x3200, 0x99A1, 0xA53A ; 7840
007842   3200     rrcf	0, 0x1, 0           
007844   99a1     bcf	0xa1, 0x4, 0x1       
007846   a53a     btfss	0x3a, 0x2, 0x1     
007848   d300     bra	0x7e4a                   data 0xD300, 0xFB06, 0x3EC9, 0x3200 ; 7848
00784a   fb06     dw	0xfb06  ;unknown opcode 
00784c   3ec9     incfsz	0xc9, 0x1, 0      
00784e   3200     rrcf	0, 0x1, 0           
007850   99a1     bcf	0xa1, 0x4, 0x1           data 0x99A1, 0x033E, 0x9132, 0xCD00 ; 7850
007852   033e     mulwf	0x3e, 0x1          
007854   9132     bcf	0x32, 0, 0x1         
007856   cd00     movff	0xd00, 0x647       
007858   9647
007858   9647     bcf	0x47, 0x3, 0             data 0x9647, 0x003E, 0xA232, 0xCD00 ; 7858
00785a   003e     dw	0x3e  ;unknown opcode 
00785c   a232     btfss	0x32, 0x1, 0       
00785e   cd00     movff	0xd00, 0x678       
007860   9678
007860   9678     bcf	0x78, 0x3, 0             data 0x9678, 0x58C3, 0x3A95, 0x0091 ; 7860
007862   58c3     subwfb	0xc3, 0, 0        
007864   3a95     swapf	0x95, 0x1, 0       
007866   0091     dw	0x91  ;unknown opcode 
007868   0106     movlb	0x6                    data 0x0106, 0x2CCD, 0x3A80, 0x00A2 ; 7868
00786a   2ccd     decfsz	0xcd, 0, 0        
00786c   3a80     swapf	0x80, 0x1, 0       
00786e   00a2     dw	0xa2  ;unknown opcode 
007870   0006     pop                          data 0x0006, 0x2CCD, 0xC380, 0x9778 ; 7870
007872   2ccd     decfsz	0xcd, 0, 0        
007874   c380     movff	0x380, 0x778       
007876   9778
007878   74c3     btg	0xc3, 0x2, 0             data 0x74C3, 0x9F80, 0x9090, 0x9090 ; 7878
00787a   9f80     bcf	0x80, 0x7, 0x1       
00787c   9090     bcf	0x90, 0, 0           
00787e   9090     bcf	0x90, 0, 0           
007880   9090     bcf	0x90, 0, 0               data 0x9090, 0x9090, 0x9090, 0x9090 ; 7880
007882   9090     bcf	0x90, 0, 0           
007884   9090     bcf	0x90, 0, 0           
007886   9090     bcf	0x90, 0, 0           
007888   9090     bcf	0x90, 0, 0               data 0x9090, 0x9090, 0x9090, 0x9090 ; 7888
00788a   9090     bcf	0x90, 0, 0           
00788c   9090     bcf	0x90, 0, 0           
00788e   9090     bcf	0x90, 0, 0           
007890   9090     bcf	0x90, 0, 0               data 0x9090, 0x9090, 0x9090, 0x9090 ; 7890
007892   9090     bcf	0x90, 0, 0           
007894   9090     bcf	0x90, 0, 0           
007896   9090     bcf	0x90, 0, 0           
007898   9090     bcf	0x90, 0, 0               data 0x9090, 0x919E, 0x5A20, 0x3038 ; 7898
00789a   919e     bcf	0x9e, 0, 0x1         
00789c   5a20     subwfb	0x20, 0x1, 0      
00789e   3038     rrcf	0x38, 0, 0          
0078a0   5020     movf	0x20, 0, 0              data 0x5020, 0x6F72, 0x656A, 0x7463 ; 78A0
0078a2   6f72     movwf	0x72, 0x1          
0078a4   656a     cpfsgt	0x6a, 0x1         
0078a6   7463     btg	0x63, 0x2, 0         
0078a8   4d20     dcfsnz	0x20, 0, 0x1          data 0x4D20, 0x7261, 0x206B, 0x3A32 ; 78A8
0078aa   7261     btg	0x61, 0x1, 0         
0078ac   206b     addwfc	0x6b, 0, 0        
0078ae   3a32     swapf	0x32, 0x1, 0       
0078b0   4220     rrncf	0x20, 0x1, 0           data 0x4220, 0x4F49, 0x2053, 0x2020 ; 78B0
0078b2   4f49     dcfsnz	0x49, 0x1, 0x1    
0078b4   2053     addwfc	0x53, 0, 0        
0078b6   2020     addwfc	0x20, 0, 0        
0078b8   2020     addwfc	0x20, 0, 0            data 0x2020, 0x9191, 0x2020, 0x2020 ; 78B8
0078ba   9191     bcf	0x91, 0, 0x1         
0078bc   2020     addwfc	0x20, 0, 0        
0078be   2020     addwfc	0x20, 0, 0        
0078c0   2020     addwfc	0x20, 0, 0            data 0x2020, 0x2020, 0x2020, 0x2020 ; 78C0
0078c2   2020     addwfc	0x20, 0, 0        
0078c4   2020     addwfc	0x20, 0, 0        
0078c6   2020     addwfc	0x20, 0, 0        
0078c8   2020     addwfc	0x20, 0, 0            data 0x2020, 0x2020, 0x2020, 0x2020 ; 78C8
0078ca   2020     addwfc	0x20, 0, 0        
0078cc   2020     addwfc	0x20, 0, 0        
0078ce   2020     addwfc	0x20, 0, 0        
0078d0   2020     addwfc	0x20, 0, 0            data 0x2020, 0x2020, 0x2020, 0x2020 ; 78D0
0078d2   2020     addwfc	0x20, 0, 0        
0078d4   2020     addwfc	0x20, 0, 0        
0078d6   2020     addwfc	0x20, 0, 0        
0078d8   2020     addwfc	0x20, 0, 0            data 0x2020, 0x9191, 0x5420, 0x6D69 ; 78D8
0078da   9191     bcf	0x91, 0, 0x1         
0078dc   5420     subfwb	0x20, 0, 0        
0078de   6d69     negf	0x69, 0x1           
0078e0   3a65     swapf	0x65, 0x1, 0           data 0x3A65, 0x2020, 0x2020, 0x2020 ; 78E0
0078e2   2020     addwfc	0x20, 0, 0        
0078e4   2020     addwfc	0x20, 0, 0        
0078e6   2020     addwfc	0x20, 0, 0        
0078e8   2020     addwfc	0x20, 0, 0            data 0x2020, 0x2020, 0x2020, 0x2020 ; 78E8
0078ea   2020     addwfc	0x20, 0, 0        
0078ec   2020     addwfc	0x20, 0, 0        
0078ee   2020     addwfc	0x20, 0, 0        
0078f0   2020     addwfc	0x20, 0, 0            data 0x2020, 0x2020, 0x2020, 0x2020 ; 78F0
0078f2   2020     addwfc	0x20, 0, 0        
0078f4   2020     addwfc	0x20, 0, 0        
0078f6   2020     addwfc	0x20, 0, 0        
0078f8   2020     addwfc	0x20, 0, 0            data 0x2020, 0x9191, 0x2020, 0x6F44 ; 78F8
0078fa   9191     bcf	0x91, 0, 0x1         
0078fc   2020     addwfc	0x20, 0, 0        
0078fe   6f44     movwf	0x44, 0x1          
007900   2c77     decfsz	0x77, 0, 0            data 0x2C77, 0x7920, 0x7979, 0x2D79 ; 7900
007902   7920     btg	0x20, 0x4, 0x1       
007904   7979     btg	0x79, 0x4, 0x1       
007906   2d79     decfsz	0x79, 0, 0x1      
007908   6d6d     negf	0x6d, 0x1               data 0x6D6D, 0x642D, 0x2064, 0x4848 ; 7908
00790a   642d     cpfsgt	0x2d, 0           
00790c   2064     addwfc	0x64, 0, 0        
00790e   4848     infsnz	0x48, 0, 0        
007910   4d3a     dcfsnz	0x3a, 0, 0x1          data 0x4D3A, 0x3A4D, 0x5353, 0x2020 ; 7910
007912   3a4d     swapf	0x4d, 0x1, 0       
007914   5353     movf	0x53, 0x1, 0x1      
007916   2020     addwfc	0x20, 0, 0        
007918   2020     addwfc	0x20, 0, 0            data 0x2020, 0x9191, 0x2020, 0x2020 ; 7918
00791a   9191     bcf	0x91, 0, 0x1         
00791c   2020     addwfc	0x20, 0, 0        
00791e   2020     addwfc	0x20, 0, 0        
007920   2020     addwfc	0x20, 0, 0            data 0x2020, 0x2020, 0x2020, 0x2020 ; 7920
007922   2020     addwfc	0x20, 0, 0        
007924   2020     addwfc	0x20, 0, 0        
007926   2020     addwfc	0x20, 0, 0        
007928   2020     addwfc	0x20, 0, 0            data 0x2020, 0x2020, 0x2020, 0x2020 ; 7928
00792a   2020     addwfc	0x20, 0, 0        
00792c   2020     addwfc	0x20, 0, 0        
00792e   2020     addwfc	0x20, 0, 0        
007930   2020     addwfc	0x20, 0, 0            data 0x2020, 0x2020, 0x2020, 0x2020 ; 7930
007932   2020     addwfc	0x20, 0, 0        
007934   2020     addwfc	0x20, 0, 0        
007936   2020     addwfc	0x20, 0, 0        
007938   2020     addwfc	0x20, 0, 0            data 0x2020, 0x9191, 0x4320, 0x6F6C ; 7938
00793a   9191     bcf	0x91, 0, 0x1         
00793c   4320     rrncf	0x20, 0x1, 0x1     
00793e   6f6c     movwf	0x6c, 0x1          
007940   6b63     clrf	0x63, 0x1               data 0x6B63, 0x5320, 0x6570, 0x6465 ; 7940
007942   5320     movf	0x20, 0x1, 0x1      
007944   6570     cpfsgt	0x70, 0x1         
007946   6465     cpfsgt	0x65, 0           
007948   203a     addwfc	0x3a, 0, 0            data 0x203A, 0x3030, 0x302E, 0x2030 ; 7948
00794a   3030     rrcf	0x30, 0, 0          
00794c   302e     rrcf	0x2e, 0, 0          
00794e   2030     addwfc	0x30, 0, 0        
007950   484d     infsnz	0x4d, 0, 0            data 0x484D, 0x207A, 0x2020, 0x2020 ; 7950
007952   207a     addwfc	0x7a, 0, 0        
007954   2020     addwfc	0x20, 0, 0        
007956   2020     addwfc	0x20, 0, 0        
007958   2020     addwfc	0x20, 0, 0            data 0x2020, 0x9191, 0x2020, 0x2020 ; 7958
00795a   9191     bcf	0x91, 0, 0x1         
00795c   2020     addwfc	0x20, 0, 0        
00795e   2020     addwfc	0x20, 0, 0        
007960   2020     addwfc	0x20, 0, 0            data 0x2020, 0x2020, 0x2020, 0x2020 ; 7960
007962   2020     addwfc	0x20, 0, 0        
007964   2020     addwfc	0x20, 0, 0        
007966   2020     addwfc	0x20, 0, 0        
007968   2020     addwfc	0x20, 0, 0            data 0x2020, 0x2020, 0x2020, 0x2020 ; 7968
00796a   2020     addwfc	0x20, 0, 0        
00796c   2020     addwfc	0x20, 0, 0        
00796e   2020     addwfc	0x20, 0, 0        
007970   2020     addwfc	0x20, 0, 0            data 0x2020, 0x2020, 0x2020, 0x2020 ; 7970
007972   2020     addwfc	0x20, 0, 0        
007974   2020     addwfc	0x20, 0, 0        
007976   2020     addwfc	0x20, 0, 0        
007978   2020     addwfc	0x20, 0, 0            data 0x2020, 0x9191, 0x4220, 0x6F6F ; 7978
00797a   9191     bcf	0x91, 0, 0x1         
00797c   4220     rrncf	0x20, 0x1, 0       
00797e   6f6f     movwf	0x6f, 0x1          
007980   2074     addwfc	0x74, 0, 0            data 0x2074, 0x724F, 0x6564, 0x3A72 ; 7980
007982   724f     btg	0x4f, 0x1, 0         
007984   6564     cpfsgt	0x64, 0x1         
007986   3a72     swapf	0x72, 0x1, 0       
007988   2020     addwfc	0x20, 0, 0            data 0x2020, 0x4453, 0x202C, 0x5355 ; 7988
00798a   4453     rlncf	0x53, 0, 0         
00798c   202c     addwfc	0x2c, 0, 0        
00798e   5355     movf	0x55, 0x1, 0x1      
007990   2042     addwfc	0x42, 0, 0            data 0x2042, 0x2020, 0x2020, 0x2020 ; 7990
007992   2020     addwfc	0x20, 0, 0        
007994   2020     addwfc	0x20, 0, 0        
007996   2020     addwfc	0x20, 0, 0        
007998   2020     addwfc	0x20, 0, 0            data 0x2020, 0x9191, 0x2020, 0x2020 ; 7998
00799a   9191     bcf	0x91, 0, 0x1         
00799c   2020     addwfc	0x20, 0, 0        
00799e   2020     addwfc	0x20, 0, 0        
0079a0   2020     addwfc	0x20, 0, 0            data 0x2020, 0x2020, 0x2020, 0x2020 ; 79A0
0079a2   2020     addwfc	0x20, 0, 0        
0079a4   2020     addwfc	0x20, 0, 0        
0079a6   2020     addwfc	0x20, 0, 0        
0079a8   2020     addwfc	0x20, 0, 0            data 0x2020, 0x2020, 0x2020, 0x2020 ; 79A8
0079aa   2020     addwfc	0x20, 0, 0        
0079ac   2020     addwfc	0x20, 0, 0        
0079ae   2020     addwfc	0x20, 0, 0        
0079b0   2020     addwfc	0x20, 0, 0            data 0x2020, 0x2020, 0x2020, 0x2020 ; 79B0
0079b2   2020     addwfc	0x20, 0, 0        
0079b4   2020     addwfc	0x20, 0, 0        
0079b6   2020     addwfc	0x20, 0, 0        
0079b8   2020     addwfc	0x20, 0, 0            data 0x2020, 0x9591, 0x9090, 0x9090 ; 79B8
0079ba   9591     bcf	0x91, 0x2, 0x1       
0079bc   9090     bcf	0x90, 0, 0           
0079be   9090     bcf	0x90, 0, 0           
0079c0   9090     bcf	0x90, 0, 0               data 0x9090, 0x9090, 0x9090, 0x9090 ; 79C0
0079c2   9090     bcf	0x90, 0, 0           
0079c4   9090     bcf	0x90, 0, 0           
0079c6   9090     bcf	0x90, 0, 0           
0079c8   9090     bcf	0x90, 0, 0               data 0x9090, 0x9090, 0x9090, 0x9090 ; 79C8
0079ca   9090     bcf	0x90, 0, 0           
0079cc   9090     bcf	0x90, 0, 0           
0079ce   9090     bcf	0x90, 0, 0           
0079d0   9090     bcf	0x90, 0, 0               data 0x9090, 0x9090, 0x9090, 0x9090 ; 79D0
0079d2   9090     bcf	0x90, 0, 0           
0079d4   9090     bcf	0x90, 0, 0           
0079d6   9090     bcf	0x90, 0, 0           
0079d8   9090     bcf	0x90, 0, 0               data 0x9090, 0x9194, 0x4620, 0x3031 ; 79D8
0079da   9194     bcf	0x94, 0, 0x1         
0079dc   4620     rlncf	0x20, 0x1, 0       
0079de   3031     rrcf	0x31, 0, 0          
0079e0   533d     movf	0x3d, 0x1, 0x1          data 0x533D, 0x7661, 0x2065, 0x2026 ; 79E0
0079e2   7661     btg	0x61, 0x3, 0         
0079e4   2065     addwfc	0x65, 0, 0        
0079e6   2026     addwfc	0x26, 0, 0        
0079e8   7551     btg	0x51, 0x2, 0x1           data 0x7551, 0x7469, 0x2020, 0x5345 ; 79E8
0079ea   7469     btg	0x69, 0x2, 0         
0079ec   2020     addwfc	0x20, 0, 0        
0079ee   5345     movf	0x45, 0x1, 0x1      
0079f0   3d43     incfsz	0x43, 0, 0x1          data 0x3D43, 0x6143, 0x636E, 0x6C65 ; 79F0
0079f2   6143     cpfslt	0x43, 0x1         
0079f4   636e     cpfseq	0x6e, 0x1         
0079f6   6c65     negf	0x65, 0             
0079f8   2020     addwfc	0x20, 0, 0            data 0x2020, 0x9191, 0x4620, 0x3131 ; 79F8
0079fa   9191     bcf	0x91, 0, 0x1         
0079fc   4620     rlncf	0x20, 0x1, 0       
0079fe   3131     rrcf	0x31, 0, 0x1        
007a00   4c3d     dcfsnz	0x3d, 0, 0            data 0x4C3D, 0x616F, 0x2064, 0x6544 ; 7A00
007a02   616f     cpfslt	0x6f, 0x1         
007a04   2064     addwfc	0x64, 0, 0        
007a06   6544     cpfsgt	0x44, 0x1         
007a08   6166     cpfslt	0x66, 0x1             data 0x6166, 0x6C75, 0x7374, 0x2020 ; 7A08
007a0a   6c75     negf	0x75, 0             
007a0c   7374     btg	0x74, 0x1, 0x1       
007a0e   2020     addwfc	0x20, 0, 0        
007a10   2020     addwfc	0x20, 0, 0            data 0x2020, 0x2020, 0x2020, 0x2020 ; 7A10
007a12   2020     addwfc	0x20, 0, 0        
007a14   2020     addwfc	0x20, 0, 0        
007a16   2020     addwfc	0x20, 0, 0        
007a18   2020     addwfc	0x20, 0, 0            data 0x2020, 0x9D91, 0x9090, 0x9090 ; 7A18
007a1a   9d91     bcf	0x91, 0x6, 0x1       
007a1c   9090     bcf	0x90, 0, 0           
007a1e   9090     bcf	0x90, 0, 0           
007a20   9090     bcf	0x90, 0, 0               data 0x9090, 0x9090, 0x9090, 0x9090 ; 7A20
007a22   9090     bcf	0x90, 0, 0           
007a24   9090     bcf	0x90, 0, 0           
007a26   9090     bcf	0x90, 0, 0           
007a28   9090     bcf	0x90, 0, 0               data 0x9090, 0x9090, 0x9090, 0x9090 ; 7A28
007a2a   9090     bcf	0x90, 0, 0           
007a2c   9090     bcf	0x90, 0, 0           
007a2e   9090     bcf	0x90, 0, 0           
007a30   9090     bcf	0x90, 0, 0               data 0x9090, 0x9090, 0x9090, 0x9090 ; 7A30
007a32   9090     bcf	0x90, 0, 0           
007a34   9090     bcf	0x90, 0, 0           
007a36   9090     bcf	0x90, 0, 0           
007a38   9090     bcf	0x90, 0, 0               data 0x9090, 0x009C, 0x0400, 0x0408 ; 7A38
007a3a   009c     dw	0x9c  ;unknown opcode 
007a3c   0400     decf	0, 0, 0             
007a3e   0408     decf	0x8, 0, 0           
007a40   0d04     mullw	0x4                    data 0x0D04, 0x0402, 0x0210, 0x1304 ; 7A40
007a42   0402     decf	0x2, 0, 0           
007a44   0210     mulwf	0x10, 0            
007a46   1304     iorwf	0x4, 0x1, 0x1      
007a48   0402     decf	0x2, 0, 0               data 0x0402, 0x0216, 0x1904, 0x0602 ; 7A48
007a4a   0216     mulwf	0x16, 0            
007a4c   1904     xorwf	0x4, 0, 0x1        
007a4e   0602     decf	0x2, 0x1, 0         
007a50   050f     decf	0xf, 0, 0x1             data 0x050F, 0x0F08, 0x9707, 0x9D96 ; 7A50
007a52   0f08     addlw	0x8                
007a54   9707     bcf	0x7, 0x3, 0x1        
007a56   9d96     bcf	0x96, 0x6, 0x1       
007a58   a396     btfss	0x96, 0x1, 0x1         data 0xA396, 0xA996, 0xAF96, 0xB596 ; 7A58
007a5a   a996     btfss	0x96, 0x4, 0x1     
007a5c   af96     btfss	0x96, 0x7, 0x1     
007a5e   b596     btfsc	0x96, 0x2, 0x1     
007a60   bb96     btfsc	0x96, 0x5, 0x1         data 0xBB96, 0xD096, 0xE596, 0xEB96 ; 7A60
007a62   d096     bra	0x7b90               
007a64   e596     bnov	0x7992              
007a66   eb96     dw	0xeb96  ;unknown opcode 
007a68   f196     dw	0xf196  ;unknown opcode     data 0xF196, 0xF796, 0xFD96, 0x0396 ; 7A68
007a6a   f796     dw	0xf796  ;unknown opcode 
007a6c   fd96     dw	0xfd96  ;unknown opcode 
007a6e   0396     mulwf	0x96, 0x1          
007a70   0997     iorlw	0x97                   data 0x0997, 0x1C97, 0x7D97, 0x8599 ; 7A70
007a72   1c97     comf	0x97, 0, 0          
007a74   7d97     btg	0x97, 0x6, 0x1       
007a76   8599     bsf	0x99, 0x2, 0x1       
007a78   8d99     bsf	0x99, 0x6, 0x1           data 0x8D99, 0x9599, 0x5399, 0x2044 ; 7A78
007a7a   9599     bcf	0x99, 0x2, 0x1       
007a7c   5399     movf	0x99, 0x1, 0x1      
007a7e   2044     addwfc	0x44, 0, 0        
007a80   2020     addwfc	0x20, 0, 0            data 0x2020, 0x2020, 0x5500, 0x4253 ; 7A80
007a82   2020     addwfc	0x20, 0, 0        
007a84   5500     subfwb	0, 0, 0x1         
007a86   4253     rrncf	0x53, 0x1, 0       
007a88   2020     addwfc	0x20, 0, 0            data 0x2020, 0x2020, 0x5300, 0x2C44 ; 7A88
007a8a   2020     addwfc	0x20, 0, 0        
007a8c   5300     movf	0, 0x1, 0x1         
007a8e   2c44     decfsz	0x44, 0, 0        
007a90   5520     subfwb	0x20, 0, 0x1          data 0x5520, 0x4253, 0x5500, 0x4253 ; 7A90
007a92   4253     rrncf	0x53, 0x1, 0       
007a94   5500     subfwb	0, 0, 0x1         
007a96   4253     rrncf	0x53, 0x1, 0       
007a98   202c     addwfc	0x2c, 0, 0            data 0x202C, 0x4453, 0x0000, 0x0000 ; 7A98
007a9a   4453     rlncf	0x53, 0, 0         
007a9c   0000     nop                      
007a9e   0000     nop                      
007aa0   0000     nop                          data 0x0000, 0x6572, 0x6461, 0x7420 ; 7AA0
007aa2   6572     cpfsgt	0x72, 0x1         
007aa4   6461     cpfsgt	0x61, 0           
007aa6   7420     btg	0x20, 0x2, 0         
007aa8   6d69     negf	0x69, 0x1               data 0x6D69, 0x6465, 0x6F20, 0x7475 ; 7AA8
007aaa   6465     cpfsgt	0x65, 0           
007aac   6f20     movwf	0x20, 0x1          
007aae   7475     btg	0x75, 0x2, 0         
007ab0   000a     tblrd	*-                     data 0x000A, 0x0000, 0x0000, 0x0000 ; 7AB0
007ab2   0000     nop                      
007ab4   0000     nop                      
007ab6   0000     nop                      
007ab8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7AB8
007aba   0000     nop                      
007abc   0000     nop                      
007abe   0000     nop                      
007ac0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7AC0
007ac2   0000     nop                      
007ac4   0000     nop                      
007ac6   0000     nop                      
007ac8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7AC8
007aca   0000     nop                      
007acc   0000     nop                      
007ace   0000     nop                      
007ad0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7AD0
007ad2   0000     nop                      
007ad4   0000     nop                      
007ad6   0000     nop                      
007ad8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7AD8
007ada   0000     nop                      
007adc   0000     nop                      
007ade   0000     nop                      
007ae0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7AE0
007ae2   0000     nop                      
007ae4   0000     nop                      
007ae6   0000     nop                      
007ae8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7AE8
007aea   0000     nop                      
007aec   0000     nop                      
007aee   0000     nop                      
007af0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7AF0
007af2   0000     nop                      
007af4   0000     nop                      
007af6   0000     nop                      
007af8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7AF8
007afa   0000     nop                      
007afc   0000     nop                      
007afe   0000     nop                      
007b00   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B00
007b02   0000     nop                      
007b04   0000     nop                      
007b06   0000     nop                      
007b08   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B08
007b0a   0000     nop                      
007b0c   0000     nop                      
007b0e   0000     nop                      
007b10   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B10
007b12   0000     nop                      
007b14   0000     nop                      
007b16   0000     nop                      
007b18   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B18
007b1a   0000     nop                      
007b1c   0000     nop                      
007b1e   0000     nop                      
007b20   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B20
007b22   0000     nop                      
007b24   0000     nop                      
007b26   0000     nop                      
007b28   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B28
007b2a   0000     nop                      
007b2c   0000     nop                      
007b2e   0000     nop                      
007b30   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B30
007b32   0000     nop                      
007b34   0000     nop                      
007b36   0000     nop                      
007b38   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B38
007b3a   0000     nop                      
007b3c   0000     nop                      
007b3e   0000     nop                      
007b40   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B40
007b42   0000     nop                      
007b44   0000     nop                      
007b46   0000     nop                      
007b48   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B48
007b4a   0000     nop                      
007b4c   0000     nop                      
007b4e   0000     nop                      
007b50   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B50
007b52   0000     nop                      
007b54   0000     nop                      
007b56   0000     nop                      
007b58   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B58
007b5a   0000     nop                      
007b5c   0000     nop                      
007b5e   0000     nop                      
007b60   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B60
007b62   0000     nop                      
007b64   0000     nop                      
007b66   0000     nop                      
007b68   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B68
007b6a   0000     nop                      
007b6c   0000     nop                      
007b6e   0000     nop                      
007b70   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B70
007b72   0000     nop                      
007b74   0000     nop                      
007b76   0000     nop                      
007b78   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B78
007b7a   0000     nop                      
007b7c   0000     nop                      
007b7e   0000     nop                      
007b80   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B80
007b82   0000     nop                      
007b84   0000     nop                      
007b86   0000     nop                      
007b88   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B88
007b8a   0000     nop                      
007b8c   0000     nop                      
007b8e   0000     nop                      
007b90   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B90
007b92   0000     nop                      
007b94   0000     nop                      
007b96   0000     nop                      
007b98   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7B98
007b9a   0000     nop                      
007b9c   0000     nop                      
007b9e   0000     nop                      
007ba0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7BA0
007ba2   0000     nop                      
007ba4   0000     nop                      
007ba6   0000     nop                      
007ba8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7BA8
007baa   0000     nop                      
007bac   0000     nop                      
007bae   0000     nop                      
007bb0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7BB0
007bb2   0000     nop                      
007bb4   0000     nop                      
007bb6   0000     nop                      
007bb8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7BB8
007bba   0000     nop                      
007bbc   0000     nop                      
007bbe   0000     nop                      
007bc0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7BC0
007bc2   0000     nop                      
007bc4   0000     nop                      
007bc6   0000     nop                      
007bc8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7BC8
007bca   0000     nop                      
007bcc   0000     nop                      
007bce   0000     nop                      
007bd0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7BD0
007bd2   0000     nop                      
007bd4   0000     nop                      
007bd6   0000     nop                      
007bd8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7BD8
007bda   0000     nop                      
007bdc   0000     nop                      
007bde   0000     nop                      
007be0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7BE0
007be2   0000     nop                      
007be4   0000     nop                      
007be6   0000     nop                      
007be8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7BE8
007bea   0000     nop                      
007bec   0000     nop                      
007bee   0000     nop                      
007bf0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7BF0
007bf2   0000     nop                      
007bf4   0000     nop                      
007bf6   0000     nop                      
007bf8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7BF8
007bfa   0000     nop                      
007bfc   0000     nop                      
007bfe   0000     nop                      
007c00   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C00
007c02   0000     nop                      
007c04   0000     nop                      
007c06   0000     nop                      
007c08   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C08
007c0a   0000     nop                      
007c0c   0000     nop                      
007c0e   0000     nop                      
007c10   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C10
007c12   0000     nop                      
007c14   0000     nop                      
007c16   0000     nop                      
007c18   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C18
007c1a   0000     nop                      
007c1c   0000     nop                      
007c1e   0000     nop                      
007c20   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C20
007c22   0000     nop                      
007c24   0000     nop                      
007c26   0000     nop                      
007c28   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C28
007c2a   0000     nop                      
007c2c   0000     nop                      
007c2e   0000     nop                      
007c30   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C30
007c32   0000     nop                      
007c34   0000     nop                      
007c36   0000     nop                      
007c38   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C38
007c3a   0000     nop                      
007c3c   0000     nop                      
007c3e   0000     nop                      
007c40   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C40
007c42   0000     nop                      
007c44   0000     nop                      
007c46   0000     nop                      
007c48   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C48
007c4a   0000     nop                      
007c4c   0000     nop                      
007c4e   0000     nop                      
007c50   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C50
007c52   0000     nop                      
007c54   0000     nop                      
007c56   0000     nop                      
007c58   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C58
007c5a   0000     nop                      
007c5c   0000     nop                      
007c5e   0000     nop                      
007c60   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C60
007c62   0000     nop                      
007c64   0000     nop                      
007c66   0000     nop                      
007c68   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C68
007c6a   0000     nop                      
007c6c   0000     nop                      
007c6e   0000     nop                      
007c70   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C70
007c72   0000     nop                      
007c74   0000     nop                      
007c76   0000     nop                      
007c78   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C78
007c7a   0000     nop                      
007c7c   0000     nop                      
007c7e   0000     nop                      
007c80   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C80
007c82   0000     nop                      
007c84   0000     nop                      
007c86   0000     nop                      
007c88   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C88
007c8a   0000     nop                      
007c8c   0000     nop                      
007c8e   0000     nop                      
007c90   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C90
007c92   0000     nop                      
007c94   0000     nop                      
007c96   0000     nop                      
007c98   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7C98
007c9a   0000     nop                      
007c9c   0000     nop                      
007c9e   0000     nop                      
007ca0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7CA0
007ca2   0000     nop                      
007ca4   0000     nop                      
007ca6   0000     nop                      
007ca8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7CA8
007caa   0000     nop                      
007cac   0000     nop                      
007cae   0000     nop                      
007cb0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7CB0
007cb2   0000     nop                      
007cb4   0000     nop                      
007cb6   0000     nop                      
007cb8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7CB8
007cba   0000     nop                      
007cbc   0000     nop                      
007cbe   0000     nop                      
007cc0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7CC0
007cc2   0000     nop                      
007cc4   0000     nop                      
007cc6   0000     nop                      
007cc8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7CC8
007cca   0000     nop                      
007ccc   0000     nop                      
007cce   0000     nop                      
007cd0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7CD0
007cd2   0000     nop                      
007cd4   0000     nop                      
007cd6   0000     nop                      
007cd8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7CD8
007cda   0000     nop                      
007cdc   0000     nop                      
007cde   0000     nop                      
007ce0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7CE0
007ce2   0000     nop                      
007ce4   0000     nop                      
007ce6   0000     nop                      
007ce8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7CE8
007cea   0000     nop                      
007cec   0000     nop                      
007cee   0000     nop                      
007cf0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7CF0
007cf2   0000     nop                      
007cf4   0000     nop                      
007cf6   0000     nop                      
007cf8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7CF8
007cfa   0000     nop                      
007cfc   0000     nop                      
007cfe   0000     nop                      
007d00   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D00
007d02   0000     nop                      
007d04   0000     nop                      
007d06   0000     nop                      
007d08   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D08
007d0a   0000     nop                      
007d0c   0000     nop                      
007d0e   0000     nop                      
007d10   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D10
007d12   0000     nop                      
007d14   0000     nop                      
007d16   0000     nop                      
007d18   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D18
007d1a   0000     nop                      
007d1c   0000     nop                      
007d1e   0000     nop                      
007d20   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D20
007d22   0000     nop                      
007d24   0000     nop                      
007d26   0000     nop                      
007d28   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D28
007d2a   0000     nop                      
007d2c   0000     nop                      
007d2e   0000     nop                      
007d30   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D30
007d32   0000     nop                      
007d34   0000     nop                      
007d36   0000     nop                      
007d38   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D38
007d3a   0000     nop                      
007d3c   0000     nop                      
007d3e   0000     nop                      
007d40   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D40
007d42   0000     nop                      
007d44   0000     nop                      
007d46   0000     nop                      
007d48   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D48
007d4a   0000     nop                      
007d4c   0000     nop                      
007d4e   0000     nop                      
007d50   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D50
007d52   0000     nop                      
007d54   0000     nop                      
007d56   0000     nop                      
007d58   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D58
007d5a   0000     nop                      
007d5c   0000     nop                      
007d5e   0000     nop                      
007d60   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D60
007d62   0000     nop                      
007d64   0000     nop                      
007d66   0000     nop                      
007d68   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D68
007d6a   0000     nop                      
007d6c   0000     nop                      
007d6e   0000     nop                      
007d70   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D70
007d72   0000     nop                      
007d74   0000     nop                      
007d76   0000     nop                      
007d78   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D78
007d7a   0000     nop                      
007d7c   0000     nop                      
007d7e   0000     nop                      
007d80   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D80
007d82   0000     nop                      
007d84   0000     nop                      
007d86   0000     nop                      
007d88   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D88
007d8a   0000     nop                      
007d8c   0000     nop                      
007d8e   0000     nop                      
007d90   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D90
007d92   0000     nop                      
007d94   0000     nop                      
007d96   0000     nop                      
007d98   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7D98
007d9a   0000     nop                      
007d9c   0000     nop                      
007d9e   0000     nop                      
007da0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7DA0
007da2   0000     nop                      
007da4   0000     nop                      
007da6   0000     nop                      
007da8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7DA8
007daa   0000     nop                      
007dac   0000     nop                      
007dae   0000     nop                      
007db0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7DB0
007db2   0000     nop                      
007db4   0000     nop                      
007db6   0000     nop                      
007db8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7DB8
007dba   0000     nop                      
007dbc   0000     nop                      
007dbe   0000     nop                      
007dc0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7DC0
007dc2   0000     nop                      
007dc4   0000     nop                      
007dc6   0000     nop                      
007dc8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7DC8
007dca   0000     nop                      
007dcc   0000     nop                      
007dce   0000     nop                      
007dd0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7DD0
007dd2   0000     nop                      
007dd4   0000     nop                      
007dd6   0000     nop                      
007dd8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7DD8
007dda   0000     nop                      
007ddc   0000     nop                      
007dde   0000     nop                      
007de0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7DE0
007de2   0000     nop                      
007de4   0000     nop                      
007de6   0000     nop                      
007de8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7DE8
007dea   0000     nop                      
007dec   0000     nop                      
007dee   0000     nop                      
007df0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7DF0
007df2   0000     nop                      
007df4   0000     nop                      
007df6   0000     nop                      
007df8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7DF8
007dfa   0000     nop                      
007dfc   0000     nop                      
007dfe   0000     nop                      
007e00   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E00
007e02   0000     nop                      
007e04   0000     nop                      
007e06   0000     nop                      
007e08   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E08
007e0a   0000     nop                      
007e0c   0000     nop                      
007e0e   0000     nop                      
007e10   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E10
007e12   0000     nop                      
007e14   0000     nop                      
007e16   0000     nop                      
007e18   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E18
007e1a   0000     nop                      
007e1c   0000     nop                      
007e1e   0000     nop                      
007e20   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E20
007e22   0000     nop                      
007e24   0000     nop                      
007e26   0000     nop                      
007e28   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E28
007e2a   0000     nop                      
007e2c   0000     nop                      
007e2e   0000     nop                      
007e30   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E30
007e32   0000     nop                      
007e34   0000     nop                      
007e36   0000     nop                      
007e38   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E38
007e3a   0000     nop                      
007e3c   0000     nop                      
007e3e   0000     nop                      
007e40   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E40
007e42   0000     nop                      
007e44   0000     nop                      
007e46   0000     nop                      
007e48   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E48
007e4a   0000     nop                      
007e4c   0000     nop                      
007e4e   0000     nop                      
007e50   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E50
007e52   0000     nop                      
007e54   0000     nop                      
007e56   0000     nop                      
007e58   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E58
007e5a   0000     nop                      
007e5c   0000     nop                      
007e5e   0000     nop                      
007e60   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E60
007e62   0000     nop                      
007e64   0000     nop                      
007e66   0000     nop                      
007e68   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E68
007e6a   0000     nop                      
007e6c   0000     nop                      
007e6e   0000     nop                      
007e70   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E70
007e72   0000     nop                      
007e74   0000     nop                      
007e76   0000     nop                      
007e78   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E78
007e7a   0000     nop                      
007e7c   0000     nop                      
007e7e   0000     nop                      
007e80   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E80
007e82   0000     nop                      
007e84   0000     nop                      
007e86   0000     nop                      
007e88   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E88
007e8a   0000     nop                      
007e8c   0000     nop                      
007e8e   0000     nop                      
007e90   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E90
007e92   0000     nop                      
007e94   0000     nop                      
007e96   0000     nop                      
007e98   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7E98
007e9a   0000     nop                      
007e9c   0000     nop                      
007e9e   0000     nop                      
007ea0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7EA0
007ea2   0000     nop                      
007ea4   0000     nop                      
007ea6   0000     nop                      
007ea8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7EA8
007eaa   0000     nop                      
007eac   0000     nop                      
007eae   0000     nop                      
007eb0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7EB0
007eb2   0000     nop                      
007eb4   0000     nop                      
007eb6   0000     nop                      
007eb8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7EB8
007eba   0000     nop                      
007ebc   0000     nop                      
007ebe   0000     nop                      
007ec0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7EC0
007ec2   0000     nop                      
007ec4   0000     nop                      
007ec6   0000     nop                      
007ec8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7EC8
007eca   0000     nop                      
007ecc   0000     nop                      
007ece   0000     nop                      
007ed0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7ED0
007ed2   0000     nop                      
007ed4   0000     nop                      
007ed6   0000     nop                      
007ed8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7ED8
007eda   0000     nop                      
007edc   0000     nop                      
007ede   0000     nop                      
007ee0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7EE0
007ee2   0000     nop                      
007ee4   0000     nop                      
007ee6   0000     nop                      
007ee8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7EE8
007eea   0000     nop                      
007eec   0000     nop                      
007eee   0000     nop                      
007ef0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7EF0
007ef2   0000     nop                      
007ef4   0000     nop                      
007ef6   0000     nop                      
007ef8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7EF8
007efa   0000     nop                      
007efc   0000     nop                      
007efe   0000     nop                      
007f00   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F00
007f02   0000     nop                      
007f04   0000     nop                      
007f06   0000     nop                      
007f08   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F08
007f0a   0000     nop                      
007f0c   0000     nop                      
007f0e   0000     nop                      
007f10   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F10
007f12   0000     nop                      
007f14   0000     nop                      
007f16   0000     nop                      
007f18   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F18
007f1a   0000     nop                      
007f1c   0000     nop                      
007f1e   0000     nop                      
007f20   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F20
007f22   0000     nop                      
007f24   0000     nop                      
007f26   0000     nop                      
007f28   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F28
007f2a   0000     nop                      
007f2c   0000     nop                      
007f2e   0000     nop                      
007f30   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F30
007f32   0000     nop                      
007f34   0000     nop                      
007f36   0000     nop                      
007f38   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F38
007f3a   0000     nop                      
007f3c   0000     nop                      
007f3e   0000     nop                      
007f40   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F40
007f42   0000     nop                      
007f44   0000     nop                      
007f46   0000     nop                      
007f48   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F48
007f4a   0000     nop                      
007f4c   0000     nop                      
007f4e   0000     nop                      
007f50   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F50
007f52   0000     nop                      
007f54   0000     nop                      
007f56   0000     nop                      
007f58   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F58
007f5a   0000     nop                      
007f5c   0000     nop                      
007f5e   0000     nop                      
007f60   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F60
007f62   0000     nop                      
007f64   0000     nop                      
007f66   0000     nop                      
007f68   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F68
007f6a   0000     nop                      
007f6c   0000     nop                      
007f6e   0000     nop                      
007f70   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F70
007f72   0000     nop                      
007f74   0000     nop                      
007f76   0000     nop                      
007f78   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F78
007f7a   0000     nop                      
007f7c   0000     nop                      
007f7e   0000     nop                      
007f80   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F80
007f82   0000     nop                      
007f84   0000     nop                      
007f86   0000     nop                      
007f88   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F88
007f8a   0000     nop                      
007f8c   0000     nop                      
007f8e   0000     nop                      
007f90   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F90
007f92   0000     nop                      
007f94   0000     nop                      
007f96   0000     nop                      
007f98   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7F98
007f9a   0000     nop                      
007f9c   0000     nop                      
007f9e   0000     nop                      
007fa0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7FA0
007fa2   0000     nop                      
007fa4   0000     nop                      
007fa6   0000     nop                      
007fa8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7FA8
007faa   0000     nop                      
007fac   0000     nop                      
007fae   0000     nop                      
007fb0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7FB0
007fb2   0000     nop                      
007fb4   0000     nop                      
007fb6   0000     nop                      
007fb8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7FB8
007fba   0000     nop                      
007fbc   0000     nop                      
007fbe   0000     nop                      
007fc0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7FC0
007fc2   0000     nop                      
007fc4   0000     nop                      
007fc6   0000     nop                      
007fc8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7FC8
007fca   0000     nop                      
007fcc   0000     nop                      
007fce   0000     nop                      
007fd0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7FD0
007fd2   0000     nop                      
007fd4   0000     nop                      
007fd6   0000     nop                      
007fd8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7FD8
007fda   0000     nop                      
007fdc   0000     nop                      
007fde   0000     nop                      
007fe0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7FE0
007fe2   0000     nop                      
007fe4   0000     nop                      
007fe6   0000     nop                      
007fe8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7FE8
007fea   0000     nop                      
007fec   0000     nop                      
007fee   0000     nop                      
007ff0   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7FF0
007ff2   0000     nop                      
007ff4   0000     nop                      
007ff6   0000     nop                      
007ff8   0000     nop                          data 0x0000, 0x0000, 0x0000, 0x0000 ; 7FF8
007ffa   0000     nop                      
007ffc   0000     nop                      
007ffe   0000     nop                      
                                           
                                               end
